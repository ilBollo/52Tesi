Domanda: Quali sono i valori possibili dell'enumerato `HorizontalAlignment`?
Risposta: I valori possibili dell'enumerato `HorizontalAlignment` sono i seguenti: <br /><ul><li>`Left`: Allineamento orizzontale a sinistra.</li><li>`Center`: Allineamento orizzontale centrale.</li><li>`Right`: Allineamento orizzontale a destra.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `VerticalAlignment`?
Risposta: I valori possibili dell'enumerato `VerticalAlignment` sono i seguenti: <br /><ul><li>`Top`: Allineamento verticale in alto.</li><li>`Middle`: Allineamento verticale centrale.</li><li>`Bottom`: Allineamento verticale in basso               .</li><li>`Fill`: Allineamento verticale centrale, con altezza piena.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `IconPosition`?
Risposta: I valori possibili dell'enumerato `IconPosition` sono i seguenti: <br /><ul><li>`Left`: Posiziona l'icona a sinistra.</li><li>`Right`: Posiziona l'icona a destra.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `CaptionPosition`?
Risposta: I valori possibili dell'enumerato `CaptionPosition` sono i seguenti: <br /><ul><li>`Left`: Posizione il titolo del componente a sinistra del contenuto.</li><li>`Right`: Posizione il titolo del componente a destra del contenuto.</li><li>`Top`: Posizione il titolo del componente in alto rispetto al componente, centrato orizzontalmente.</li><li>`TopLeft`: Posizione il titolo del componente in alto a sinistra rispetto al componente, centrato orizzontalmente.</li><li>`TopRight`: Posizione il titolo del componente in alto a destra rispetto al componente, centrato orizzontalmente.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `TabSizes`?
Risposta: I valori possibili dell'enumerato `TabSizes` sono i seguenti: <br /><ul><li>`Auto`: Dimensione linguette di pagina adattata alla dimensione del testo.</li><li>`Fixed`: Dimensione linguette di pagina costante.\nLa dimensione Ã¨ determinata dalla classe css .cis-ui-tabcontrol-tabsarea[tabsize=\"fixed\"] .cis-ui-tabpage-header.</li><li>`Fill`: Dimensione linguette di pagina adattabile rispetto allo spazio.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `TabAlignments`?
Risposta: I valori possibili dell'enumerato `TabAlignments` sono i seguenti: <br /><ul><li>`Horizontal`: Le linguette di pagina vengono poste in alto rispetto al contenuto, in orizzontale.</li><li>`Vertical`: Le linguette di pagina vengono poste a sinistra rispetto al contenuto, in verticale.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `SubLevelMode`?
Risposta: I valori possibili dell'enumerato `SubLevelMode` sono i seguenti: <br /><ul><li>`Tabs`: Le liste innestate vengono raggruppate all'interno di un cis-ui:tabs.</li><li>`List`: Le liste innestate vengono appese alla riga di relazione.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `WindowStartPosition`?
Risposta: I valori possibili dell'enumerato `WindowStartPosition` sono i seguenti: <br /><ul><li>`Manual`: Posizione iniziale della window, impostata manualmente.</li><li>`CenterParent`: Posizione iniziale della window, impostata al automaticamente al centro dell'elemento contenitore.</li><li>`CenterScreen`: Posizione iniziale della window, impostata al automaticamente al centro dello schermo.</li><li>`CallingComponent`: Posizione del bottone che ha chiamato l'apertura della window.</li><li>`Custom`: Posizione iniziale della window, impostata manualmente.La reload della window non resetta la posizione.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `ReloadParentMode`?
Risposta: I valori possibili dell'enumerato `ReloadParentMode` sono i seguenti: <br /><ul><li>`none`: Non ricaricare l'oggetto che ha aperto questa window.</li><li>`window`: Ricarica la window che ha aperto questa window.</li><li>`list`: Ricarica la lista relativa al bottone che ha chiamato l'apertura di questa window.</li><li>`row`: Ricarica la riga della lista relativa al bottone che ha chiamato l'apertura di questa window.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `WindowState`?
Risposta: I valori possibili dell'enumerato `WindowState` sono i seguenti: <br /><ul><li>`Normal`: Dimensioni iniziali della window, preimpostate o calcolate.</li><li>`Minimized`: Dimensioni iniziali della window, minimizzate.</li><li>`Maximized`: Dimensioni iniziali della window, a tutto schermo.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `MessageTypes`?
Risposta: I valori possibili dell'enumerato `MessageTypes` sono i seguenti: <br /><ul><li>`Debug`: Messaggio di debug.</li><li>`Info`: Messaggio di informazioni              .</li><li>`Help`: Messaggio di help.</li><li>`Warning`: Messaggio di attenzione.</li><li>`Question`: Messaggio di domanda.</li><li>`Error`: Messaggio di errore.</li><li>`Fatal`: Messaggio di errore fatale.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `FieldToolTipIconPosition`?
Risposta: I valori possibili dell'enumerato `FieldToolTipIconPosition` sono i seguenti: <br /><ul><li>`CaptionLeft`: A sinistra rispetto al titolo del field.</li><li>`CaptionRight`: A destra rispetto al titolo del field.</li><li>`CaptionTopLeft`: In alto a sinistra rispetto al titolo del field.</li><li>`CaptionTopRight`: In alto a destra rispetto al titolo del field.</li><li>`ContentLeft`: A sinistra rispetto al corpo del field.</li><li>`ContentRight`: A destra rispetto al corpo del field.</li><li>`ContentTopLeft`: In alto a sinistra rispetto al corpo del field.</li><li>`ContentTopRight`: In alto a destra rispetto al corpo del field.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `TooltipPosition`?
Risposta: I valori possibili dell'enumerato `TooltipPosition` sono i seguenti: <br /><ul><li>`TopLeft`: Posiziona il tooltip totalmente in alto a sinitra.</li><li>`TopNear`: Posiziona il tooltip totalmente in alto, allineato a sinistra.</li><li>`Top`: Posiziona il tooltip totalmente in alto, allineato al centro.</li><li>`TopFar`: Posiziona il tooltip totalmente in alto, allineato a destra.</li><li>`TopRight`: Posiziona il tooltip totalmente in alto a destra.</li><li>`AscentLeft`: Posiziona il tooltip allineato in alto, totalmente a sinitra.</li><li>`AscentNear`: Posiziona il tooltip allineato in alto a sinitra.</li><li>`AscentCenter`: Posiziona il tooltip allineato in alto al centro.</li><li>`AscentFar`: Posiziona il tooltip allineato in alto a destra.</li><li>`AscentRight`: Posiziona il tooltip allineato in alto, totalmente a destra.</li><li>`Left`: Posiziona il tooltip allineato al centro, totalmente a sinistra.</li><li>`MiddleNear`: Posiziona il tooltip allineato al centro a sinitra.</li><li>`MiddleCenter`: Posiziona il tooltip allineato al centro.</li><li>`MiddleFar`: Posiziona il tooltip allineato al centro a destra.</li><li>`Right`: Posiziona il tooltip allineato al centro a sinitra.</li><li>`BaselineLeft`: Posiziona il tooltip allineato in basso, totalmente a sinitra.</li><li>`BaselineNear`: Posiziona il tooltip allineato in basso a sinitra.</li><li>`BaselineCenter`: Posiziona il tooltip allineato in basso al centro.</li><li>`BaselineFar`: Posiziona il tooltip allineato in basso a destra.</li><li>`BaselineRight`: Posiziona il tooltip allineato in basso, totalmente a destra.</li><li>`BottomLeft`: Posiziona il tooltip totalmente in basso a sinitra.</li><li>`BottomNear`: Posiziona il tooltip allineato in basso a sinitra.</li><li>`Bottom`: Posiziona il tooltip allineato in basso al centro.</li><li>`BottomFar`: Posiziona il tooltip allineato in basso a destra.</li><li>`BottomRight`: Posiziona il tooltip totalmente in basso a destra.</li><li>`Cursor`: Il tooltip segue il movimento del mouse.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `MessagePosition`?
Risposta: I valori possibili dell'enumerato `MessagePosition` sono i seguenti: <br /><ul><li>`Static`: Posizione predefinita.</li><li>`CenterScreen`: Posiziona il messaggio al centro dello schermo.</li><li>`TopLeft`: Posiziona il messaggio in alto a sinitra.</li><li>`Top`: Posiziona il messaggio in alto, allineato al centro.</li><li>`TopRight`: Posiziona il messaggio in alto a destra.</li><li>`FillTop`: Posiziona il messaggio in alto, con larghezza 100% della pagina.</li><li>`BottomLeft`: Posiziona il messaggio in basso a sinitra.</li><li>`Bottom`: Posiziona il messaggio allineato in basso al centro.</li><li>`FillBottom`: Posiziona il messaggio in basso, con larghezza 100% della pagina.</li><li>`BottomRight`: Posiziona il messaggio in basso a destra.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `NewRowPosition`?
Risposta: I valori possibili dell'enumerato `NewRowPosition` sono i seguenti: <br /><ul><li>`Top`: Posiziona la nuova riga in alto.</li><li>`Bottom`: Posiziona la nuova riga in basso.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `DateParts`?
Risposta: I valori possibili dell'enumerato `DateParts` sono i seguenti: <br /><ul><li>`None`: Nessun valore.</li><li>`Day`: Parte \"day\" della data.</li><li>`Month`: Parte \"month\" della data.</li><li>`Year`: Parte \"year\" della data.</li><li>`Hour`: Parte \"hour\" della data.</li><li>`Minute`: Parte \"minute\" della data.</li><li>`Second`: Parte \"second\" della data.</li><li>`Millisecond`: Parte \"millisecond\" della data.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `DecimalBoxCommandsPosition`?
Risposta: I valori possibili dell'enumerato `DecimalBoxCommandsPosition` sono i seguenti: <br /><ul><li>`Left`: Posizione comandi: a sinistra del contenuto.</li><li>`Right`: Posizione comandi: a destra del contenuto.</li><li>`Horizontal`: Posizione comandi: a sinistra e a destra del contenuto.</li><li>`Vertical`: Posizione comandi: sopra e sotto al contenuto.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `DecimalBoxType`?
Risposta: I valori possibili dell'enumerato `DecimalBoxType` sono i seguenti: <br /><ul><li>`Generic`: Rappresenta un numero decimale.</li><li>`Integer`: Rappresenta un numero intero: 10 precisione, 0 scala.</li><li>`Decimal`: Rappresenta un numero decimale.</li><li>`Currency`: Rappresenta una valuta: 10 precisione, 2 scala.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `TextBoxType`?
Risposta: I valori possibili dell'enumerato `TextBoxType` sono i seguenti: <br /><ul><li>`Generic`: Contenuto generico.</li><li>`Password`: Il contenuto Ã¨ una password.</li><li>`Email`: Il contenuto Ã¨ un'email.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `SwitchLabelsMode`?
Risposta: I valori possibili dell'enumerato `SwitchLabelsMode` sono i seguenti: <br /><ul><li>`None`: Senza labels.</li><li>`Labels`: Con labels: SI, NO.</li><li>`Icons`: Con icone.</li><li>`InnerLabels`: Con labels interne: SI, NO.</li><li>`InnerIcons`: Con icone interne.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `MessageMode`?
Risposta: I valori possibili dell'enumerato `MessageMode` sono i seguenti: <br /><ul><li>`Fixed`: .</li><li>`Toast`: .</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `DataType`?
Risposta: I valori possibili dell'enumerato `DataType` sono i seguenti: <br /><ul><li>`Int`:                .</li><li>`String`:                .</li><li>`Date`:                .</li><li>`DateTime`:                .</li><li>`Decimal`:                .</li><li>`Floating`:                .</li><li>`Money`:                .</li><li>`Bytes`:                .</li><li>`Bit`:                .</li><li>`HTML`:                .</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `PaginaMode`?
Risposta: I valori possibili dell'enumerato `PaginaMode` sono i seguenti: <br /><ul><li>`GEN`: Imposta la pagina in modalitÃ  GEN.</li><li>`LISTA`: Imposta la pagina in modalitÃ  LISTA.</li><li>`SINGLE`: Imposta la pagina in modalitÃ  SINGLE.</li><li>`STAMPA`: Imposta la pagina in modalitÃ  STAMPA.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `DocViewerMode`?
Risposta: I valori possibili dell'enumerato `DocViewerMode` sono i seguenti: <br /><ul><li>`Download`: Scarica direttamente il documento (attachment).</li><li>`View`: Visualizza il documento in un visualizzatore (se supportato) o cerca di aprirlo con le API di sistema (inline).</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `EncTypes`?
Risposta: I valori possibili dell'enumerato `EncTypes` sono i seguenti: <br /><ul><li>`FORMDATA`: multipart/form-data.</li><li>`URLENCODED`: application/x-www-form-urlencoded.</li><li>`TEXTPLAIN`: text/plain.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `Passo`?
Risposta: I valori possibili dell'enumerato `Passo` sono i seguenti: <br /><ul><li>`PARAMETRI`: Richiesta parametri all'utente.</li><li>`PRESENTAZIONE`: Presentazione dati dopo l'inserimento dei parametri.</li><li>`ESECUZIONE`: Esecuzione di una richiesta.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `Modalita`?
Risposta: I valori possibili dell'enumerato `Modalita` sono i seguenti: <br /><ul><li>`V`: ModalitÃ  in visualizzazione.</li><li>`I`: ModalitÃ  in inserimento.</li><li>`R`: ModalitÃ  in modifica.</li><li>`C`: ModalitÃ  in cancellazione.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `ClickTrigger`?
Risposta: I valori possibili dell'enumerato `ClickTrigger` sono i seguenti: <br /><ul><li>`None`: Nessuna azione al click.</li><li>`Click`: Trigger mouse click.</li><li>`DoubleClick`: Trigger mouse double click.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `ComboBoxStyle`?
Risposta: I valori possibili dell'enumerato `ComboBoxStyle` sono i seguenti: <br /><ul><li>`ComboBox`: Stile ComboBox.</li><li>`TextBox`: Stile TextBox.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `FilterType`?
Risposta: I valori possibili dell'enumerato `FilterType` sono i seguenti: <br /><ul><li>`Full`: Ricerca like destra e sinistra.</li><li>`Half`: Ricerca like solo destra.</li><li>`Exact`: Ricerca il testo esatto.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `SliderType`?
Risposta: I valori possibili dell'enumerato `SliderType` sono i seguenti: <br /><ul><li>`Single`: Slider a valore singolo.</li><li>`Range`: Slider a valore doppio.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `SliderBarStyle`?
Risposta: I valori possibili dell'enumerato `SliderBarStyle` sono i seguenti: <br /><ul><li>`Thin`: Stile sottile.</li><li>`Normal`: Stile default.</li><li>`Large`: Stile grosso.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `SliderGuideMode`?
Risposta: I valori possibili dell'enumerato `SliderGuideMode` sono i seguenti: <br /><ul><li>`Adaptive`: La scala si adatta dinamicamente alla dimensione dello slider.</li><li>`MinMax`: La scala presenta solo i valori min e max.</li><li>`MinMaxHalf`: La scala presenta solo i valori min, max e 50%.</li><li>`Fixed`: La scala Ã¨ costruita con un numero preciso di intervalli, equivalente al parametro StepGuide o Step.</li><li>`Interval`: La scala Ã¨ costruita con intervalli dettati dal parametro StepGuide o Step.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `SliderShape`?
Risposta: I valori possibili dell'enumerato `SliderShape` sono i seguenti: <br /><ul><li>`Round`: Forma slider rotonda.</li><li>`Square`: Forma slider quadrata.</li><li>`InnerLabels`: Con labels interne: SI, NO.</li><li>`InnerIcons`: Con icone interne.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `ColorSpace`?
Risposta: I valori possibili dell'enumerato `ColorSpace` sono i seguenti: <br /><ul><li>`HEX`: Stringa esadecimale.</li><li>`RGB`: Red/Green/Blue.</li><li>`HSL`: Hue/Saturation/Lightness.</li><li>`HSV`: Hue/Saturation/Value (Brightness).</li><li>`HWB`: Hue/Whiteness/Blackness.</li><li>`CMYK`: Cyan/Magenta/Yellow/Key (Black).</li><li>`XYZ`: CIE 1931 XYZ color space.</li><li>`LAB`: CIELAB color space.</li><li>`LCH`: Lightness/Chroma/Hue (CIECLH color space).</li><li>`HCG`: a.k.a HCV - Hue/Chroma/Value.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `ButtonGroupSize`?
Risposta: I valori possibili dell'enumerato `ButtonGroupSize` sono i seguenti: <br /><ul><li>`Auto`: Dimensione elementi adattati alla dimensione del testo.</li><li>`Fill`: Dimensione elementi adattabile rispetto allo spazio.</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `ButtonGroupAlignment`?
Risposta: I valori possibili dell'enumerato `ButtonGroupAlignment` sono i seguenti: <br /><ul><li>`Horizontal`: .</li><li>`Vertical`: .</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `SwitchButtonAlignment`?
Risposta: I valori possibili dell'enumerato `SwitchButtonAlignment` sono i seguenti: <br /><ul><li>`Horizontal`: .</li><li>`Vertical`: .</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `SwitchButtonStyle`?
Risposta: I valori possibili dell'enumerato `SwitchButtonStyle` sono i seguenti: <br /><ul><li>`None`: .</li><li>`Labels`: .</li><li>`Icons`: .</li></ul>
Domanda: Quali sono i valori possibili dell'enumerato `SwitchButtonOrder`?
Risposta: I valori possibili dell'enumerato `SwitchButtonOrder` sono i seguenti: <br /><ul><li>`FALSE_TRUE`: .</li><li>`TRUE_FALSE`: .</li><li>`FALSE_INDETERMINATE_TRUE`: .</li><li>`FALSE_TRUE_INDETERMINATE`: .</li><li>`TRUE_INDETERMINATE_FALSE`: .</li><li>`TRUE_FALSE_INDETERMINATE`: .</li><li>`INDETERMINATE_TRUE_FALSE`: .</li><li>`INDETERMINATE_FALSE_TRUE`: .</li></ul>
Domanda: Quali sono i componenti che si possono creare con Boston?
Risposta: I componenti che si possono creare con Boston sono i seguenti: <br /><ul><li>`cis-ui:button`</li><li>`cis-ui:buttongroup`</li><li>`cis-ui:calendar`</li><li>`cis-ui:check`</li><li>`cis-ui:colorpicker`</li><li>`cis-ui:combo`</li><li>`cis-ui:contextmenu`</li><li>`cis-ui:date`</li><li>`cis-ui:decimal`</li><li>`cis-ui:deco`</li><li>`cis-ui:dialog`</li><li>`cis-ui:docviewer`</li><li>`cis-ui:doublelist`</li><li>`cis-ui:editor`</li><li>`cis-ui:file`</li><li>`cis-ui:framedwindow`</li><li>`cis-ui:hamburgermenu`</li><li>`cis-ui:hidden`</li><li>`cis-ui:hms`</li><li>`cis-ui:int`</li><li>`cis-ui:label`</li><li>`cis-ui:link`</li><li>`cis-ui:list`</li><li>`cis-ui:lista-delete`</li><li>`cis-ui:lista-edit`</li><li>`cis-ui:lista-nuovo`</li><li>`cis-ui:lista-saveall`</li><li>`cis-ui:menu`</li><li>`cis-ui:message`</li><li>`cis-ui:messagebox`</li><li>`cis-ui:messagehandler`</li><li>`cis-ui:messageholder`</li><li>`cis-ui:money`</li><li>`cis-ui:nuovo`</li><li>`cis-ui:printexcel`</li><li>`cis-ui:printpdf`</li><li>`cis-ui:progressbar`</li><li>`cis-ui:radio`</li><li>`cis-ui:request`</li><li>`cis-ui:responsivemenu`</li><li>`cis-ui:searchpanel`</li><li>`cis-ui:slider`</li><li>`cis-ui:submit`</li><li>`cis-ui:switch`</li><li>`cis-ui:switchbutton`</li><li>`cis-ui:tabcontrol`</li><li>`cis-ui:text`</li><li>`cis-ui:time`</li><li>`cis-ui:toast`</li><li>`cis-ui:tooltip`</li><li>`cis-ui:tooltipicon`</li><li>`cis-ui:treeview`</li><li>`cis:databox`</li><li>`cis:editorconfig`</li><li>`cis:error`</li><li>`cis:help`</li><li>`cis:info`</li><li>`cis:inlinelayout`</li><li>`cis:lista`</li><li>`cis:pagina`</li><li>`cis:printform`</li><li>`cis:single`</li><li>`cis:single-button`</li><li>`cis:table`</li><li>`cis:tablelayout`</li><li>`cis:warn`</li><li>`cis:webcall`</li>
Domanda: A cosa serve il componente `button`?
Risposta: Il componente `button` Rappresenta un bottone che risponde all'evento click del mouse
Domanda: Come si crea un componente `button`?
Risposta: Ecco un esempio di base di creazione di un componente `button`:<br /><pre><code><cis-ui:button text=\"bottone\">\n    <click>\n        function() {\n            console.log('ciao');\n        }\n    </click>\n</cis-ui:button></code></pre>
Domanda: Quali sono gli attributi del componente `button`?
Risposta: Gli attributi del componente `button` sono i seguenti: <br /><ul><li>`icon`</li><li>`iconposition`</li><li>`text`</li><li>`wrap`</li></ul>
Domanda: Quali sono gli eventi del componente `button`?
Risposta: Gli eventi del componente `button` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `id` del componente `button`?
Risposta: Attributo id dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `name` del componente `button`?
Risposta: Attributo name dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `varname` del componente `button`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve la proprietÃ  `tooltip` del componente `button`?
Risposta: Testo del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione
Domanda: A cosa serve la proprietÃ  `tooltipposition` del componente `button`?
Risposta: Posizione del tooltip.
Domanda: A cosa serve la proprietÃ  `style` del componente `button`?
Risposta: Stile CSS inline dell'elemento HTML principale
Domanda: A cosa serve la proprietÃ  `mainclass` del componente `button`?
Risposta: Classe CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente
Domanda: A cosa serve la proprietÃ  `role` del componente `button`?
Risposta: Attributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript
Domanda: A cosa serve la proprietÃ  `skin` del componente `button`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css
Domanda: A cosa serve la proprietÃ  `hidden` del componente `button`?
Risposta: Se true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento
Domanda: A cosa serve la proprietÃ  `unselectable` del componente `button`?
Risposta: Se true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu
Domanda: A cosa serve la proprietÃ  `disabled` del componente `button`?
Risposta: Se true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento
Domanda: A cosa serve la proprietÃ  `contextMenuEnabled` del componente `button`?
Risposta: Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.
Domanda: A cosa serve la proprietÃ  `flexible` del componente `button`?
Risposta: Se true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento
Domanda: A cosa serve la proprietÃ  `userattrs` del componente `button`?
Risposta: Elenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"
Domanda: A cosa serve la proprietÃ  `height` del componente `button`?
Risposta: Imposta il valore \"height\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `width` del componente `button`?
Risposta: Imposta il valore \"width\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `left` del componente `button`?
Risposta: Imposta il valore \"left\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `top` del componente `button`?
Risposta: Imposta il valore \"top\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `permessi` del componente `button`?
Risposta: Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no
Domanda: A cosa serve la proprietÃ  `tmode` del componente `button`?
Risposta: Indica se il componente Ã¨ in modalitÃ  T (liste inline)
Domanda: A cosa serve la proprietÃ  `colspan` del componente `button`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeclick` del componente `button`?
Risposta: Evento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.
Domanda: A cosa serve l'evento `click` del componente `button`?
Risposta: Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)
Domanda: A cosa serve l'evento `ready` del componente `button`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato
Domanda: A cosa serve l'evento `connected` del componente `button`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato
Domanda: A cosa serve l'evento `responsiveChanged` del componente `button`?
Risposta: Evento chiamato quando il componente cambia stato responsive
Domanda: A cosa serve il componente `buttongroup`?
Risposta: Il componente `buttongroup` Rappresenta un'elenco di valori a scelta esclusiva.\nIl valore inviato al server Ã¨ il valore attribuito al bottone selezionato
Domanda: Come si crea un componente `buttongroup`?
Risposta: Ecco un esempio di base di creazione di un componente `buttongroup`:<br /><pre><code><cis-ui:buttongroup caption=\"titolo\">\nPippo\" value=\"1\" />\nPluto\" value=\"2\" />\nPaperino\" value=\"3\" />\ny-of select=\"/DOCUMENTO/valore\"/></nodo>\ngroup></code></pre>
Domanda: Quali sono gli attributi del componente `buttongroup`?
Risposta: Gli attributi del componente `buttongroup` sono i seguenti: <br /><ul><li>`alignment`</li><li>`button`</li><li>`buttonsize`</li><li>`multiselect`</li><li>`displayformat`</li><li>`enumerato`</li><li>`keyattr`</li><li>`recordenumerato`</li><li>`valueattrs`</li></ul>
Domanda: Quali sono gli eventi del componente `buttongroup`?
Risposta: Gli eventi del componente `buttongroup` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `buttongroup`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `buttongroup`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `buttongroup`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `buttongroup`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `buttongroup`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `buttongroup`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `buttongroup`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `buttongroup`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `buttongroup`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `buttongroup`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `buttongroup`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `buttongroup`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `buttongroup`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `buttongroup`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `buttongroup`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `buttongroup`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `buttongroup`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `buttongroup`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `buttongroup`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `buttongroup`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `buttongroup`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `buttongroup`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `buttongroup`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `buttongroup`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `calendar`?
Risposta: Il componente `calendar` Rappresenta un componente che consente a un utente di selezionare una data mediante una rappresentazione visiva del calendario.\nUn componente calendar mostra tutti i giorni di uno specifico mese, in modo che sia semplice selezionare una data con il mouse. \nIl valore passato al server Ã¨ la data selezionata formattata secondo i parametri \"from\" e \"to\"
Domanda: Come si crea un componente `calendar`?
Risposta: Ecco un esempio di base di creazione di un componente `calendar`:<br /><pre><code><cis-ui:calendar caption=\"Titolo\">\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/DtImpiego\"/></nodo>\n</cis-ui:calendar></code></pre>
Domanda: Quali sono gli attributi del componente `calendar`?
Risposta: Gli attributi del componente `calendar` sono i seguenti: <br /><ul><li>`from`</li><li>`holidays`</li><li>`maxvalue`</li><li>`minvalue`</li><li>`offdaysdisabled`</li><li>`to`</li></ul>
Domanda: Quali sono gli eventi del componente `calendar`?
Risposta: Gli eventi del componente `calendar` sono i seguenti: <br /><ul><li>`renderday`</li><li>`dayclick`</li><li>`rangechanged`</li></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `calendar`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `calendar`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `calendar`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `calendar`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `calendar`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `calendar`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `calendar`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `calendar`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `calendar`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `calendar`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `calendar`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `calendar`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `calendar`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `calendar`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `calendar`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `calendar`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `calendar`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `calendar`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `calendar`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `calendar`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `calendar`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `calendar`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `calendar`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `calendar`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `check`?
Risposta: Il componente `check` Rappresenta un componente che un utente puÃ² selezionare e deselezionare. \nUn checkbox Ã¨ campo booleano a due stati, true e false.\nE' possibile identificare quali valori rappresentano gli stati \"true\" e \"false\".\nE' possibile aggiungere un terzo stato al campo, che prende il valore di \"indeterminate\" (null), tramite l'elemento/attributo \"threestate\".\nInformazioni inviate al server:\nSe il valore Ã¨ true, viene inviato name=truevalue.\nSe il valore Ã¨ false, e threestate Ã¨ true, inviato name=falsevalue.\nSe il valore Ã¨ false, e threestate Ã¨ false, inviato name=.\nSe il valore Ã¨ null, il valore non viene inviato.
Domanda: Come si crea un componente `check`?
Risposta: Ecco un esempio di base di creazione di un componente `check`:<br /><pre><code><cis-ui:check caption=\"Titolo\">\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/SESSIONE/Amministratore\"/></nodo>\n</cis-ui:check></code></pre>
Domanda: Quali sono gli attributi del componente `check`?
Risposta: Gli attributi del componente `check` sono i seguenti: <br /><ul><li>`checked`</li><li>`falselabel`</li><li>`falsevalue`</li><li>`threestate`</li><li>`truelabel`</li><li>`truevalue`</li><li>`decomode`</li><li>`showfalsevalue`</li></ul>
Domanda: Quali sono gli eventi del componente `check`?
Risposta: Gli eventi del componente `check` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `check`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `check`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `check`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `check`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `check`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `check`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `check`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `check`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `check`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `check`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `check`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `check`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `check`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `check`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `check`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `check`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `check`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `check`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `check`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `check`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `check`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `check`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `check`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `check`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `colorpicker`?
Risposta: Il componente `colorpicker` Rappresenta un selettore di colore.\nIl valore Ã¨ selezionabile combinando vari slider a seconda dello spazio di colori desiderato.\nPer i browser compatibili con l'api EyeDropper, Ã¨ disponibile un selettore a contagocce
Domanda: Come si crea un componente `colorpicker`?
Risposta: Ecco un esempio di base di creazione di un componente `colorpicker`:<br /><pre><code><cis-ui:colorpicker caption=\"Titolo\">\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/valore\"/></nodo>\n</cis-ui:colorpicker></code></pre>
Domanda: Quali sono gli attributi del componente `colorpicker`?
Risposta: Gli attributi del componente `colorpicker` sono i seguenti: <br /><ul><li>`colorSpaces`</li><li>`withAlpha`</li><li>`dynamicColor`</li><li>`eyeDropper`</li></ul>
Domanda: Quali sono gli eventi del componente `colorpicker`?
Risposta: Gli eventi del componente `colorpicker` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `colorpicker`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `colorpicker`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `colorpicker`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `colorpicker`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `colorpicker`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `colorpicker`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `colorpicker`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `colorpicker`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `colorpicker`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `colorpicker`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `colorpicker`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `colorpicker`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `colorpicker`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `colorpicker`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `colorpicker`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `colorpicker`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `colorpicker`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `colorpicker`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `colorpicker`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `colorpicker`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `colorpicker`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `colorpicker`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `colorpicker`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `colorpicker`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `combo`?
Risposta: Il componente `combo` Componente per la visualizzazione di un elenco di elementi di dati.\nUn combobox Ã¨ campo composto da un'input di tipo testo e una lista associata.\nIl valore del campo Ã¨ dato dal valore della chiave dei record selezionati della lista.\nSe sono selezionati piÃ¹ elementi, il valore inviato al server Ã¨ la serializzazione di tutti gli attributi chiave selezionati, separati da virgola.\nE' possibile aggiungere un elemento \"request\" per filtrare il contenuto della lista tramite delle chiamate AJAX
Domanda: Come si crea un componente `combo`?
Risposta: Ecco un esempio di base di creazione di un componente `combo`:<br /><pre><code><cis-ui:combo caption=\"Titolo\">\n    <enumerato><xsl:copy-of select=\"/DOCUMENTO/LstImpiego\"/></enumerato>\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/CdImpiego\"/></nodo>\n</cis-ui:combo></code></pre>
Domanda: Quali sono gli attributi del componente `combo`?
Risposta: Gli attributi del componente `combo` sono i seguenti: <br /><ul><li>`autoselectfirst`</li><li>`autoSelectOne`</li><li>`autosize`</li><li>`clearable`</li><li>`clearListOnClose`</li><li>`comboStyle`</li><li>`filterType`</li><li>`editable`</li><li>`placeholder`</li><li>`linkedfield`</li><li>`loadonclick`</li><li>`listFixedWidth`</li><li>`searchDelay`</li></ul>
Domanda: Quali sono gli eventi del componente `combo`?
Risposta: Gli eventi del componente `combo` sono i seguenti: <br /><ul><li>`focusout`</li><li>`keydown`</li><li>`keypress`</li></ul>
Domanda: A cosa serve la proprietÃ  `columns` del componente `combo`?
Risposta: Sequenza dei mapping delle colonne della sorgente dati.\nSe il parametro \"name\" di un elemento di sequenza corrisponde ad una colonna della sorgente dati, le proprietÃ  della colonna originale verranno sovrascritte.\nShortcut di data.columns
Domanda: A cosa serve la proprietÃ  `canwrap` del componente `combo`?
Risposta: Se true, i caratteri newline presenti nelle celle della sorgente dati verranno convertiti in <br />.
Domanda: A cosa serve la proprietÃ  `displayformat` del componente `combo`?
Risposta: Formato dell'elemento selezionato.\nE' possibile riferirsi alle colonne della sorgente dati con il prefisso \"#\" (case insensitive).\nAd esempio: #cognome #nome nato il #datanascita
Domanda: A cosa serve la proprietÃ  `enumerato` del componente `combo`?
Risposta: Elemento che contiene le informazioni di decodifica del valore del componente.\nE possibile utilizzarlo come copy-of di un nodo, come riferimento ad un enumerato o come riferimento ad un nodo.\nLe informazioni vengono cercate in questo ordine:\nse esiste un attributo @enumerato=***valore*** nel nodo <cis-ui:label> viene preso /DOCUMENTO/*[@tipo='ENUMERATO' and @fullname=***valore***] \nse esiste un elemento <enumerato>***valore***</enumerato> figlio del nodo <cis-ui:label> viene preso /DOCUMENTO/*[@tipo='ENUMERATO' and @fullname=***valore***]\nse esiste un elemento <decodifica enumerato=***valore*** /> figlio del nodo <cis-ui:label> viene preso /DOCUMENTO/*[@fullname=***valore***]\nse esiste un elemento <decodifica> di tipo nodo, figlio del nodo <cis-ui:label> viene presa la copia del nodo\nse esiste un elemento <decodifica> di tipo testo, figlio del nodo <cis-ui:label> viene preso /DOCUMENTO/*[name()=***valore***]
Domanda: A cosa serve la proprietÃ  `enumjs` del componente `combo`?
Risposta: Shortcut per <enumerato js=\"true\">CIS.Data.DataList.cloneFrom(xxx)</enumerato>
Domanda: A cosa serve la proprietÃ  `keepselection` del componente `combo`?
Risposta: Se true, l'elemento selezionato rimane attivo.
Domanda: A cosa serve la proprietÃ  `keyattr` del componente `combo`?
Risposta: Il nome della colonna della sorgente dati che contiene i valori chiave.\nDi default Ã¨ la colonna in posizione 0
Domanda: A cosa serve la proprietÃ  `filter` del componente `combo`?
Risposta: Valore iniziale del filtro da applicare alla sorgente dati.\nIl filtro viene eseguito con l'operatore like su tutte le colonne della sorgente dati.
Domanda: A cosa serve la proprietÃ  `maxitems` del componente `combo`?
Risposta: Imposta il limite massimo degli elementi visualizzabili
Domanda: A cosa serve la proprietÃ  `recordenumerato` del componente `combo`?
Risposta: Il nome del nodo dell'enumerato che identifica il record.
Domanda: A cosa serve la proprietÃ  `multiselect` del componente `combo`?
Risposta: Abilita/disabilita la multiselezione
Domanda: A cosa serve la proprietÃ  `readonly` del componente `combo`?
Risposta: Se true, la lista non Ã¨ selezionabile
Domanda: A cosa serve la proprietÃ  `request` del componente `combo`?
Risposta: Parametri del comando ajax associato al componente.\nSe esiste questo parametro, viene lanciato un comando ajax ogni volta che si richiede di filtrare la sorgente dati tramite i metodi \"filter\" e \"filterByKey\".\nSe al componente Ã¨ associato un valore iniziale, viene lanciato un comando ajax per richiedere la decodifica del valore.\nIl comando ajax invia due parametri di default: \n\"decodifica\" (true/false) viene inviato quando Ã¨ richiesta la decodifica del valore.\n\"ricerca\" (string) Ã¨ il valore corrente dell'input di testo del componente, e viene inviato al cambio del valore dell'input da parte dell'utente.
Domanda: A cosa serve la proprietÃ  `rows` del componente `combo`?
Risposta: Sequenza fissa di record aggiunti al componente in modo manuale
Domanda: A cosa serve la proprietÃ  `selectionboxvisible` del componente `combo`?
Risposta: Mostra/nasconde le caselle di selezione a inizio riga.\nVale true se \"multiselect\" Ã¨ true.
Domanda: A cosa serve la proprietÃ  `selectiondisabled` del componente `combo`?
Risposta: Se true, il componente rimane attivo ma la selezione degli elementi Ã¨ disabilitata
Domanda: A cosa serve la proprietÃ  `sortable` del componente `combo`?
Risposta: Se true, abilita la funzione di ordinamento disponibile cliccando sugli header di colonna.
Domanda: A cosa serve la proprietÃ  `sorticon` del componente `combo`?
Risposta: Classe css dell'icona mostrata sugli header di riga per ordinare la sorgente dati.\nLa direzione dell'ordinamento Ã¨ ottenuta in css tramite l'attributo \"sortorder\" presente nell'header di riga
Domanda: A cosa serve la proprietÃ  `valueattrs` del componente `combo`?
Risposta: Il nome della colonna della sorgente dati che contiene il valore descrittivo.\nDi default Ã¨ la colonna in posizione 1.\nSe il valore descrittivo Ã¨ contenuto in piÃ¹ colonne, occorre separare le colonne con \",\" (case insensitive).\nAd es: nome,cognome,datanascita\nSe si vogliono mostrare tutte le colonne utilizzare il valore \"*\".\nSe si vogliono mostrare tutte le colonne senza il campo chiave utilizzare il valore \"/\".
Domanda: A cosa serve la proprietÃ  `visibleitems` del componente `combo`?
Risposta: Imposta il numero degli elementi sempre visibili nel componente.\nPer calcolare l'altezza del componente viene presa come riferimento l'altezza dela prima riga e moltiplicata per questo valore
Domanda: A cosa serve la proprietÃ  `title` del componente `combo`?
Risposta: Titolo della lista (titlebar)               
Domanda: A cosa serve la proprietÃ  `withheaders` del componente `combo`?
Risposta: Mostra/nasconde gli header di colonna.\nVale true se \"valueattrs\" contiene piÃ¹ di un elemento.
Domanda: A cosa serve la proprietÃ  `withmenu` del componente `combo`?
Risposta: Abilita/disabilita il menu contestuale.
Domanda: A cosa serve la proprietÃ  `withrowcount` del componente `combo`?
Risposta: Abilita/disabilita il conteggio delle righe, che appare nella barra del titolo.
Domanda: A cosa serve la proprietÃ  `withtitle` del componente `combo`?
Risposta: Mostra/nasconde la barra del titolo.\nVale true se \"title\" Ã¨ valorizzato.
Domanda: A cosa serve la proprietÃ  `` del componente `combo`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente\n\nPosizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields\n\nImposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"\n\nSe true, il valore \"0\" viene omesso.\n\nImposta il lovale specifico di questo campo\n\nSe true, il campo viene renderizzato solo come label.\n\nIl nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"\n\nFunzione di validazione personalizzata utente\n\nSe true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.\n\nTesto del tooltip quando il componente non ha valore e required Ã¨ 'true'\n\nImposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout\n\nSe true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.\n\nImposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.\n\nIl valore del campo\n\nEvento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato\n\nSe true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.\n\nClasse css dell'elemento contenitore dell'elemento corpo del componente e del testo del validatore.\n\nClasse css dell'elemento che contiene il corpo del componente.\n\nClasse css dell'elemento contenitore dell'elemento titolo del componente.\n\nStile inline dell'elemento contenitore dell'elemento titolo del componente (come captionHelperClass)\n\nClasse css dell'elemento che contiene il titolo del componente.\n\nClasse css dell'elemento che contiene l'elemento di input specifico del componente.\n\nClasse css dell'elemento che contiene il valore del componente in modalitÃ  \"labelonly\".\n\nClasse css dell'elemento contenitore del testo del validatore.\n\nClasse CSS dell'icona del validatore.\nSi puÃ² combinare questa classe con l'attributo state=\"error/valid\" per ottenere le 2 icone di stato\n\nParametri del tooltip di validazione\n\nSe true, lo stato grafico di \"valido\" Ã¨ visibile\n\nSe true, il testo del validatore viene nascosto a prescindere dallo stato\n\nOrdinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.\n\nParametri dell'icona del tooltip\n\nAttributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `datachanged` del componente `combo`?
Risposta: Evento lanciato quando la sorgente dati del componente riceve un aggiornamento
Domanda: A cosa serve l'evento `itemclick` del componente `combo`?
Risposta: Evento lanciato quando viene effettuato un click su un elemento di lista
Domanda: A cosa serve l'evento `itemdoubleclick` del componente `combo`?
Risposta: Evento lanciato quando viene effettuato un doppio click su un elemento di lista
Domanda: A cosa serve il componente `contextmenu`?
Risposta: Il componente `contextmenu` Rappresenta un menu contestuale.\nUn menu contestuale funziona come un menu principale, con la differenza che viene visualizzato a richiesta, attraverso il click con il pulsante destro o sinistro del mouse sull'elemento HTML che contiene il menu.
Domanda: Come si crea un componente `contextmenu`?
Risposta: Ecco un esempio di base di creazione di un componente `contextmenu`:<br /><pre><code><div style=\"height:10px;width:10px;border:1px solid black\">\n    <cis-ui:contextmenu>\n          <items>\n              <item text=\"Menu 1\" funzione=\"menu1\" />\n              <item text=\"Menu 2\" funzione=\"menu2\" />\n          </items>\n      </cis-ui:contextmenu>\n  </div></code></pre>
Domanda: Quali sono gli attributi del componente `contextmenu`?
Risposta: Gli attributi del componente `contextmenu` sono i seguenti: <br /><ul><li>`openonclick`</li></ul>
Domanda: Quali sono gli eventi del componente `contextmenu`?
Risposta: Gli eventi del componente `contextmenu` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `closeonmouseleave` del componente `contextmenu`?
Risposta: Se true, quando il mouse lascia una voce di menu ed Ã¨ passato tanto tempo quanto indicato da \"closeonmouseleavedelay\", il menu viene chiuso automaticamente.
Domanda: A cosa serve la proprietÃ  `closeonmouseleavedelay` del componente `contextmenu`?
Risposta: Associato a \"closeonmouseleave\". Indica il tempo dopo il quale il menu, che ha perso lo stato attivo, deve essere chiuso automaticamente.
Domanda: A cosa serve la proprietÃ  `items` del componente `contextmenu`?
Risposta: Sequenza di voci di menu
Domanda: A cosa serve la proprietÃ  `showicon` del componente `contextmenu`?
Risposta: Mostra/nasconde le icone delle voci di menu di primo livello.
Domanda: A cosa serve la proprietÃ  `showmenuhandler` del componente `contextmenu`?
Risposta: Mostra/nasconde le icone delle frecce delle voci di menu di primo livello.
Domanda: A cosa serve la proprietÃ  `showmenuitemhandler` del componente `contextmenu`?
Risposta: Mostra/nasconde le icone delle frecce delle voci di menu di n-esimo livello.
Domanda: A cosa serve la proprietÃ  `showsubicon` del componente `contextmenu`?
Risposta: Mostra/nasconde le icone delle voci di menu di n-esimo livello.
Domanda: A cosa serve la proprietÃ  `framecontainer` del componente `contextmenu`?
Risposta: Nome della variabile del componente cis-ui-tabcontrol associato al menu, in cui vengono aperte le pagine dell'applicativo
Domanda: A cosa serve la proprietÃ  `` del componente `contextmenu`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `itemclick` del componente `contextmenu`?
Risposta: Evento che viene lanciato quando una sottovoce di primo livello viene cliccata
Domanda: A cosa serve il componente `date`?
Risposta: Il componente `date` Rappresenta un campo data.\nConsente all'utente di selezionare una data digitando il valore in un campo di testo o utilizzando un componente a discesa Calendar.\nUn campo data Ã¨ la combinazione di un input di tipo testo e un calendario.\nIl valore passato al server Ã¨ l'esatto testo che compare nel campo di input.\nE' possibile specificare il formato di data/ora atteso combinando i parametri \"from\" e \"to\".
Domanda: Come si crea un componente `date`?
Risposta: Ecco un esempio di base di creazione di un componente `date`:<br /><pre><code><cis-ui:date caption=\"Titolo\">\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/DtImpiego\"/></nodo>\n</cis-ui:date></code></pre>
Domanda: Quali sono gli attributi del componente `date`?
Risposta: Gli attributi del componente `date` sono i seguenti: <br /><ul><li>`autotext`</li><li>`calendar`</li><li>`commandsvisible`</li><li>`from`</li><li>`holidays`</li><li>`clearable`</li><li>`maxvalue`</li><li>`minvalue`</li><li>`to`</li></ul>
Domanda: Quali sono gli eventi del componente `date`?
Risposta: Gli eventi del componente `date` sono i seguenti: <br /><ul><li>`focusout`</li><li>`keydown`</li><li>`keypress`</li></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `date`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `date`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `date`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `date`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `date`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `date`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `date`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `date`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `date`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `date`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `date`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `date`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `date`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `date`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `date`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `date`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `date`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `date`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `date`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `date`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `date`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `date`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `date`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `date`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `decimal`?
Risposta: Il componente `decimal` Rappresenta un numero.\nUn DecimalBox Ã¨ un campo di input di tipo numerico, che accetta, a seconda del tipo, caratteri come il separatore decimale, il separatore delle migliaia o il segno \"-\"\nIl valore che viene inviato al server Ã¨ l'esatto contenuto del campo di testo, in cui il separatore delle migliaia viene sempre rappresentato dal simbolo \".\" e il separatore decimale da \",\"
Domanda: Come si crea un componente `decimal`?
Risposta: Ecco un esempio di base di creazione di un componente `decimal`:<br /><pre><code><cis-ui:decimal caption=\"Titolo\">\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/CdImpiego\"/></nodo>\n</cis-ui:decimal></code></pre>
Domanda: Quali sono gli attributi del componente `decimal`?
Risposta: Gli attributi del componente `decimal` sono i seguenti: <br /><ul><li>`autotext`</li><li>`commandsposition`</li><li>`commandsvisible`</li><li>`decimali`</li><li>`stepValue`</li><li>`interi`</li><li>`maxvalue`</li><li>`minvalue`</li><li>`placeholder`</li><li>`separatoredecimali`</li><li>`separatoremigliaia`</li><li>`textalign`</li><li>`type`</li></ul>
Domanda: Quali sono gli eventi del componente `decimal`?
Risposta: Gli eventi del componente `decimal` sono i seguenti: <br /><ul><li>`focusout`</li><li>`keydown`</li><li>`keypress`</li></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `decimal`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `decimal`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `decimal`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `decimal`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `decimal`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `decimal`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `decimal`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `decimal`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `decimal`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `decimal`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `decimal`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `decimal`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `decimal`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `decimal`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `decimal`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `decimal`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `decimal`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `decimal`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `decimal`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `decimal`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `decimal`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `decimal`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `decimal`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `decimal`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `deco`?
Risposta: Il componente `deco` Rappresenta un campo con decodifica
Domanda: Come si crea un componente `deco`?
Risposta: Ecco un esempio di base di creazione di un componente `deco`:<br /><pre><code><cis-ui:deco caption=\"test\" varname=\"xxx\" decoattr=\"Codice\">\n    <decodifica displayformat=\"#Soggetto\" valueattrs=\"*\" placeholder=\"decodifica\" size=\"50\" />\n    <chiave placeholder=\"chiave\" />\n    <request command=\"test\"/>\n</cis-ui:deco></code></pre>
Domanda: Quali sono gli attributi del componente `deco`?
Risposta: Gli attributi del componente `deco` sono i seguenti: <br /><ul><li>`chiave`</li><li>`decodifica`</li><li>`request`</li><li>`decoAttr`</li></ul>
Domanda: Quali sono gli eventi del componente `deco`?
Risposta: Gli eventi del componente `deco` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `deco`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `deco`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `deco`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `deco`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `deco`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `deco`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `deco`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `deco`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `deco`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `deco`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `deco`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `deco`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `deco`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `deco`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `deco`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `deco`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `deco`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `deco`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `deco`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `deco`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `deco`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `deco`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `deco`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `deco`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `dialog`?
Risposta: Il componente `dialog` Rappresenta una window con del contenuto HTML statico.\nL'evento di apertura Ã¨ lanciato facendo click su un bottone, i cui parametri sono definiti all'interno del componente.
Domanda: Come si crea un componente `dialog`?
Risposta: Ecco un esempio di base di creazione di un componente `dialog`:<br /><pre><code><cis-ui:dialog caption=\"test\" height=\"500\" width=\"700\" modal=\"true\">\n    <markup>\n        <div>test riga 1</div>\n        <br />\n        <div>test riga 2</div>\n    </markup>\n    <button text=\"Dialog\" />\n</cis-ui:dialog></code></pre>
Domanda: Quali sono gli attributi del componente `dialog`?
Risposta: Gli attributi del componente `dialog` sono i seguenti: <br /><ul><li>`markup`</li></ul>
Domanda: Quali sono gli eventi del componente `dialog`?
Risposta: Gli eventi del componente `dialog` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `autoOverflow` del componente `dialog`?
Risposta: Se true, viene impostato uno stile overflow=auto all'elemento e ai sottoelementi.
Domanda: A cosa serve la proprietÃ  `bottomtext` del componente `dialog`?
Risposta: Imposta il testo posto nella barra inferiore della window.\nSe la window rappresnta un PDC, di default viene impostato con i valori di \"ultagg\" e \"utente\"
Domanda: A cosa serve la proprietÃ  `button` del componente `dialog`?
Risposta: Parametri del bottone di apertura della window
Domanda: A cosa serve la proprietÃ  `caption` del componente `dialog`?
Risposta: Titolo della window.\nIl default Ã¨ attribuito dal componente cis:pagina, altrimenti Ã¨ \"Finestra senza titolo\"
Domanda: A cosa serve la proprietÃ  `closeicon` del componente `dialog`?
Risposta: Mostra/nasconde l'icona per chiudere la window.
Domanda: A cosa serve la proprietÃ  `draggable` del componente `dialog`?
Risposta: Abilita/disabilita la funzionalitÃ  di trascinamento.
Domanda: A cosa serve la proprietÃ  `functionareamarkup` del componente `dialog`?
Risposta: Contenuto HTML dell'area adibita alle funzioni speciali della window.\nIl contenuto viene visualizzato tra il titolo e le icone di controllo di stato
Domanda: A cosa serve la proprietÃ  `minicon` del componente `dialog`?
Risposta: Mostra/nasconde l'icona per minimizzare la window.
Domanda: A cosa serve la proprietÃ  `maxicon` del componente `dialog`?
Risposta: Mostra/nasconde l'icona per ingrandire a tutto schermo la window.
Domanda: A cosa serve la proprietÃ  `modal` del componente `dialog`?
Risposta: Se true, la window Ã¨ modale.\nUna window modale non puÃ² perdere lo stato attivo.
Domanda: A cosa serve la proprietÃ  `resizable` del componente `dialog`?
Risposta: Abilita/disabilita gli handler di ridimensionamento.
Domanda: A cosa serve la proprietÃ  `skin` del componente `dialog`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css.\nIl preset \"simple\" imposta i seguenti parametri:\n- withIcon = false;\n- minIcon = false;\n- maxIcon = false;\n- withBottomBar = false;
Domanda: A cosa serve la proprietÃ  `startposition` del componente `dialog`?
Risposta: Posizione iniziale della window.
Domanda: A cosa serve la proprietÃ  `windowstate` del componente `dialog`?
Risposta: Stato iniziale della window.
Domanda: A cosa serve la proprietÃ  `withbottombar` del componente `dialog`?
Risposta: Mostra/nasconde la barra inferiore della window, generalmente utilizzata per aggiungere messaggi di stato.
Domanda: A cosa serve la proprietÃ  `withtopbar` del componente `dialog`?
Risposta: Mostra/nasconde la barra superiore della window, contenente i bottoni per chiudere/ridimensionare la window.
Domanda: A cosa serve la proprietÃ  `reloadParentAfterClose` del componente `dialog`?
Risposta: Se true, alla chiusura della window viene lanciata la funzione di reload nella pagina del componente che ne ha richiesto l'apertura.\nVale true se la window Ã¨ una iFrame
Domanda: A cosa serve la proprietÃ  `reloadParentMode` del componente `dialog`?
Risposta: ModalitÃ  reload del contesto parent.\nIl default Ã¨ \"list\".
Domanda: A cosa serve la proprietÃ  `withicon` del componente `dialog`?
Risposta: Mostra/nasconde l'icona principale della window.
Domanda: A cosa serve la proprietÃ  `` del componente `dialog`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `activated` del componente `dialog`?
Risposta: Evento lanciato dopo che una window ha assunto lo stato attivo, quando cioÃ¨ passa in primo piano
Domanda: A cosa serve l'evento `afterclose` del componente `dialog`?
Risposta: Evento lanciato dopo che una window Ã¨ stata chiusa per qualsiasi motivo (parametro closeReason)
Domanda: A cosa serve l'evento `afteropen` del componente `dialog`?
Risposta: Evento lanciato dopo che una window Ã¨ stata aperta e visualizzata
Domanda: A cosa serve l'evento `beforeclose` del componente `dialog`?
Risposta: Evento lanciato prima che una window venga chiusa per qualsiasi motivo.\nSi puÃ² interrompere la chiusura ritornando un valore false
Domanda: A cosa serve l'evento `beforeopen` del componente `dialog`?
Risposta: Evento lanciato prima che una window venga aperta.\nSi puÃ² interrompere l'apertura ritornando un valore false
Domanda: A cosa serve l'evento `deactivated` del componente `dialog`?
Risposta: Evento lanciato dopo che una window ha perso lo stato attivo, quando cioÃ¨ passa in secondo piano
Domanda: A cosa serve il componente `docviewer`?
Risposta: Il componente `docviewer` Bottone specifico per la visualizzazione di immagini o documenti pdf.\nL'evento click apre una window che incorpora un visualizzatore di immagini o pdf
Domanda: Quali sono gli attributi del componente `docviewer`?
Risposta: Gli attributi del componente `docviewer` sono i seguenti: <br /><ul><li>`url`</li><li>`params`</li><li>`mode`</li><li>`service`</li><li>`command`</li><li>`fileName`</li><li>`withOpenFile`</li><li>`withToolbar`</li><li>`startsVisible`</li><li>`fullscreen`</li><li>`startPosition`</li><li>`immediate`</li><li>`messageHandler`</li><li>`button`</li></ul>
Domanda: Quali sono gli eventi del componente `docviewer`?
Risposta: Gli eventi del componente `docviewer` sono i seguenti: <br /><ul><li>`afterload`</li><li>`onError`</li><li>`always`</li></ul>
Domanda: A cosa serve la proprietÃ  `id` del componente `docviewer`?
Risposta: Attributo id dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `name` del componente `docviewer`?
Risposta: Attributo name dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `varname` del componente `docviewer`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve la proprietÃ  `tooltip` del componente `docviewer`?
Risposta: Testo del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione
Domanda: A cosa serve la proprietÃ  `tooltipposition` del componente `docviewer`?
Risposta: Posizione del tooltip.
Domanda: A cosa serve la proprietÃ  `style` del componente `docviewer`?
Risposta: Stile CSS inline dell'elemento HTML principale
Domanda: A cosa serve la proprietÃ  `mainclass` del componente `docviewer`?
Risposta: Classe CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente
Domanda: A cosa serve la proprietÃ  `role` del componente `docviewer`?
Risposta: Attributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript
Domanda: A cosa serve la proprietÃ  `skin` del componente `docviewer`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css
Domanda: A cosa serve la proprietÃ  `hidden` del componente `docviewer`?
Risposta: Se true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento
Domanda: A cosa serve la proprietÃ  `unselectable` del componente `docviewer`?
Risposta: Se true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu
Domanda: A cosa serve la proprietÃ  `disabled` del componente `docviewer`?
Risposta: Se true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento
Domanda: A cosa serve la proprietÃ  `contextMenuEnabled` del componente `docviewer`?
Risposta: Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.
Domanda: A cosa serve la proprietÃ  `flexible` del componente `docviewer`?
Risposta: Se true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento
Domanda: A cosa serve la proprietÃ  `userattrs` del componente `docviewer`?
Risposta: Elenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"
Domanda: A cosa serve la proprietÃ  `height` del componente `docviewer`?
Risposta: Imposta il valore \"height\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `width` del componente `docviewer`?
Risposta: Imposta il valore \"width\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `left` del componente `docviewer`?
Risposta: Imposta il valore \"left\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `top` del componente `docviewer`?
Risposta: Imposta il valore \"top\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `permessi` del componente `docviewer`?
Risposta: Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no
Domanda: A cosa serve la proprietÃ  `tmode` del componente `docviewer`?
Risposta: Indica se il componente Ã¨ in modalitÃ  T (liste inline)
Domanda: A cosa serve la proprietÃ  `colspan` del componente `docviewer`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeclick` del componente `docviewer`?
Risposta: Evento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.
Domanda: A cosa serve l'evento `click` del componente `docviewer`?
Risposta: Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)
Domanda: A cosa serve l'evento `ready` del componente `docviewer`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato
Domanda: A cosa serve l'evento `connected` del componente `docviewer`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato
Domanda: A cosa serve l'evento `responsiveChanged` del componente `docviewer`?
Risposta: Evento chiamato quando il componente cambia stato responsive
Domanda: A cosa serve il componente `doublelist`?
Risposta: Il componente `doublelist` Rappresenta una doppia lista.\nUna doublelist Ã¨ la combinazione di due liste, di cui una contiene tutte le opzioni possibili per un certo valore, mentre l'altra contiene solo le opzioni selezionate.\nIl valore passato al server Ã¨ l'insieme (separato da virgole) dei valori delle colonne chiave. 
Domanda: Come si crea un componente `doublelist`?
Risposta: Ecco un esempio di base di creazione di un componente `doublelist`:<br /><pre><code><cis-ui:doublelist>\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/CdImpiego\"/></nodo>\n    <enumerato><xsl:copy-of select=\"/DOCUMENTO/LstImpiego\"/></enumerato>\n</cis-ui:doublelist></code></pre>
Domanda: Quali sono gli attributi del componente `doublelist`?
Risposta: Gli attributi del componente `doublelist` sono i seguenti: <br /><ul><li>`buttonadd`</li><li>`buttonaddall`</li><li>`buttonclear`</li><li>`buttonremove`</li><li>`buttonremoveall`</li><li>`checkedlistbox`</li><li>`uncheckedlistbox`</li></ul>
Domanda: Quali sono gli eventi del componente `doublelist`?
Risposta: Gli eventi del componente `doublelist` sono i seguenti: <br /><ul><li>`orientationchanged`</li></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `doublelist`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `doublelist`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `doublelist`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `doublelist`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `doublelist`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `doublelist`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `doublelist`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `doublelist`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `doublelist`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `doublelist`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `doublelist`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `doublelist`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `doublelist`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `doublelist`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `doublelist`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `doublelist`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `doublelist`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `doublelist`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `doublelist`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `doublelist`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `doublelist`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `doublelist`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `doublelist`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `doublelist`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `editor`?
Risposta: Il componente `editor` Rappresenta un editor HTML con tinymce6.3.1
Domanda: Come si crea un componente `editor`?
Risposta: Ecco un esempio di base di creazione di un componente `editor`:<br /><pre><code><cis-ui:editor captionposition=\"top\" size=\"60\">\n    <nodo><xsl:copy-of select=\"campohtml\"/></nodo>\n    <options>\n        {\n            \"skin\":\"oxide-dark\",\n            \"plugins\":\"advlist lists\",\n            menubar:true\n        }\n    </options>\n</cis-ui:editor></code></pre>
Domanda: Quali sono gli attributi del componente `editor`?
Risposta: Gli attributi del componente `editor` sono i seguenti: <br /><ul><li>`options`</li></ul>
Domanda: Quali sono gli eventi del componente `editor`?
Risposta: Gli eventi del componente `editor` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `editor`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `editor`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `editor`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `editor`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `editor`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `editor`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `editor`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `editor`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `editor`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `editor`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `editor`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `editor`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `editor`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `editor`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `editor`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `editor`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `editor`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `editor`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `editor`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `editor`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `editor`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `editor`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `editor`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `editor`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `file`?
Risposta: Il componente `file` Componente per il caricamento di file
Domanda: Come si crea un componente `file`?
Risposta: Ecco un esempio di base di creazione di un componente `file`:<br /><pre><code><cis-ui:file caption=\"Titolo\">\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/IdDocumento\" /></nodo>\n</cis-ui:file></code></pre>
Domanda: Quali sono gli attributi del componente `file`?
Risposta: Gli attributi del componente `file` sono i seguenti: <br /><ul><li>`droppable`</li><li>`droppableplaceholder`</li><li>`fileicon`</li><li>`iconvisible`</li><li>`multipledroppableplaceholder`</li><li>`multipleplaceholder`</li><li>`nofileplaceholder`</li><li>`multiselect`</li><li>`placeholder`</li><li>`rimuovibutton`</li><li>`annullabutton`</li><li>`sfogliabutton`</li><li>`downloadbutton`</li><li>`accept`</li><li>`DocID`</li><li>`DocSign`</li><li>`DocName`</li></ul>
Domanda: Quali sono gli eventi del componente `file`?
Risposta: Gli eventi del componente `file` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `file`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `file`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `file`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `file`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `file`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `file`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `file`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `file`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `file`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `file`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `file`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `file`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `file`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `file`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `file`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `file`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `file`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `file`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `file`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `file`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `file`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `file`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `file`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `file`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `framedwindow`?
Risposta: Il componente `framedwindow` Rappresenta una window contenente un iFrame, sottoposta a permessi.\nL'evento di apertura Ã¨ lanciato facendo click su un bottone, i cui parametri sono definiti all'interno del componente.
Domanda: Come si crea un componente `framedwindow`?
Risposta: Ecco un esempio di base di creazione di un componente `framedwindow`:<br /><pre><code><cis-ui:framedwindow caption=\"framed window\" url=\"HWTpAlleg\">\n    <button text=\"Framed Window\"/>\n</cis-ui:framedwindow></code></pre>
Domanda: Quali sono gli attributi del componente `framedwindow`?
Risposta: Gli attributi del componente `framedwindow` sono i seguenti: <br /><ul><li>`url`</li><li>`appendListFilter`</li><li>`params`</li><li>`frameContainer`</li><li>`tabParams`</li></ul>
Domanda: Quali sono gli eventi del componente `framedwindow`?
Risposta: Gli eventi del componente `framedwindow` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `autoOverflow` del componente `framedwindow`?
Risposta: Se true, viene impostato uno stile overflow=auto all'elemento e ai sottoelementi.
Domanda: A cosa serve la proprietÃ  `bottomtext` del componente `framedwindow`?
Risposta: Imposta il testo posto nella barra inferiore della window.\nSe la window rappresnta un PDC, di default viene impostato con i valori di \"ultagg\" e \"utente\"
Domanda: A cosa serve la proprietÃ  `button` del componente `framedwindow`?
Risposta: Parametri del bottone di apertura della window
Domanda: A cosa serve la proprietÃ  `caption` del componente `framedwindow`?
Risposta: Titolo della window.\nIl default Ã¨ attribuito dal componente cis:pagina, altrimenti Ã¨ \"Finestra senza titolo\"
Domanda: A cosa serve la proprietÃ  `closeicon` del componente `framedwindow`?
Risposta: Mostra/nasconde l'icona per chiudere la window.
Domanda: A cosa serve la proprietÃ  `draggable` del componente `framedwindow`?
Risposta: Abilita/disabilita la funzionalitÃ  di trascinamento.
Domanda: A cosa serve la proprietÃ  `functionareamarkup` del componente `framedwindow`?
Risposta: Contenuto HTML dell'area adibita alle funzioni speciali della window.\nIl contenuto viene visualizzato tra il titolo e le icone di controllo di stato
Domanda: A cosa serve la proprietÃ  `minicon` del componente `framedwindow`?
Risposta: Mostra/nasconde l'icona per minimizzare la window.
Domanda: A cosa serve la proprietÃ  `maxicon` del componente `framedwindow`?
Risposta: Mostra/nasconde l'icona per ingrandire a tutto schermo la window.
Domanda: A cosa serve la proprietÃ  `modal` del componente `framedwindow`?
Risposta: Se true, la window Ã¨ modale.\nUna window modale non puÃ² perdere lo stato attivo.
Domanda: A cosa serve la proprietÃ  `resizable` del componente `framedwindow`?
Risposta: Abilita/disabilita gli handler di ridimensionamento.
Domanda: A cosa serve la proprietÃ  `skin` del componente `framedwindow`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css.\nIl preset \"simple\" imposta i seguenti parametri:\n- withIcon = false;\n- minIcon = false;\n- maxIcon = false;\n- withBottomBar = false;
Domanda: A cosa serve la proprietÃ  `startposition` del componente `framedwindow`?
Risposta: Posizione iniziale della window.
Domanda: A cosa serve la proprietÃ  `windowstate` del componente `framedwindow`?
Risposta: Stato iniziale della window.
Domanda: A cosa serve la proprietÃ  `withbottombar` del componente `framedwindow`?
Risposta: Mostra/nasconde la barra inferiore della window, generalmente utilizzata per aggiungere messaggi di stato.
Domanda: A cosa serve la proprietÃ  `withtopbar` del componente `framedwindow`?
Risposta: Mostra/nasconde la barra superiore della window, contenente i bottoni per chiudere/ridimensionare la window.
Domanda: A cosa serve la proprietÃ  `reloadParentAfterClose` del componente `framedwindow`?
Risposta: Se true, alla chiusura della window viene lanciata la funzione di reload nella pagina del componente che ne ha richiesto l'apertura.\nVale true se la window Ã¨ una iFrame
Domanda: A cosa serve la proprietÃ  `reloadParentMode` del componente `framedwindow`?
Risposta: ModalitÃ  reload del contesto parent.\nIl default Ã¨ \"list\".
Domanda: A cosa serve la proprietÃ  `withicon` del componente `framedwindow`?
Risposta: Mostra/nasconde l'icona principale della window.
Domanda: A cosa serve la proprietÃ  `` del componente `framedwindow`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `activated` del componente `framedwindow`?
Risposta: Evento lanciato dopo che una window ha assunto lo stato attivo, quando cioÃ¨ passa in primo piano
Domanda: A cosa serve l'evento `afterclose` del componente `framedwindow`?
Risposta: Evento lanciato dopo che una window Ã¨ stata chiusa per qualsiasi motivo (parametro closeReason)
Domanda: A cosa serve l'evento `afteropen` del componente `framedwindow`?
Risposta: Evento lanciato dopo che una window Ã¨ stata aperta e visualizzata
Domanda: A cosa serve l'evento `beforeclose` del componente `framedwindow`?
Risposta: Evento lanciato prima che una window venga chiusa per qualsiasi motivo.\nSi puÃ² interrompere la chiusura ritornando un valore false
Domanda: A cosa serve l'evento `beforeopen` del componente `framedwindow`?
Risposta: Evento lanciato prima che una window venga aperta.\nSi puÃ² interrompere l'apertura ritornando un valore false
Domanda: A cosa serve l'evento `deactivated` del componente `framedwindow`?
Risposta: Evento lanciato dopo che una window ha perso lo stato attivo, quando cioÃ¨ passa in secondo piano
Domanda: A cosa serve il componente `hamburgermenu`?
Risposta: Il componente `hamburgermenu` Rappresenta un menu \"hamburger\".\nUn hamburger menu Ã¨ un menu compatto, adatto agli schermi piccoli, attivato da un bottone.\nLe voci di menu sono nascoste, e vengono visualizzate livello per livello partendo dal click sul bottone di aprertura.
Domanda: Come si crea un componente `hamburgermenu`?
Risposta: Ecco un esempio di base di creazione di un componente `hamburgermenu`:<br /><pre><code><cis-ui:hamburgermenu>\n      <items>\n          <item text=\"Menu 1\" funzione=\"menu1\" />\n          <item text=\"Menu 2\" funzione=\"menu2\" />\n      </items>\n  </cis-ui:hamburgermenu></code></pre>
Domanda: Quali sono gli attributi del componente `hamburgermenu`?
Risposta: Gli attributi del componente `hamburgermenu` sono i seguenti: <br /><ul><li>`backicon`</li><li>`handlerClass`</li><li>`handlerHelperClass`</li><li>`leftBarClass`</li><li>`menuListContainerClass`</li></ul>
Domanda: Quali sono gli eventi del componente `hamburgermenu`?
Risposta: Gli eventi del componente `hamburgermenu` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `closeonmouseleave` del componente `hamburgermenu`?
Risposta: Se true, quando il mouse lascia una voce di menu ed Ã¨ passato tanto tempo quanto indicato da \"closeonmouseleavedelay\", il menu viene chiuso automaticamente.
Domanda: A cosa serve la proprietÃ  `closeonmouseleavedelay` del componente `hamburgermenu`?
Risposta: Associato a \"closeonmouseleave\". Indica il tempo dopo il quale il menu, che ha perso lo stato attivo, deve essere chiuso automaticamente.
Domanda: A cosa serve la proprietÃ  `items` del componente `hamburgermenu`?
Risposta: Sequenza di voci di menu
Domanda: A cosa serve la proprietÃ  `showicon` del componente `hamburgermenu`?
Risposta: Mostra/nasconde le icone delle voci di menu di primo livello.
Domanda: A cosa serve la proprietÃ  `showmenuhandler` del componente `hamburgermenu`?
Risposta: Mostra/nasconde le icone delle frecce delle voci di menu di primo livello.
Domanda: A cosa serve la proprietÃ  `showmenuitemhandler` del componente `hamburgermenu`?
Risposta: Mostra/nasconde le icone delle frecce delle voci di menu di n-esimo livello.
Domanda: A cosa serve la proprietÃ  `showsubicon` del componente `hamburgermenu`?
Risposta: Mostra/nasconde le icone delle voci di menu di n-esimo livello.
Domanda: A cosa serve la proprietÃ  `framecontainer` del componente `hamburgermenu`?
Risposta: Nome della variabile del componente cis-ui-tabcontrol associato al menu, in cui vengono aperte le pagine dell'applicativo
Domanda: A cosa serve la proprietÃ  `` del componente `hamburgermenu`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `itemclick` del componente `hamburgermenu`?
Risposta: Evento che viene lanciato quando una sottovoce di primo livello viene cliccata
Domanda: A cosa serve il componente `hidden`?
Risposta: Il componente `hidden` Rappresenta un campo hidden.\nUn campo hidden Ã¨ utile quando si vuole mantenere lo stato di un campo tra le operazioni di submit, senza permettere all'utente di visualizzarne o modificarne il valore.\nUn campo hidden manda sempre lo stesso valore che contiene al server, a differenza di un campo con \"display:none\" che non viene considerato dalle operazioni di submit. 
Domanda: Come si crea un componente `hidden`?
Risposta: Ecco un esempio di base di creazione di un componente `hidden`:<br /><pre><code><cis-ui:hidden>\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/DescImpiego\"/></nodo>\n</cis-ui:hidden></code></pre>
Domanda: Quali sono gli attributi del componente `hidden`?
Risposta: Gli attributi del componente `hidden` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `hidden`?
Risposta: Gli eventi del componente `hidden` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `hidden`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `hidden`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `hidden`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `hidden`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `hidden`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `hidden`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `hidden`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `hidden`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `hidden`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `hidden`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `hidden`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `hidden`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `hidden`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `hidden`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `hidden`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `hidden`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `hidden`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `hidden`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `hidden`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `hidden`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `hidden`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `hidden`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `hidden`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `hidden`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `hms`?
Risposta: Il componente `hms` Rappresenta un selettore di unitÃ  di tempo
Domanda: Come si crea un componente `hms`?
Risposta: Ecco un esempio di base di creazione di un componente `hms`:<br /><pre><code><cis-ui:hms caption=\"Titolo\">\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/valore\"/></nodo>\n</cis-ui:hms></code></pre>
Domanda: Quali sono gli attributi del componente `hms`?
Risposta: Gli attributi del componente `hms` sono i seguenti: <br /><ul><li>`from`</li><li>`to`</li><li>`valueUnit`</li><li>`displayUnit`</li><li>`daysParams`</li><li>`hoursParams`</li><li>`minutesParams`</li><li>`secondsParams`</li><li>`millisecondsParams`</li><li>`inputParams`</li><li>`fromParams`</li></ul>
Domanda: Quali sono gli eventi del componente `hms`?
Risposta: Gli eventi del componente `hms` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `hms`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `hms`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `hms`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `hms`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `hms`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `hms`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `hms`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `hms`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `hms`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `hms`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `hms`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `hms`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `hms`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `hms`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `hms`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `hms`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `hms`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `hms`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `hms`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `hms`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `hms`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `hms`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `hms`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `hms`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `int`?
Risposta: Il componente `int` Rappresenta un numero intero.\nShortcut di <cis-ui:decimal type=\"int\" />
Domanda: Come si crea un componente `int`?
Risposta: Ecco un esempio di base di creazione di un componente `int`:<br /><pre><code><cis-ui:int caption=\"Titolo\">\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/CdImpiego\"/></nodo>\n</cis-ui:int></code></pre>
Domanda: Quali sono gli attributi del componente `int`?
Risposta: Gli attributi del componente `int` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `int`?
Risposta: Gli eventi del componente `int` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `autotext` del componente `int`?
Risposta: Se false imposta i seguenti attributi sul campo di input: \nautocomplete=\"off\"\nrole=\"presentation\"\nautocorrect=\"off\"\nautocapitalize=\"off\nspellcheck=\"false\".
Domanda: A cosa serve la proprietÃ  `commandsposition` del componente `int`?
Risposta: Indica dove posizionare i bottoni per aumentare/diminuire il valore.
Domanda: A cosa serve la proprietÃ  `commandsvisible` del componente `int`?
Risposta: Indica se mostrare i bottoni per aumentare/diminuire il valore.
Domanda: A cosa serve la proprietÃ  `decimali` del componente `int`?
Risposta: Numero di decimali oltre i quali viene segnalato un errore.\nIl default Ã¨:\n- infiniti se il tipo Ã¨ decimal\n- 0 se il tipo Ã¨ int\n- 2 se il tipo Ã¨ currency
Domanda: A cosa serve la proprietÃ  `stepValue` del componente `int`?
Risposta: Valore che viene aggiunto o sottratto tramite i tasti ArrowUp e ArrowDown oppure i bottoni + e -
Domanda: A cosa serve la proprietÃ  `interi` del componente `int`?
Risposta: Numero di interi oltre il quale viene segnalato un errore.\nIl default Ã¨:\n- infiniti se il tipo Ã¨ decimal\n- 10 se il tipo Ã¨ int\n- 10 se il tipo Ã¨ currency
Domanda: A cosa serve la proprietÃ  `maxvalue` del componente `int`?
Risposta: Valore massimo oltre il quale viene segnalato un errore.\nIl default Ã¨:\n- 1.7976931348623157e+308 se il tipo Ã¨ decimal\n- 2147483647 se il tipo Ã¨ int
Domanda: A cosa serve la proprietÃ  `minvalue` del componente `int`?
Risposta: Valore minimo prima del quale viene segnalato un errore.\nIl default Ã¨:\n- -1.7976931348623157e+308 se il tipo Ã¨ decimal\n- -2147483648 se il tipo Ã¨ int
Domanda: A cosa serve la proprietÃ  `placeholder` del componente `int`?
Risposta: Placeholder del componente
Domanda: A cosa serve la proprietÃ  `separatoredecimali` del componente `int`?
Risposta: Carattere del separatore dei decimali.
Domanda: A cosa serve la proprietÃ  `separatoremigliaia` del componente `int`?
Risposta: Carattere del separatore delle migliaia.
Domanda: A cosa serve la proprietÃ  `textalign` del componente `int`?
Risposta: Allineamento del testo del valore del componente.
Domanda: A cosa serve la proprietÃ  `type` del componente `int`?
Risposta: Tipo specializzato del componente.
Domanda: A cosa serve la proprietÃ  `` del componente `int`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente\n\nPosizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields\n\nImposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"\n\nSe true, il valore \"0\" viene omesso.\n\nImposta il lovale specifico di questo campo\n\nSe true, il campo viene renderizzato solo come label.\n\nIl nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"\n\nFunzione di validazione personalizzata utente\n\nSe true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.\n\nSe true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.\n\nTesto del tooltip quando il componente non ha valore e required Ã¨ 'true'\n\nImposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout\n\nSe true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.\n\nImposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.\n\nIl valore del campo\n\nEvento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato\n\nSe true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.\n\nClasse css dell'elemento contenitore dell'elemento corpo del componente e del testo del validatore.\n\nClasse css dell'elemento che contiene il corpo del componente.\n\nClasse css dell'elemento contenitore dell'elemento titolo del componente.\n\nStile inline dell'elemento contenitore dell'elemento titolo del componente (come captionHelperClass)\n\nClasse css dell'elemento che contiene il titolo del componente.\n\nClasse css dell'elemento che contiene l'elemento di input specifico del componente.\n\nClasse css dell'elemento che contiene il valore del componente in modalitÃ  \"labelonly\".\n\nClasse css dell'elemento contenitore del testo del validatore.\n\nClasse CSS dell'icona del validatore.\nSi puÃ² combinare questa classe con l'attributo state=\"error/valid\" per ottenere le 2 icone di stato\n\nParametri del tooltip di validazione\n\nSe true, lo stato grafico di \"valido\" Ã¨ visibile\n\nSe true, il testo del validatore viene nascosto a prescindere dallo stato\n\nOrdinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.\n\nParametri dell'icona del tooltip\n\nAttributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `focusout` del componente `int`?
Risposta: Evento lanciato quando il componente perde il focus
Domanda: A cosa serve l'evento `keydown` del componente `int`?
Risposta: Evento lanciato quando viene premuto un tasto sull'elemento di input
Domanda: A cosa serve l'evento `keypress` del componente `int`?
Risposta: Evento lanciato quando viene premuto un tasto sull'elemento di input
Domanda: A cosa serve il componente `label`?
Risposta: Il componente `label` Rappresenta un qualsiasi testo.\nUna label Ã¨ un componente in sola lettura, che non passa alcuna informazione al server.\nIl valore di una label puÃ² essere decodificato tramite gli attributi \"decodifica\" e \"enumerato\"
Domanda: Come si crea un componente `label`?
Risposta: Ecco un esempio di base di creazione di un componente `label`:<br /><pre><code><cis-ui:label caption=\"Titolo\">\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/DescImpiego\"/></nodo>\n</cis-ui:label></code></pre>
Domanda: Quali sono gli attributi del componente `label`?
Risposta: Gli attributi del componente `label` sono i seguenti: <br /><ul><li>`decodifica`</li><li>`enumerato`</li></ul>
Domanda: Quali sono gli eventi del componente `label`?
Risposta: Gli eventi del componente `label` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `label`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `label`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `label`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `label`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `label`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `label`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `label`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `label`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `label`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `label`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `label`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `label`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `label`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `label`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `label`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `label`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `label`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `label`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `label`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `label`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `label`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `label`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `label`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `label`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `link`?
Risposta: Il componente `link` Rappresenta una window di terze parti caricata tramite un url.\nL'evento di apertura Ã¨ lanciato facendo click su un bottone, i cui parametri sono definiti all'interno del componente.
Domanda: Come si crea un componente `link`?
Risposta: Ecco un esempio di base di creazione di un componente `link`:<br /><pre><code><cis-ui:link target=\"_self\" url=\"http://www.google.it\">\n    <button text=\"Link\" icon=\"far fa-file\" />\n</cis-ui:link></code></pre>
Domanda: Quali sono gli attributi del componente `link`?
Risposta: Gli attributi del componente `link` sono i seguenti: <br /><ul><li>`params`</li><li>`target`</li><li>`url`</li><li>`framefeatures`</li><li>`button`</li></ul>
Domanda: Quali sono gli eventi del componente `link`?
Risposta: Gli eventi del componente `link` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `id` del componente `link`?
Risposta: Attributo id dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `name` del componente `link`?
Risposta: Attributo name dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `varname` del componente `link`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve la proprietÃ  `tooltip` del componente `link`?
Risposta: Testo del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione
Domanda: A cosa serve la proprietÃ  `tooltipposition` del componente `link`?
Risposta: Posizione del tooltip.
Domanda: A cosa serve la proprietÃ  `style` del componente `link`?
Risposta: Stile CSS inline dell'elemento HTML principale
Domanda: A cosa serve la proprietÃ  `mainclass` del componente `link`?
Risposta: Classe CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente
Domanda: A cosa serve la proprietÃ  `role` del componente `link`?
Risposta: Attributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript
Domanda: A cosa serve la proprietÃ  `skin` del componente `link`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css
Domanda: A cosa serve la proprietÃ  `hidden` del componente `link`?
Risposta: Se true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento
Domanda: A cosa serve la proprietÃ  `unselectable` del componente `link`?
Risposta: Se true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu
Domanda: A cosa serve la proprietÃ  `disabled` del componente `link`?
Risposta: Se true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento
Domanda: A cosa serve la proprietÃ  `contextMenuEnabled` del componente `link`?
Risposta: Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.
Domanda: A cosa serve la proprietÃ  `flexible` del componente `link`?
Risposta: Se true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento
Domanda: A cosa serve la proprietÃ  `userattrs` del componente `link`?
Risposta: Elenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"
Domanda: A cosa serve la proprietÃ  `height` del componente `link`?
Risposta: Imposta il valore \"height\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `width` del componente `link`?
Risposta: Imposta il valore \"width\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `left` del componente `link`?
Risposta: Imposta il valore \"left\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `top` del componente `link`?
Risposta: Imposta il valore \"top\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `permessi` del componente `link`?
Risposta: Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no
Domanda: A cosa serve la proprietÃ  `tmode` del componente `link`?
Risposta: Indica se il componente Ã¨ in modalitÃ  T (liste inline)
Domanda: A cosa serve la proprietÃ  `colspan` del componente `link`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeclick` del componente `link`?
Risposta: Evento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.
Domanda: A cosa serve l'evento `click` del componente `link`?
Risposta: Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)
Domanda: A cosa serve l'evento `ready` del componente `link`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato
Domanda: A cosa serve l'evento `connected` del componente `link`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato
Domanda: A cosa serve l'evento `responsiveChanged` del componente `link`?
Risposta: Evento chiamato quando il componente cambia stato responsive
Domanda: A cosa serve il componente `list`?
Risposta: Il componente `list` Rappresenta una lista di elementi selezionabili.\nIl valore del campo Ã¨ dato dal valore della chiave dei record selezionati della lista.\nSe sono selezionati piÃ¹ elementi, il valore inviato al server Ã¨ la serializzazione di tutti gli attributi chiave selezionati, separati da virgola.\nE' possibile aggiungere un elemento \"request\" per filtrare il contenuto della lista tramite delle chiamate AJAX
Domanda: Come si crea un componente `list`?
Risposta: Ecco un esempio di base di creazione di un componente `list`:<br /><pre><code><cis-ui:list caption=\"Titolo\">\n    <enumerato><xsl:copy-of select=\"/DOCUMENTO/LstImpiego\"/></enumerato>\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/CdImpiego\"/></nodo>\n</cis-ui:list></code></pre>
Domanda: Quali sono gli attributi del componente `list`?
Risposta: Gli attributi del componente `list` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `list`?
Risposta: Gli eventi del componente `list` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `columns` del componente `list`?
Risposta: Sequenza dei mapping delle colonne della sorgente dati.\nSe il parametro \"name\" di un elemento di sequenza corrisponde ad una colonna della sorgente dati, le proprietÃ  della colonna originale verranno sovrascritte.\nShortcut di data.columns
Domanda: A cosa serve la proprietÃ  `canwrap` del componente `list`?
Risposta: Se true, i caratteri newline presenti nelle celle della sorgente dati verranno convertiti in <br />.
Domanda: A cosa serve la proprietÃ  `displayformat` del componente `list`?
Risposta: Formato dell'elemento selezionato.\nE' possibile riferirsi alle colonne della sorgente dati con il prefisso \"#\" (case insensitive).\nAd esempio: #cognome #nome nato il #datanascita
Domanda: A cosa serve la proprietÃ  `enumerato` del componente `list`?
Risposta: Elemento che contiene le informazioni di decodifica del valore del componente.\nE possibile utilizzarlo come copy-of di un nodo, come riferimento ad un enumerato o come riferimento ad un nodo.\nLe informazioni vengono cercate in questo ordine:\nse esiste un attributo @enumerato=***valore*** nel nodo <cis-ui:label> viene preso /DOCUMENTO/*[@tipo='ENUMERATO' and @fullname=***valore***] \nse esiste un elemento <enumerato>***valore***</enumerato> figlio del nodo <cis-ui:label> viene preso /DOCUMENTO/*[@tipo='ENUMERATO' and @fullname=***valore***]\nse esiste un elemento <decodifica enumerato=***valore*** /> figlio del nodo <cis-ui:label> viene preso /DOCUMENTO/*[@fullname=***valore***]\nse esiste un elemento <decodifica> di tipo nodo, figlio del nodo <cis-ui:label> viene presa la copia del nodo\nse esiste un elemento <decodifica> di tipo testo, figlio del nodo <cis-ui:label> viene preso /DOCUMENTO/*[name()=***valore***]
Domanda: A cosa serve la proprietÃ  `enumjs` del componente `list`?
Risposta: Shortcut per <enumerato js=\"true\">CIS.Data.DataList.cloneFrom(xxx)</enumerato>
Domanda: A cosa serve la proprietÃ  `keepselection` del componente `list`?
Risposta: Se true, l'elemento selezionato rimane attivo.
Domanda: A cosa serve la proprietÃ  `keyattr` del componente `list`?
Risposta: Il nome della colonna della sorgente dati che contiene i valori chiave.\nDi default Ã¨ la colonna in posizione 0
Domanda: A cosa serve la proprietÃ  `filter` del componente `list`?
Risposta: Valore iniziale del filtro da applicare alla sorgente dati.\nIl filtro viene eseguito con l'operatore like su tutte le colonne della sorgente dati.
Domanda: A cosa serve la proprietÃ  `maxitems` del componente `list`?
Risposta: Imposta il limite massimo degli elementi visualizzabili
Domanda: A cosa serve la proprietÃ  `recordenumerato` del componente `list`?
Risposta: Il nome del nodo dell'enumerato che identifica il record.
Domanda: A cosa serve la proprietÃ  `multiselect` del componente `list`?
Risposta: Abilita/disabilita la multiselezione
Domanda: A cosa serve la proprietÃ  `readonly` del componente `list`?
Risposta: Se true, la lista non Ã¨ selezionabile
Domanda: A cosa serve la proprietÃ  `request` del componente `list`?
Risposta: Parametri del comando ajax associato al componente.\nSe esiste questo parametro, viene lanciato un comando ajax ogni volta che si richiede di filtrare la sorgente dati tramite i metodi \"filter\" e \"filterByKey\".\nSe al componente Ã¨ associato un valore iniziale, viene lanciato un comando ajax per richiedere la decodifica del valore.\nIl comando ajax invia due parametri di default: \n\"decodifica\" (true/false) viene inviato quando Ã¨ richiesta la decodifica del valore.\n\"ricerca\" (string) Ã¨ il valore corrente dell'input di testo del componente, e viene inviato al cambio del valore dell'input da parte dell'utente.
Domanda: A cosa serve la proprietÃ  `rows` del componente `list`?
Risposta: Sequenza fissa di record aggiunti al componente in modo manuale
Domanda: A cosa serve la proprietÃ  `selectionboxvisible` del componente `list`?
Risposta: Mostra/nasconde le caselle di selezione a inizio riga.\nVale true se \"multiselect\" Ã¨ true.
Domanda: A cosa serve la proprietÃ  `selectiondisabled` del componente `list`?
Risposta: Se true, il componente rimane attivo ma la selezione degli elementi Ã¨ disabilitata
Domanda: A cosa serve la proprietÃ  `sortable` del componente `list`?
Risposta: Se true, abilita la funzione di ordinamento disponibile cliccando sugli header di colonna.
Domanda: A cosa serve la proprietÃ  `sorticon` del componente `list`?
Risposta: Classe css dell'icona mostrata sugli header di riga per ordinare la sorgente dati.\nLa direzione dell'ordinamento Ã¨ ottenuta in css tramite l'attributo \"sortorder\" presente nell'header di riga
Domanda: A cosa serve la proprietÃ  `valueattrs` del componente `list`?
Risposta: Il nome della colonna della sorgente dati che contiene il valore descrittivo.\nDi default Ã¨ la colonna in posizione 1.\nSe il valore descrittivo Ã¨ contenuto in piÃ¹ colonne, occorre separare le colonne con \",\" (case insensitive).\nAd es: nome,cognome,datanascita\nSe si vogliono mostrare tutte le colonne utilizzare il valore \"*\".\nSe si vogliono mostrare tutte le colonne senza il campo chiave utilizzare il valore \"/\".
Domanda: A cosa serve la proprietÃ  `visibleitems` del componente `list`?
Risposta: Imposta il numero degli elementi sempre visibili nel componente.\nPer calcolare l'altezza del componente viene presa come riferimento l'altezza dela prima riga e moltiplicata per questo valore
Domanda: A cosa serve la proprietÃ  `title` del componente `list`?
Risposta: Titolo della lista (titlebar)               
Domanda: A cosa serve la proprietÃ  `withheaders` del componente `list`?
Risposta: Mostra/nasconde gli header di colonna.\nVale true se \"valueattrs\" contiene piÃ¹ di un elemento.
Domanda: A cosa serve la proprietÃ  `withmenu` del componente `list`?
Risposta: Abilita/disabilita il menu contestuale.
Domanda: A cosa serve la proprietÃ  `withrowcount` del componente `list`?
Risposta: Abilita/disabilita il conteggio delle righe, che appare nella barra del titolo.
Domanda: A cosa serve la proprietÃ  `withtitle` del componente `list`?
Risposta: Mostra/nasconde la barra del titolo.\nVale true se \"title\" Ã¨ valorizzato.
Domanda: A cosa serve la proprietÃ  `` del componente `list`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente\n\nPosizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields\n\nImposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"\n\nSe true, il valore \"0\" viene omesso.\n\nImposta il lovale specifico di questo campo\n\nSe true, il campo viene renderizzato solo come label.\n\nIl nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"\n\nFunzione di validazione personalizzata utente\n\nSe true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.\n\nTesto del tooltip quando il componente non ha valore e required Ã¨ 'true'\n\nImposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout\n\nSe true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.\n\nImposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.\n\nIl valore del campo\n\nEvento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato\n\nSe true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.\n\nClasse css dell'elemento contenitore dell'elemento corpo del componente e del testo del validatore.\n\nClasse css dell'elemento che contiene il corpo del componente.\n\nClasse css dell'elemento contenitore dell'elemento titolo del componente.\n\nStile inline dell'elemento contenitore dell'elemento titolo del componente (come captionHelperClass)\n\nClasse css dell'elemento che contiene il titolo del componente.\n\nClasse css dell'elemento che contiene l'elemento di input specifico del componente.\n\nClasse css dell'elemento che contiene il valore del componente in modalitÃ  \"labelonly\".\n\nClasse css dell'elemento contenitore del testo del validatore.\n\nClasse CSS dell'icona del validatore.\nSi puÃ² combinare questa classe con l'attributo state=\"error/valid\" per ottenere le 2 icone di stato\n\nParametri del tooltip di validazione\n\nSe true, lo stato grafico di \"valido\" Ã¨ visibile\n\nSe true, il testo del validatore viene nascosto a prescindere dallo stato\n\nOrdinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.\n\nParametri dell'icona del tooltip\n\nAttributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `datachanged` del componente `list`?
Risposta: Evento lanciato quando la sorgente dati del componente riceve un aggiornamento
Domanda: A cosa serve l'evento `itemclick` del componente `list`?
Risposta: Evento lanciato quando viene effettuato un click su un elemento di lista
Domanda: A cosa serve l'evento `itemdoubleclick` del componente `list`?
Risposta: Evento lanciato quando viene effettuato un doppio click su un elemento di lista
Domanda: A cosa serve il componente `lista-delete`?
Risposta: Il componente `lista-delete` FramedWindow specifica per i bottoni di delete di lista.\nL'evento di apertura Ã¨ lanciato facendo click su un bottone, i cui parametri sono definiti all'interno del componente.\nL'url Ã¨ preimpostato secondo il valore di /DOCUMENTO/HREFSINGLE 
Domanda: Come si crea un componente `lista-delete`?
Risposta: Ecco un esempio di base di creazione di un componente `lista-delete`:<br /><pre><code><cis-ui:lista-delete /></code></pre>
Domanda: Quali sono gli attributi del componente `lista-delete`?
Risposta: Gli attributi del componente `lista-delete` sono i seguenti: <br /><ul><li>`withConfirm`</li></ul>
Domanda: Quali sono gli eventi del componente `lista-delete`?
Risposta: Gli eventi del componente `lista-delete` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `clickableRowTrigger` del componente `lista-delete`?
Risposta: PossibilitÃ  di aprire i single da una lista direttamente cliccando sulla riga.\nSe valorizzato, il bottone per l'apertura dei single viene nascosto
Domanda: A cosa serve la proprietÃ  `messageHandler` del componente `lista-delete`?
Risposta: Il messageHandler che deve essere utilizzato per aggiungere eventuali messaggi di errore
Domanda: A cosa serve la proprietÃ  `modalita` del componente `lista-delete`?
Risposta: ModalitÃ  del bottone. Indica quale operazione verrÃ  eseguita a seguito del click
Domanda: A cosa serve la proprietÃ  `single` del componente `lista-delete`?
Risposta: Parametri del single all'interno del dialog
Domanda: A cosa serve la proprietÃ  `` del componente `lista-delete`?
Risposta:                 \n            \n                Indirizzo di base della risorsa da visualizzare\n            \n                Valido solo per bottoni contenuti direttamente in una lista.\n                Aggiunge i valori del filtro della lista all'url da chiamare.\n            \n                Parametri chiave/valore da appendere all'url dell'iFrame\n            \n               Classe css dell'iFrame.\n            \n                Riferimento javascript al componente \"cis-ui:tabs\" dentro cui aprire questo link\n            \n                Parametri del nuovo tab che verrÃ  aperto dentro \"framecontainer\"\n            \n                Evento lanciato dopo che una window ha assunto lo stato attivo, quando cioÃ¨ passa in primo piano\n            \n                Evento lanciato dopo che una window Ã¨ stata chiusa per qualsiasi motivo (parametro closeReason)\n            \n                Evento lanciato dopo che una window Ã¨ stata aperta e visualizzata\n            \n                Se true, viene impostato uno stile overflow=auto all'elemento e ai sottoelementi.\n            \n                Evento lanciato prima che una window venga chiusa per qualsiasi motivo.\n                Si puÃ² interrompere la chiusura ritornando un valore false\n            \n                Evento lanciato prima che una window venga aperta.\n                Si puÃ² interrompere l'apertura ritornando un valore false\n            \n                Imposta il testo posto nella barra inferiore della window.\n                Se la window rappresnta un PDC, di default viene impostato con i valori di \"ultagg\" e \"utente\"\n            \n                Parametri del bottone di apertura della window\n            \n                Titolo della window.\n                Il default Ã¨ attribuito dal componente cis:pagina, altrimenti Ã¨ \"Finestra senza titolo\"\n            \n                Mostra/nasconde l'icona per chiudere la window.\n            \n                Evento lanciato dopo che una window ha perso lo stato attivo, quando cioÃ¨ passa in secondo piano\n            \n                Abilita/disabilita la funzionalitÃ  di trascinamento.\n            \n                Contenuto HTML dell'area adibita alle funzioni speciali della window.\n                Il contenuto viene visualizzato tra il titolo e le icone di controllo di stato\n            \n                Mostra/nasconde l'icona per minimizzare la window.\n            \n                Mostra/nasconde l'icona per ingrandire a tutto schermo la window.\n            \n                Se true, la window Ã¨ modale.\n                Una window modale non puÃ² perdere lo stato attivo.\n            \n                Abilita/disabilita gli handler di ridimensionamento.\n            \n                Skin del componente HTML.\n                PuÃ² essere utilizzato per personalizzare stili css.\n                Il preset \"simple\" imposta i seguenti parametri:\n                - withIcon = false;\n                - minIcon = false;\n                - maxIcon = false;\n                - withBottomBar = false;\n            \n                Posizione iniziale della window.\n            \n                Stato iniziale della window.\n            \n                Mostra/nasconde la barra inferiore della window, generalmente utilizzata per aggiungere messaggi di stato.\n            \n                Mostra/nasconde la barra superiore della window, contenente i bottoni per chiudere/ridimensionare la window.\n            \n                Se true, alla chiusura della window viene lanciata la funzione di reload nella pagina del componente che ne ha richiesto l'apertura.\n                Vale true se la window Ã¨ una iFrame\n            \n                ModalitÃ  reload del contesto parent.\n                Il default Ã¨ \"list\".\n            \n                Mostra/nasconde l'icona principale della window.\n            \n                Classe css dell'elemento che contiene il footer della window.\n            \n                Classe css del testo footer della window.\n            \n                Classe css del testo della barra del titolo.\n            \n                Tooltip di sistema che compare sul bottone di chiusura della window.\n            \n                Classe css dell'elemento contenitore del iFrame o del markup principale della window.\n            \n                Classe css del contenitore degli elementi a sinistra del testo del titolo.\n            \n                Classe css del contenitore degli elementi a destra del testo del titolo.\n            \n                Classe css dell'icona principale della window.\n            \n                Classe css dell'elemento che contiene l'icona principale della window.\n            \n                Classe css aggiuntiva dell'icona principale della window, utilizzata lato applicativo.\n            \n                Tooltip di sistema che compare sul bottone per ripristinare la dimensione originale della window.\n            \n                Tooltip di sistema che compare sul bottone per ingrandire a tutto schermo la window.\n            \n                Tooltip di sistema che compare sul bottone per minimizzare la window.\n            \n                Classe css dell'elemento che contiene una window modale.\n            \n                Classe css della barra del titolo.\n            \n                Classe css comune a tutte le icone della barra del titolo.\n            \n                Bottone che ha chiamato il visualizzatore\n            \n                Lista relativa al bottone che ha chiamato l'apertura di questa window\n            \n                Riga della lista relativa al bottone che ha chiamato l'apertura di questa window\n            \n                Attributo id dell'elemento HTML del componente\n            \n                Attributo name dell'elemento HTML del componente\n            \n                Nome della variabile javascript registrata nell'oggetto window\n            \n                Testo del tooltip del componente.\n                Il tooltip si attiva al passaggio col mouse sopra il componente.\n                Se la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n            \n                Posizione del tooltip.\n            \n                Stile CSS inline dell'elemento HTML principale\n            \n                Classe CSS dell'elemento HTML principale.\n                Il default Ã¨ una classe equivalente al nome del componente\n            \n                Attributo HTML \"role\" del componente\n                PuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n            \n                Se true nasconde l'elemento.\n                Imposta l'attributo HTML \"hidden\" dell'elemento principale.\n                Utilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n            \n                Se true inibisce la selezione sull'elemento.\n                Imposta l'attributo HTML \"unselectable\" dell'elemento principale. \n                Utilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\n                Il default Ã¨ true per tutti i fields, i bottoni e i menu\n            \n                Se true disabilita l'elemento.\n                Imposta l'attributo HTML \"disabled\" dell'elemento principale.\n                Utilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n            \n                Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\n                Se false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \n                Gestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\n                Il default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n            \n                Se true rende l'elemento flessibile.\n                Un elemento flessibile prende tutto il contenuto rimanente del contenitore.\n                Imposta l'attributo HTML \"flexible\" dell'elemento principale.\n                Utilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n            \n                Evento chiamato prima di eseguire \"click\".\n                Ritornare false per bloccare il flusso dell'evento click.\n            \n                Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n            \n                Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\n                Il componente non Ã¨ ancora renderizzato\n            \n                Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n            \n                Evento chiamato quando il componente cambia stato responsive\n            \n                Elenco degli attributi custom da applicare al componente.\n                Ogni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n            \n                Imposta il valore \"height\" nello stile inline css dell'elemento principale\n            \n                Imposta il valore \"width\" nello stile inline css dell'elemento principale\n            \n                Imposta il valore \"left\" nello stile inline css dell'elemento principale\n            \n                Imposta il valore \"top\" nello stile inline css dell'elemento principale\n            \n                Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n            \n                Indica se il componente Ã¨ in modalitÃ  T (liste inline)\n            \n                Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\n                Il valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeload` del componente `lista-delete`?
Risposta: Evento chiamato appena prima di eseguire una chiamata ajax.\nImpostando il valore di return a false, si impedisce alla chiamata di proseguire
Domanda: A cosa serve l'evento `afterload` del componente `lista-delete`?
Risposta: Evento chiamato al conseguimento di una chiamata ajax con esito positivo e senza errori
Domanda: A cosa serve l'evento `onerror` del componente `lista-delete`?
Risposta: Evento chiamato in caso di errore o in caso in cui la chiamata riporti messaggi di errore
Domanda: A cosa serve l'evento `always` del componente `lista-delete`?
Risposta: Evento chiamato al termine di una chiamata, a prescindere dallo stato di errore. \nE' l'ultimo evento che viene chiamato
Domanda: A cosa serve il componente `lista-edit`?
Risposta: Il componente `lista-edit` FramedWindow specifica per i bottoni di edit di lista.\nL'evento di apertura Ã¨ lanciato facendo click su un bottone, i cui parametri sono definiti all'interno del componente.\nL'url Ã¨ preimpostato secondo il valore di /DOCUMENTO/HREFSINGLE 
Domanda: Come si crea un componente `lista-edit`?
Risposta: Ecco un esempio di base di creazione di un componente `lista-edit`:<br /><pre><code><cis-ui:lista-edit /></code></pre>
Domanda: Quali sono gli attributi del componente `lista-edit`?
Risposta: Gli attributi del componente `lista-edit` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `lista-edit`?
Risposta: Gli eventi del componente `lista-edit` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `clickableRowTrigger` del componente `lista-edit`?
Risposta: PossibilitÃ  di aprire i single da una lista direttamente cliccando sulla riga.\nSe valorizzato, il bottone per l'apertura dei single viene nascosto
Domanda: A cosa serve la proprietÃ  `messageHandler` del componente `lista-edit`?
Risposta: Il messageHandler che deve essere utilizzato per aggiungere eventuali messaggi di errore
Domanda: A cosa serve la proprietÃ  `modalita` del componente `lista-edit`?
Risposta: ModalitÃ  del bottone. Indica quale operazione verrÃ  eseguita a seguito del click
Domanda: A cosa serve la proprietÃ  `single` del componente `lista-edit`?
Risposta: Parametri del single all'interno del dialog
Domanda: A cosa serve la proprietÃ  `` del componente `lista-edit`?
Risposta:                 \n            \n                Indirizzo di base della risorsa da visualizzare\n            \n                Valido solo per bottoni contenuti direttamente in una lista.\n                Aggiunge i valori del filtro della lista all'url da chiamare.\n            \n                Parametri chiave/valore da appendere all'url dell'iFrame\n            \n               Classe css dell'iFrame.\n            \n                Riferimento javascript al componente \"cis-ui:tabs\" dentro cui aprire questo link\n            \n                Parametri del nuovo tab che verrÃ  aperto dentro \"framecontainer\"\n            \n                Evento lanciato dopo che una window ha assunto lo stato attivo, quando cioÃ¨ passa in primo piano\n            \n                Evento lanciato dopo che una window Ã¨ stata chiusa per qualsiasi motivo (parametro closeReason)\n            \n                Evento lanciato dopo che una window Ã¨ stata aperta e visualizzata\n            \n                Se true, viene impostato uno stile overflow=auto all'elemento e ai sottoelementi.\n            \n                Evento lanciato prima che una window venga chiusa per qualsiasi motivo.\n                Si puÃ² interrompere la chiusura ritornando un valore false\n            \n                Evento lanciato prima che una window venga aperta.\n                Si puÃ² interrompere l'apertura ritornando un valore false\n            \n                Imposta il testo posto nella barra inferiore della window.\n                Se la window rappresnta un PDC, di default viene impostato con i valori di \"ultagg\" e \"utente\"\n            \n                Parametri del bottone di apertura della window\n            \n                Titolo della window.\n                Il default Ã¨ attribuito dal componente cis:pagina, altrimenti Ã¨ \"Finestra senza titolo\"\n            \n                Mostra/nasconde l'icona per chiudere la window.\n            \n                Evento lanciato dopo che una window ha perso lo stato attivo, quando cioÃ¨ passa in secondo piano\n            \n                Abilita/disabilita la funzionalitÃ  di trascinamento.\n            \n                Contenuto HTML dell'area adibita alle funzioni speciali della window.\n                Il contenuto viene visualizzato tra il titolo e le icone di controllo di stato\n            \n                Mostra/nasconde l'icona per minimizzare la window.\n            \n                Mostra/nasconde l'icona per ingrandire a tutto schermo la window.\n            \n                Se true, la window Ã¨ modale.\n                Una window modale non puÃ² perdere lo stato attivo.\n            \n                Abilita/disabilita gli handler di ridimensionamento.\n            \n                Skin del componente HTML.\n                PuÃ² essere utilizzato per personalizzare stili css.\n                Il preset \"simple\" imposta i seguenti parametri:\n                - withIcon = false;\n                - minIcon = false;\n                - maxIcon = false;\n                - withBottomBar = false;\n            \n                Posizione iniziale della window.\n            \n                Stato iniziale della window.\n            \n                Mostra/nasconde la barra inferiore della window, generalmente utilizzata per aggiungere messaggi di stato.\n            \n                Mostra/nasconde la barra superiore della window, contenente i bottoni per chiudere/ridimensionare la window.\n            \n                Se true, alla chiusura della window viene lanciata la funzione di reload nella pagina del componente che ne ha richiesto l'apertura.\n                Vale true se la window Ã¨ una iFrame\n            \n                ModalitÃ  reload del contesto parent.\n                Il default Ã¨ \"list\".\n            \n                Mostra/nasconde l'icona principale della window.\n            \n                Classe css dell'elemento che contiene il footer della window.\n            \n                Classe css del testo footer della window.\n            \n                Classe css del testo della barra del titolo.\n            \n                Tooltip di sistema che compare sul bottone di chiusura della window.\n            \n                Classe css dell'elemento contenitore del iFrame o del markup principale della window.\n            \n                Classe css del contenitore degli elementi a sinistra del testo del titolo.\n            \n                Classe css del contenitore degli elementi a destra del testo del titolo.\n            \n                Classe css dell'icona principale della window.\n            \n                Classe css dell'elemento che contiene l'icona principale della window.\n            \n                Classe css aggiuntiva dell'icona principale della window, utilizzata lato applicativo.\n            \n                Tooltip di sistema che compare sul bottone per ripristinare la dimensione originale della window.\n            \n                Tooltip di sistema che compare sul bottone per ingrandire a tutto schermo la window.\n            \n                Tooltip di sistema che compare sul bottone per minimizzare la window.\n            \n                Classe css dell'elemento che contiene una window modale.\n            \n                Classe css della barra del titolo.\n            \n                Classe css comune a tutte le icone della barra del titolo.\n            \n                Bottone che ha chiamato il visualizzatore\n            \n                Lista relativa al bottone che ha chiamato l'apertura di questa window\n            \n                Riga della lista relativa al bottone che ha chiamato l'apertura di questa window\n            \n                Attributo id dell'elemento HTML del componente\n            \n                Attributo name dell'elemento HTML del componente\n            \n                Nome della variabile javascript registrata nell'oggetto window\n            \n                Testo del tooltip del componente.\n                Il tooltip si attiva al passaggio col mouse sopra il componente.\n                Se la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n            \n                Posizione del tooltip.\n            \n                Stile CSS inline dell'elemento HTML principale\n            \n                Classe CSS dell'elemento HTML principale.\n                Il default Ã¨ una classe equivalente al nome del componente\n            \n                Attributo HTML \"role\" del componente\n                PuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n            \n                Se true nasconde l'elemento.\n                Imposta l'attributo HTML \"hidden\" dell'elemento principale.\n                Utilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n            \n                Se true inibisce la selezione sull'elemento.\n                Imposta l'attributo HTML \"unselectable\" dell'elemento principale. \n                Utilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\n                Il default Ã¨ true per tutti i fields, i bottoni e i menu\n            \n                Se true disabilita l'elemento.\n                Imposta l'attributo HTML \"disabled\" dell'elemento principale.\n                Utilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n            \n                Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\n                Se false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \n                Gestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\n                Il default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n            \n                Se true rende l'elemento flessibile.\n                Un elemento flessibile prende tutto il contenuto rimanente del contenitore.\n                Imposta l'attributo HTML \"flexible\" dell'elemento principale.\n                Utilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n            \n                Evento chiamato prima di eseguire \"click\".\n                Ritornare false per bloccare il flusso dell'evento click.\n            \n                Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n            \n                Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\n                Il componente non Ã¨ ancora renderizzato\n            \n                Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n            \n                Evento chiamato quando il componente cambia stato responsive\n            \n                Elenco degli attributi custom da applicare al componente.\n                Ogni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n            \n                Imposta il valore \"height\" nello stile inline css dell'elemento principale\n            \n                Imposta il valore \"width\" nello stile inline css dell'elemento principale\n            \n                Imposta il valore \"left\" nello stile inline css dell'elemento principale\n            \n                Imposta il valore \"top\" nello stile inline css dell'elemento principale\n            \n                Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n            \n                Indica se il componente Ã¨ in modalitÃ  T (liste inline)\n            \n                Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\n                Il valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeload` del componente `lista-edit`?
Risposta: Evento chiamato appena prima di eseguire una chiamata ajax.\nImpostando il valore di return a false, si impedisce alla chiamata di proseguire
Domanda: A cosa serve l'evento `afterload` del componente `lista-edit`?
Risposta: Evento chiamato al conseguimento di una chiamata ajax con esito positivo e senza errori
Domanda: A cosa serve l'evento `onerror` del componente `lista-edit`?
Risposta: Evento chiamato in caso di errore o in caso in cui la chiamata riporti messaggi di errore
Domanda: A cosa serve l'evento `always` del componente `lista-edit`?
Risposta: Evento chiamato al termine di una chiamata, a prescindere dallo stato di errore. \nE' l'ultimo evento che viene chiamato
Domanda: A cosa serve il componente `lista-nuovo`?
Risposta: Il componente `lista-nuovo` FramedWindow specifica per i bottoni di creazione elementi di lista.\nL'evento di apertura Ã¨ lanciato facendo click su un bottone, i cui parametri sono definiti all'interno del componente.\nL'url Ã¨ preimpostato secondo il valore di /DOCUMENTO/HREFSINGLE 
Domanda: Come si crea un componente `lista-nuovo`?
Risposta: Ecco un esempio di base di creazione di un componente `lista-nuovo`:<br /><pre><code><cis-ui:lista-nuovo /></code></pre>
Domanda: Quali sono gli attributi del componente `lista-nuovo`?
Risposta: Gli attributi del componente `lista-nuovo` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `lista-nuovo`?
Risposta: Gli eventi del componente `lista-nuovo` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `clickableRowTrigger` del componente `lista-nuovo`?
Risposta: PossibilitÃ  di aprire i single da una lista direttamente cliccando sulla riga.\nSe valorizzato, il bottone per l'apertura dei single viene nascosto
Domanda: A cosa serve la proprietÃ  `messageHandler` del componente `lista-nuovo`?
Risposta: Il messageHandler che deve essere utilizzato per aggiungere eventuali messaggi di errore
Domanda: A cosa serve la proprietÃ  `modalita` del componente `lista-nuovo`?
Risposta: ModalitÃ  del bottone. Indica quale operazione verrÃ  eseguita a seguito del click
Domanda: A cosa serve la proprietÃ  `single` del componente `lista-nuovo`?
Risposta: Parametri del single all'interno del dialog
Domanda: A cosa serve la proprietÃ  `` del componente `lista-nuovo`?
Risposta:                 \n            \n                Indirizzo di base della risorsa da visualizzare\n            \n                Valido solo per bottoni contenuti direttamente in una lista.\n                Aggiunge i valori del filtro della lista all'url da chiamare.\n            \n                Parametri chiave/valore da appendere all'url dell'iFrame\n            \n               Classe css dell'iFrame.\n            \n                Riferimento javascript al componente \"cis-ui:tabs\" dentro cui aprire questo link\n            \n                Parametri del nuovo tab che verrÃ  aperto dentro \"framecontainer\"\n            \n                Evento lanciato dopo che una window ha assunto lo stato attivo, quando cioÃ¨ passa in primo piano\n            \n                Evento lanciato dopo che una window Ã¨ stata chiusa per qualsiasi motivo (parametro closeReason)\n            \n                Evento lanciato dopo che una window Ã¨ stata aperta e visualizzata\n            \n                Se true, viene impostato uno stile overflow=auto all'elemento e ai sottoelementi.\n            \n                Evento lanciato prima che una window venga chiusa per qualsiasi motivo.\n                Si puÃ² interrompere la chiusura ritornando un valore false\n            \n                Evento lanciato prima che una window venga aperta.\n                Si puÃ² interrompere l'apertura ritornando un valore false\n            \n                Imposta il testo posto nella barra inferiore della window.\n                Se la window rappresnta un PDC, di default viene impostato con i valori di \"ultagg\" e \"utente\"\n            \n                Parametri del bottone di apertura della window\n            \n                Titolo della window.\n                Il default Ã¨ attribuito dal componente cis:pagina, altrimenti Ã¨ \"Finestra senza titolo\"\n            \n                Mostra/nasconde l'icona per chiudere la window.\n            \n                Evento lanciato dopo che una window ha perso lo stato attivo, quando cioÃ¨ passa in secondo piano\n            \n                Abilita/disabilita la funzionalitÃ  di trascinamento.\n            \n                Contenuto HTML dell'area adibita alle funzioni speciali della window.\n                Il contenuto viene visualizzato tra il titolo e le icone di controllo di stato\n            \n                Mostra/nasconde l'icona per minimizzare la window.\n            \n                Mostra/nasconde l'icona per ingrandire a tutto schermo la window.\n            \n                Se true, la window Ã¨ modale.\n                Una window modale non puÃ² perdere lo stato attivo.\n            \n                Abilita/disabilita gli handler di ridimensionamento.\n            \n                Skin del componente HTML.\n                PuÃ² essere utilizzato per personalizzare stili css.\n                Il preset \"simple\" imposta i seguenti parametri:\n                - withIcon = false;\n                - minIcon = false;\n                - maxIcon = false;\n                - withBottomBar = false;\n            \n                Posizione iniziale della window.\n            \n                Stato iniziale della window.\n            \n                Mostra/nasconde la barra inferiore della window, generalmente utilizzata per aggiungere messaggi di stato.\n            \n                Mostra/nasconde la barra superiore della window, contenente i bottoni per chiudere/ridimensionare la window.\n            \n                Se true, alla chiusura della window viene lanciata la funzione di reload nella pagina del componente che ne ha richiesto l'apertura.\n                Vale true se la window Ã¨ una iFrame\n            \n                ModalitÃ  reload del contesto parent.\n                Il default Ã¨ \"list\".\n            \n                Mostra/nasconde l'icona principale della window.\n            \n                Classe css dell'elemento che contiene il footer della window.\n            \n                Classe css del testo footer della window.\n            \n                Classe css del testo della barra del titolo.\n            \n                Tooltip di sistema che compare sul bottone di chiusura della window.\n            \n                Classe css dell'elemento contenitore del iFrame o del markup principale della window.\n            \n                Classe css del contenitore degli elementi a sinistra del testo del titolo.\n            \n                Classe css del contenitore degli elementi a destra del testo del titolo.\n            \n                Classe css dell'icona principale della window.\n            \n                Classe css dell'elemento che contiene l'icona principale della window.\n            \n                Classe css aggiuntiva dell'icona principale della window, utilizzata lato applicativo.\n            \n                Tooltip di sistema che compare sul bottone per ripristinare la dimensione originale della window.\n            \n                Tooltip di sistema che compare sul bottone per ingrandire a tutto schermo la window.\n            \n                Tooltip di sistema che compare sul bottone per minimizzare la window.\n            \n                Classe css dell'elemento che contiene una window modale.\n            \n                Classe css della barra del titolo.\n            \n                Classe css comune a tutte le icone della barra del titolo.\n            \n                Bottone che ha chiamato il visualizzatore\n            \n                Lista relativa al bottone che ha chiamato l'apertura di questa window\n            \n                Riga della lista relativa al bottone che ha chiamato l'apertura di questa window\n            \n                Attributo id dell'elemento HTML del componente\n            \n                Attributo name dell'elemento HTML del componente\n            \n                Nome della variabile javascript registrata nell'oggetto window\n            \n                Testo del tooltip del componente.\n                Il tooltip si attiva al passaggio col mouse sopra il componente.\n                Se la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n            \n                Posizione del tooltip.\n            \n                Stile CSS inline dell'elemento HTML principale\n            \n                Classe CSS dell'elemento HTML principale.\n                Il default Ã¨ una classe equivalente al nome del componente\n            \n                Attributo HTML \"role\" del componente\n                PuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n            \n                Se true nasconde l'elemento.\n                Imposta l'attributo HTML \"hidden\" dell'elemento principale.\n                Utilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n            \n                Se true inibisce la selezione sull'elemento.\n                Imposta l'attributo HTML \"unselectable\" dell'elemento principale. \n                Utilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\n                Il default Ã¨ true per tutti i fields, i bottoni e i menu\n            \n                Se true disabilita l'elemento.\n                Imposta l'attributo HTML \"disabled\" dell'elemento principale.\n                Utilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n            \n                Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\n                Se false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \n                Gestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\n                Il default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n            \n                Se true rende l'elemento flessibile.\n                Un elemento flessibile prende tutto il contenuto rimanente del contenitore.\n                Imposta l'attributo HTML \"flexible\" dell'elemento principale.\n                Utilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n            \n                Evento chiamato prima di eseguire \"click\".\n                Ritornare false per bloccare il flusso dell'evento click.\n            \n                Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n            \n                Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\n                Il componente non Ã¨ ancora renderizzato\n            \n                Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n            \n                Evento chiamato quando il componente cambia stato responsive\n            \n                Elenco degli attributi custom da applicare al componente.\n                Ogni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n            \n                Imposta il valore \"height\" nello stile inline css dell'elemento principale\n            \n                Imposta il valore \"width\" nello stile inline css dell'elemento principale\n            \n                Imposta il valore \"left\" nello stile inline css dell'elemento principale\n            \n                Imposta il valore \"top\" nello stile inline css dell'elemento principale\n            \n                Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n            \n                Indica se il componente Ã¨ in modalitÃ  T (liste inline)\n            \n                Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\n                Il valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeload` del componente `lista-nuovo`?
Risposta: Evento chiamato appena prima di eseguire una chiamata ajax.\nImpostando il valore di return a false, si impedisce alla chiamata di proseguire
Domanda: A cosa serve l'evento `afterload` del componente `lista-nuovo`?
Risposta: Evento chiamato al conseguimento di una chiamata ajax con esito positivo e senza errori
Domanda: A cosa serve l'evento `onerror` del componente `lista-nuovo`?
Risposta: Evento chiamato in caso di errore o in caso in cui la chiamata riporti messaggi di errore
Domanda: A cosa serve l'evento `always` del componente `lista-nuovo`?
Risposta: Evento chiamato al termine di una chiamata, a prescindere dallo stato di errore. \nE' l'ultimo evento che viene chiamato
Domanda: A cosa serve il componente `lista-saveall`?
Risposta: Il componente `lista-saveall` Bottone specifico per il salvataggio di tutti gli elementi di una lista T
Domanda: Come si crea un componente `lista-saveall`?
Risposta: Ecco un esempio di base di creazione di un componente `lista-saveall`:<br /><pre><code><cis-ui:lista-saveall /></code></pre>
Domanda: Quali sono gli attributi del componente `lista-saveall`?
Risposta: Gli attributi del componente `lista-saveall` sono i seguenti: <br /><ul><li>`withConfirm`</li><li>`confirmMessage`</li></ul>
Domanda: Quali sono gli eventi del componente `lista-saveall`?
Risposta: Gli eventi del componente `lista-saveall` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `icon` del componente `lista-saveall`?
Risposta: Classe css dell'icona del bottone
Domanda: A cosa serve la proprietÃ  `iconposition` del componente `lista-saveall`?
Risposta: Posizione dell'icona del bottone rispetto al testo.
Domanda: A cosa serve la proprietÃ  `text` del componente `lista-saveall`?
Risposta: Testo del bottone
Domanda: A cosa serve la proprietÃ  `wrap` del componente `lista-saveall`?
Risposta: Se true, segnala che il testo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento del testo.
Domanda: A cosa serve la proprietÃ  `` del componente `lista-saveall`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve il componente `menu`?
Risposta: Il componente `menu` Rappresenta un menu principale di navigazione\nUn menu principale Ã¨ una sequenza di voci di menu generalmente posta in alto nella pagina
Domanda: Come si crea un componente `menu`?
Risposta: Ecco un esempio di base di creazione di un componente `menu`:<br /><pre><code><cis-ui:menu showmenuhandler=\"true\">\n    <items>\n        <item text=\"Menu 1\" funzione=\"menu1\">\n            <items>\n                <item text=\"Voce 1 in window\" funzione=\"voce1\" href=\"/newAppl/demo/temi/boston/HComponenti\" inwindow=\"true\" />\n            </items>\n        </item>\n        <item text=\"Menu 2\" desc=\"sottotitolo menu\" funzione=\"menu2\">\n            <items>\n                <item text=\"Voce 1\" funzione=\"voce1\" href=\"/newAppl/demo/temi/boston/HComponenti\" />\n                <separator/>\n                <item text=\"Voce 2\" desc=\"sottotitolo voce menu\" funzione=\"voce2\">\n                    <items>\n                        <item text=\"Voce disabilitata\" funzione=\"voce1\" forzaabilitato=\"false\" />\n                        <item>\n                            <text>Voce 2, con elementi</text>\n                            <funzione>voce2</funzione>\n                        </item>\n                        <separator/>\n                        <item text=\"Voce 3\" funzione=\"voce3\">\n                            <items>\n                                <item text=\"Voce 1\" funzione=\"voce1\" />\n                                <item text=\"Voce 2\" funzione=\"voce2\" />\n                                <item text=\"Voce 3\" funzione=\"voce3\" />\n                            </items>\n                        </item>\n                        <item text=\"Voce 4\" />\n                    </items>\n                </item>\n            </items>\n        </item>\n    </items>\n    <itemclick>\n        function(sender,item) {\n            console.log(item);\n        }\n    </itemclick>\n</cis-ui:menu></code></pre>
Domanda: Quali sono gli attributi del componente `menu`?
Risposta: Gli attributi del componente `menu` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `menu`?
Risposta: Gli eventi del componente `menu` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `closeonmouseleave` del componente `menu`?
Risposta: Se true, quando il mouse lascia una voce di menu ed Ã¨ passato tanto tempo quanto indicato da \"closeonmouseleavedelay\", il menu viene chiuso automaticamente.
Domanda: A cosa serve la proprietÃ  `closeonmouseleavedelay` del componente `menu`?
Risposta: Associato a \"closeonmouseleave\". Indica il tempo dopo il quale il menu, che ha perso lo stato attivo, deve essere chiuso automaticamente.
Domanda: A cosa serve la proprietÃ  `items` del componente `menu`?
Risposta: Sequenza di voci di menu
Domanda: A cosa serve la proprietÃ  `showicon` del componente `menu`?
Risposta: Mostra/nasconde le icone delle voci di menu di primo livello.
Domanda: A cosa serve la proprietÃ  `showmenuhandler` del componente `menu`?
Risposta: Mostra/nasconde le icone delle frecce delle voci di menu di primo livello.
Domanda: A cosa serve la proprietÃ  `showmenuitemhandler` del componente `menu`?
Risposta: Mostra/nasconde le icone delle frecce delle voci di menu di n-esimo livello.
Domanda: A cosa serve la proprietÃ  `showsubicon` del componente `menu`?
Risposta: Mostra/nasconde le icone delle voci di menu di n-esimo livello.
Domanda: A cosa serve la proprietÃ  `framecontainer` del componente `menu`?
Risposta: Nome della variabile del componente cis-ui-tabcontrol associato al menu, in cui vengono aperte le pagine dell'applicativo
Domanda: A cosa serve la proprietÃ  `` del componente `menu`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `itemclick` del componente `menu`?
Risposta: Evento che viene lanciato quando una sottovoce di primo livello viene cliccata
Domanda: A cosa serve il componente `message`?
Risposta: Il componente `message` Visualizza un messaggio nel messageHandler
Domanda: Come si crea un componente `message`?
Risposta: Ecco un esempio di base di creazione di un componente `message`:<br /><pre><code><cis-ui:message title=\"Titolo\" text=\"Messaggio\" /></code></pre>
Domanda: Quali sono gli attributi del componente `message`?
Risposta: Gli attributi del componente `message` sono i seguenti: <br /><ul><li>`varname`</li><li>`text`</li><li>`title`</li><li>`type`</li><li>`dynamic`</li><li>`code`</li><li>`closeable`</li><li>`closeWithClick`</li><li>`withHeader`</li><li>`messageHandler`</li><li>`context`</li><li>`titleOnTop`</li><li>`withIcon`</li><li>`withTimestamp`</li></ul>
Domanda: Quali sono gli eventi del componente `message`?
Risposta: Gli eventi del componente `message` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve il componente `messagebox`?
Risposta: Il componente `messagebox` Chiamata CIS.UI.MessageBox diretta.\nVa inserito all'interno di un contesto javascript.\nSemplifica l'utilizzo dell'api js grazie all'help dello schema xsd
Domanda: Come si crea un componente `messagebox`?
Risposta: Ecco un esempio di base di creazione di un componente `messagebox`:<br /><pre><code><cis-ui:messagebox text=\"pippo\">\nrclose>\ntion(wnd, reason, ret) {\ndow.top.location.href = req.content.redirect;\n\nerclose>\nui:messagebox></code></pre>
Domanda: Quali sono gli attributi del componente `messagebox`?
Risposta: Gli attributi del componente `messagebox` sono i seguenti: <br /><ul><li>`varname`</li><li>`cancelButton`</li><li>`detailsButton`</li><li>`okButton`</li><li>`noButton`</li><li>`yesButton`</li><li>`text`</li><li>`caption`</li><li>`messageIcon`</li><li>`detail`</li><li>`type`</li><li>`withCancelButton`</li></ul>
Domanda: Quali sono gli eventi del componente `messagebox`?
Risposta: Gli eventi del componente `messagebox` sono i seguenti: <br /><ul><li>`afterclose`</li><li>`confirm`</li><li>`reject`</li><li>`rollback`</li></ul>
Domanda: A cosa serve il componente `messagehandler`?
Risposta: Il componente `messagehandler` Contenitore di messaggi destinati all'utente
Domanda: Come si crea un componente `messagehandler`?
Risposta: Ecco un esempio di base di creazione di un componente `messagehandler`:<br /><pre><code><cis-ui:messagehandler varname=\"msh\" />\n<script>\n    //Aggiunta manuale messaggi\n    msh.add(new CIS.UI.Message({\n        type: \"help\",\n        code: 10000,\n        text: \"Messaggio di help\"\n    }));\n    msh.add(new CIS.UI.Message({\n        type: \"question\",\n        code: 10000,\n        text: \"Messaggio di question\"\n    }));\n    msh.add(new CIS.UI.Message({\n        type: CIS.Enums.MessageTypes.INFO,\n        code: 10000,\n        text: \"Messaggio di informazioni\"\n    }));\n    msh.add(new CIS.UI.Message({\n        type: 4,\n        code: 10000,\n        text: \"Messaggio di attenzione\"\n    }));\n    msh.add(new CIS.UI.Message({\n        type: 8,\n        code: 10000,\n        text: \"Messaggio di errore\"\n    }));\n</script></code></pre>
Domanda: Quali sono gli attributi del componente `messagehandler`?
Risposta: Gli attributi del componente `messagehandler` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `messagehandler`?
Risposta: Gli eventi del componente `messagehandler` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `id` del componente `messagehandler`?
Risposta: Attributo id dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `name` del componente `messagehandler`?
Risposta: Attributo name dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `varname` del componente `messagehandler`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve la proprietÃ  `tooltip` del componente `messagehandler`?
Risposta: Testo del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione
Domanda: A cosa serve la proprietÃ  `tooltipposition` del componente `messagehandler`?
Risposta: Posizione del tooltip.
Domanda: A cosa serve la proprietÃ  `style` del componente `messagehandler`?
Risposta: Stile CSS inline dell'elemento HTML principale
Domanda: A cosa serve la proprietÃ  `mainclass` del componente `messagehandler`?
Risposta: Classe CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente
Domanda: A cosa serve la proprietÃ  `role` del componente `messagehandler`?
Risposta: Attributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript
Domanda: A cosa serve la proprietÃ  `skin` del componente `messagehandler`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css
Domanda: A cosa serve la proprietÃ  `hidden` del componente `messagehandler`?
Risposta: Se true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento
Domanda: A cosa serve la proprietÃ  `unselectable` del componente `messagehandler`?
Risposta: Se true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu
Domanda: A cosa serve la proprietÃ  `disabled` del componente `messagehandler`?
Risposta: Se true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento
Domanda: A cosa serve la proprietÃ  `contextMenuEnabled` del componente `messagehandler`?
Risposta: Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.
Domanda: A cosa serve la proprietÃ  `flexible` del componente `messagehandler`?
Risposta: Se true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento
Domanda: A cosa serve la proprietÃ  `userattrs` del componente `messagehandler`?
Risposta: Elenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"
Domanda: A cosa serve la proprietÃ  `height` del componente `messagehandler`?
Risposta: Imposta il valore \"height\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `width` del componente `messagehandler`?
Risposta: Imposta il valore \"width\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `left` del componente `messagehandler`?
Risposta: Imposta il valore \"left\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `top` del componente `messagehandler`?
Risposta: Imposta il valore \"top\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `permessi` del componente `messagehandler`?
Risposta: Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no
Domanda: A cosa serve la proprietÃ  `tmode` del componente `messagehandler`?
Risposta: Indica se il componente Ã¨ in modalitÃ  T (liste inline)
Domanda: A cosa serve la proprietÃ  `colspan` del componente `messagehandler`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeclick` del componente `messagehandler`?
Risposta: Evento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.
Domanda: A cosa serve l'evento `click` del componente `messagehandler`?
Risposta: Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)
Domanda: A cosa serve l'evento `ready` del componente `messagehandler`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato
Domanda: A cosa serve l'evento `connected` del componente `messagehandler`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato
Domanda: A cosa serve l'evento `responsiveChanged` del componente `messagehandler`?
Risposta: Evento chiamato quando il componente cambia stato responsive
Domanda: A cosa serve il componente `messageholder`?
Risposta: Il componente `messageholder` Contenitore della storia dei messaggi che sono stati inviati all'utente.\nIl componente Ã¨ formato da un contatore e da un bottone, che se attivato fa comparire una maschera dove sono visualizzati i dettagli di tutti i messaggi inviati all'utente.
Domanda: Come si crea un componente `messageholder`?
Risposta: Ecco un esempio di base di creazione di un componente `messageholder`:<br /><pre><code><cis-ui:messageholder varname=\"holder\" />\n<script>\n    //Test aggiunta messaggi forzata\n    holder.addMessage(new CIS.UI.Message({\n        type: \"help\",\n        code: 10000,\n        text: \"Messaggio di help\"\n    }));\n    holder.addMessage(new CIS.UI.Message({\n        type: \"question\",\n        code: 10000,\n        text: \"Messaggio di question\"\n    }));\n    holder.addMessage(new CIS.UI.Message({\n        type: CIS.Enums.MessageTypes.INFO,\n        code: 10000,\n        text: \"Messaggio di informazioni\"\n    }));\n    holder.addMessage(new CIS.UI.Message({\n        type: 4,\n        code: 10000,\n        text: \"Messaggio di attenzione\"\n    }));\n    holder.addMessage(new CIS.UI.Message({\n        type: 8,\n        code: 10000,\n        text: \"Messaggio di errore\"\n    }));\n</script></code></pre>
Domanda: Quali sono gli attributi del componente `messageholder`?
Risposta: Gli attributi del componente `messageholder` sono i seguenti: <br /><ul><li>`deleteButton`</li><li>`icon`</li><li>`datalist`</li><li>`setreadbutton`</li><li>`setunreadbutton`</li><li>`window`</li></ul>
Domanda: Quali sono gli eventi del componente `messageholder`?
Risposta: Gli eventi del componente `messageholder` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `id` del componente `messageholder`?
Risposta: Attributo id dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `name` del componente `messageholder`?
Risposta: Attributo name dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `varname` del componente `messageholder`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve la proprietÃ  `tooltip` del componente `messageholder`?
Risposta: Testo del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione
Domanda: A cosa serve la proprietÃ  `tooltipposition` del componente `messageholder`?
Risposta: Posizione del tooltip.
Domanda: A cosa serve la proprietÃ  `style` del componente `messageholder`?
Risposta: Stile CSS inline dell'elemento HTML principale
Domanda: A cosa serve la proprietÃ  `mainclass` del componente `messageholder`?
Risposta: Classe CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente
Domanda: A cosa serve la proprietÃ  `role` del componente `messageholder`?
Risposta: Attributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript
Domanda: A cosa serve la proprietÃ  `skin` del componente `messageholder`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css
Domanda: A cosa serve la proprietÃ  `hidden` del componente `messageholder`?
Risposta: Se true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento
Domanda: A cosa serve la proprietÃ  `unselectable` del componente `messageholder`?
Risposta: Se true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu
Domanda: A cosa serve la proprietÃ  `disabled` del componente `messageholder`?
Risposta: Se true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento
Domanda: A cosa serve la proprietÃ  `contextMenuEnabled` del componente `messageholder`?
Risposta: Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.
Domanda: A cosa serve la proprietÃ  `flexible` del componente `messageholder`?
Risposta: Se true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento
Domanda: A cosa serve la proprietÃ  `userattrs` del componente `messageholder`?
Risposta: Elenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"
Domanda: A cosa serve la proprietÃ  `height` del componente `messageholder`?
Risposta: Imposta il valore \"height\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `width` del componente `messageholder`?
Risposta: Imposta il valore \"width\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `left` del componente `messageholder`?
Risposta: Imposta il valore \"left\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `top` del componente `messageholder`?
Risposta: Imposta il valore \"top\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `permessi` del componente `messageholder`?
Risposta: Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no
Domanda: A cosa serve la proprietÃ  `tmode` del componente `messageholder`?
Risposta: Indica se il componente Ã¨ in modalitÃ  T (liste inline)
Domanda: A cosa serve la proprietÃ  `colspan` del componente `messageholder`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeclick` del componente `messageholder`?
Risposta: Evento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.
Domanda: A cosa serve l'evento `click` del componente `messageholder`?
Risposta: Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)
Domanda: A cosa serve l'evento `ready` del componente `messageholder`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato
Domanda: A cosa serve l'evento `connected` del componente `messageholder`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato
Domanda: A cosa serve l'evento `responsiveChanged` del componente `messageholder`?
Risposta: Evento chiamato quando il componente cambia stato responsive
Domanda: A cosa serve il componente `money`?
Risposta: Il componente `money` Rappresenta un valore monetario.\nShortcut di <cis-ui:decimal type=\"money\" />
Domanda: Come si crea un componente `money`?
Risposta: Ecco un esempio di base di creazione di un componente `money`:<br /><pre><code><cis-ui:money caption=\"Titolo\">\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/CdImpiego\"/></nodo>\n</cis-ui:money></code></pre>
Domanda: Quali sono gli attributi del componente `money`?
Risposta: Gli attributi del componente `money` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `money`?
Risposta: Gli eventi del componente `money` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `autotext` del componente `money`?
Risposta: Se false imposta i seguenti attributi sul campo di input: \nautocomplete=\"off\"\nrole=\"presentation\"\nautocorrect=\"off\"\nautocapitalize=\"off\nspellcheck=\"false\".
Domanda: A cosa serve la proprietÃ  `commandsposition` del componente `money`?
Risposta: Indica dove posizionare i bottoni per aumentare/diminuire il valore.
Domanda: A cosa serve la proprietÃ  `commandsvisible` del componente `money`?
Risposta: Indica se mostrare i bottoni per aumentare/diminuire il valore.
Domanda: A cosa serve la proprietÃ  `decimali` del componente `money`?
Risposta: Numero di decimali oltre i quali viene segnalato un errore.\nIl default Ã¨:\n- infiniti se il tipo Ã¨ decimal\n- 0 se il tipo Ã¨ int\n- 2 se il tipo Ã¨ currency
Domanda: A cosa serve la proprietÃ  `stepValue` del componente `money`?
Risposta: Valore che viene aggiunto o sottratto tramite i tasti ArrowUp e ArrowDown oppure i bottoni + e -
Domanda: A cosa serve la proprietÃ  `interi` del componente `money`?
Risposta: Numero di interi oltre il quale viene segnalato un errore.\nIl default Ã¨:\n- infiniti se il tipo Ã¨ decimal\n- 10 se il tipo Ã¨ int\n- 10 se il tipo Ã¨ currency
Domanda: A cosa serve la proprietÃ  `maxvalue` del componente `money`?
Risposta: Valore massimo oltre il quale viene segnalato un errore.\nIl default Ã¨:\n- 1.7976931348623157e+308 se il tipo Ã¨ decimal\n- 2147483647 se il tipo Ã¨ int
Domanda: A cosa serve la proprietÃ  `minvalue` del componente `money`?
Risposta: Valore minimo prima del quale viene segnalato un errore.\nIl default Ã¨:\n- -1.7976931348623157e+308 se il tipo Ã¨ decimal\n- -2147483648 se il tipo Ã¨ int
Domanda: A cosa serve la proprietÃ  `placeholder` del componente `money`?
Risposta: Placeholder del componente
Domanda: A cosa serve la proprietÃ  `separatoredecimali` del componente `money`?
Risposta: Carattere del separatore dei decimali.
Domanda: A cosa serve la proprietÃ  `separatoremigliaia` del componente `money`?
Risposta: Carattere del separatore delle migliaia.
Domanda: A cosa serve la proprietÃ  `textalign` del componente `money`?
Risposta: Allineamento del testo del valore del componente.
Domanda: A cosa serve la proprietÃ  `type` del componente `money`?
Risposta: Tipo specializzato del componente.
Domanda: A cosa serve la proprietÃ  `` del componente `money`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente\n\nPosizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields\n\nImposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"\n\nSe true, il valore \"0\" viene omesso.\n\nImposta il lovale specifico di questo campo\n\nSe true, il campo viene renderizzato solo come label.\n\nIl nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"\n\nFunzione di validazione personalizzata utente\n\nSe true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.\n\nSe true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.\n\nTesto del tooltip quando il componente non ha valore e required Ã¨ 'true'\n\nImposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout\n\nSe true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.\n\nImposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.\n\nIl valore del campo\n\nEvento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato\n\nSe true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.\n\nClasse css dell'elemento contenitore dell'elemento corpo del componente e del testo del validatore.\n\nClasse css dell'elemento che contiene il corpo del componente.\n\nClasse css dell'elemento contenitore dell'elemento titolo del componente.\n\nStile inline dell'elemento contenitore dell'elemento titolo del componente (come captionHelperClass)\n\nClasse css dell'elemento che contiene il titolo del componente.\n\nClasse css dell'elemento che contiene l'elemento di input specifico del componente.\n\nClasse css dell'elemento che contiene il valore del componente in modalitÃ  \"labelonly\".\n\nClasse css dell'elemento contenitore del testo del validatore.\n\nClasse CSS dell'icona del validatore.\nSi puÃ² combinare questa classe con l'attributo state=\"error/valid\" per ottenere le 2 icone di stato\n\nParametri del tooltip di validazione\n\nSe true, lo stato grafico di \"valido\" Ã¨ visibile\n\nSe true, il testo del validatore viene nascosto a prescindere dallo stato\n\nOrdinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.\n\nParametri dell'icona del tooltip\n\nAttributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `focusout` del componente `money`?
Risposta: Evento lanciato quando il componente perde il focus
Domanda: A cosa serve l'evento `keydown` del componente `money`?
Risposta: Evento lanciato quando viene premuto un tasto sull'elemento di input
Domanda: A cosa serve l'evento `keypress` del componente `money`?
Risposta: Evento lanciato quando viene premuto un tasto sull'elemento di input
Domanda: A cosa serve il componente `nuovo`?
Risposta: Il componente `nuovo` FramedWindow specifica per i bottoni di creazione elementi.\nL'evento di apertura Ã¨ lanciato facendo click su un bottone, i cui parametri sono definiti all'interno del componente.\nL'url Ã¨ preimpostato secondo il valore di /DOCUMENTO/HREFSINGLE 
Domanda: Come si crea un componente `nuovo`?
Risposta: Ecco un esempio di base di creazione di un componente `nuovo`:<br /><pre><code><cis-ui:nuovo>\n    <button text=\"Nuovo\" />\n    <params>s\n        <param name=\"IdPratica\" value=\"5\" />\n    </params>\n</cis-ui:nuovo></code></pre>
Domanda: Quali sono gli attributi del componente `nuovo`?
Risposta: Gli attributi del componente `nuovo` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `nuovo`?
Risposta: Gli eventi del componente `nuovo` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `url` del componente `nuovo`?
Risposta: Indirizzo di base della risorsa da visualizzare
Domanda: A cosa serve la proprietÃ  `appendListFilter` del componente `nuovo`?
Risposta: Valido solo per bottoni contenuti direttamente in una lista.\nAggiunge i valori del filtro della lista all'url da chiamare.
Domanda: A cosa serve la proprietÃ  `params` del componente `nuovo`?
Risposta: Parametri chiave/valore da appendere all'url dell'iFrame
Domanda: A cosa serve la proprietÃ  `frameContainer` del componente `nuovo`?
Risposta: Riferimento javascript al componente \"cis-ui:tabs\" dentro cui aprire questo link
Domanda: A cosa serve la proprietÃ  `tabParams` del componente `nuovo`?
Risposta: Parametri del nuovo tab che verrÃ  aperto dentro \"framecontainer\"
Domanda: A cosa serve la proprietÃ  `` del componente `nuovo`?
Risposta: Evento lanciato dopo che una window ha assunto lo stato attivo, quando cioÃ¨ passa in primo piano\n\nEvento lanciato dopo che una window Ã¨ stata chiusa per qualsiasi motivo (parametro closeReason)\n\nEvento lanciato dopo che una window Ã¨ stata aperta e visualizzata\n\nSe true, viene impostato uno stile overflow=auto all'elemento e ai sottoelementi.\n\nEvento lanciato prima che una window venga chiusa per qualsiasi motivo.\nSi puÃ² interrompere la chiusura ritornando un valore false\n\nEvento lanciato prima che una window venga aperta.\nSi puÃ² interrompere l'apertura ritornando un valore false\n\nImposta il testo posto nella barra inferiore della window.\nSe la window rappresnta un PDC, di default viene impostato con i valori di \"ultagg\" e \"utente\"\n\nParametri del bottone di apertura della window\n\nTitolo della window.\nIl default Ã¨ attribuito dal componente cis:pagina, altrimenti Ã¨ \"Finestra senza titolo\"\n\nMostra/nasconde l'icona per chiudere la window.\n\nEvento lanciato dopo che una window ha perso lo stato attivo, quando cioÃ¨ passa in secondo piano\n\nAbilita/disabilita la funzionalitÃ  di trascinamento.\n\nContenuto HTML dell'area adibita alle funzioni speciali della window.\nIl contenuto viene visualizzato tra il titolo e le icone di controllo di stato\n\nMostra/nasconde l'icona per minimizzare la window.\n\nMostra/nasconde l'icona per ingrandire a tutto schermo la window.\n\nSe true, la window Ã¨ modale.\nUna window modale non puÃ² perdere lo stato attivo.\n\nAbilita/disabilita gli handler di ridimensionamento.\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css.\nIl preset \"simple\" imposta i seguenti parametri:\n- withIcon = false;\n- minIcon = false;\n- maxIcon = false;\n- withBottomBar = false;\n\nPosizione iniziale della window.\n\nStato iniziale della window.\n\nMostra/nasconde la barra inferiore della window, generalmente utilizzata per aggiungere messaggi di stato.\n\nMostra/nasconde la barra superiore della window, contenente i bottoni per chiudere/ridimensionare la window.\n\nSe true, alla chiusura della window viene lanciata la funzione di reload nella pagina del componente che ne ha richiesto l'apertura.\nVale true se la window Ã¨ una iFrame\n\nModalitÃ  reload del contesto parent.\nIl default Ã¨ \"list\".\n\nMostra/nasconde l'icona principale della window.\n\nClasse css dell'elemento che contiene il footer della window.\n\nClasse css del testo footer della window.\n\nClasse css del testo della barra del titolo.\n\nTooltip di sistema che compare sul bottone di chiusura della window.\n\nClasse css dell'elemento contenitore del iFrame o del markup principale della window.\n\nClasse css del contenitore degli elementi a sinistra del testo del titolo.\n\nClasse css del contenitore degli elementi a destra del testo del titolo.\n\nClasse css dell'icona principale della window.\n\nClasse css dell'elemento che contiene l'icona principale della window.\n\nClasse css aggiuntiva dell'icona principale della window, utilizzata lato applicativo.\n\nTooltip di sistema che compare sul bottone per ripristinare la dimensione originale della window.\n\nTooltip di sistema che compare sul bottone per ingrandire a tutto schermo la window.\n\nTooltip di sistema che compare sul bottone per minimizzare la window.\n\nClasse css dell'elemento che contiene una window modale.\n\nClasse css della barra del titolo.\n\nClasse css comune a tutte le icone della barra del titolo.\n\nBottone che ha chiamato il visualizzatore\n\nLista relativa al bottone che ha chiamato l'apertura di questa window\n\nRiga della lista relativa al bottone che ha chiamato l'apertura di questa window\n\nAttributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve il componente `printexcel`?
Risposta: Il componente `printexcel` Bottone specifico per la stampa di documenti excel
Domanda: Quali sono gli attributi del componente `printexcel`?
Risposta: Gli attributi del componente `printexcel` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `printexcel`?
Risposta: Gli eventi del componente `printexcel` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `url` del componente `printexcel`?
Risposta: Indirizzo di base della risorsa da visualizzare
Domanda: A cosa serve la proprietÃ  `params` del componente `printexcel`?
Risposta: Parametri chiave/valore da appendere all'url
Domanda: A cosa serve la proprietÃ  `mode` del componente `printexcel`?
Risposta: Visualizzazione/Download
Domanda: A cosa serve la proprietÃ  `service` del componente `printexcel`?
Risposta: Il nome del servizio di stampa
Domanda: A cosa serve la proprietÃ  `command` del componente `printexcel`?
Risposta: Comando ajax da eseguire
Domanda: A cosa serve la proprietÃ  `fileName` del componente `printexcel`?
Risposta: Nome che deve avere il file quando si scarica
Domanda: A cosa serve la proprietÃ  `withOpenFile` del componente `printexcel`?
Risposta: Mostra/nasconde il bottone \"apri file\".
Domanda: A cosa serve la proprietÃ  `withToolbar` del componente `printexcel`?
Risposta: Mostra/nasconde la toolbar del visualizzatore.
Domanda: A cosa serve la proprietÃ  `startsVisible` del componente `printexcel`?
Risposta: Se true il visualizzatore Ã¨ visibile anche in assenza di documento.
Domanda: A cosa serve la proprietÃ  `fullscreen` del componente `printexcel`?
Risposta: Se true il documento viene visualizzato a schermo intero, altrimenti a finestra.
Domanda: A cosa serve la proprietÃ  `startPosition` del componente `printexcel`?
Risposta: Posizione del bottone che ha chiamato l'apertura della window.
Domanda: A cosa serve la proprietÃ  `immediate` del componente `printexcel`?
Risposta: Esegue immediatamente la chiamata per visualizzare il documento, se url o comando sono impostati.\nIl dafault Ã¨ true.
Domanda: A cosa serve la proprietÃ  `messageHandler` del componente `printexcel`?
Risposta: Il messageHandler che deve essere utilizzato per aggiungere eventuali messaggi di errore
Domanda: A cosa serve la proprietÃ  `button` del componente `printexcel`?
Risposta: Parametri del bottone che apre il visualizzatore
Domanda: A cosa serve la proprietÃ  `` del componente `printexcel`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `afterload` del componente `printexcel`?
Risposta: Evento chiamato dopo che il documento Ã¨ stato caricato correttamente
Domanda: A cosa serve l'evento `onError` del componente `printexcel`?
Risposta: Evento chiamato in caso di errore o in caso in cui la chiamata riporti messaggi di errore
Domanda: A cosa serve l'evento `always` del componente `printexcel`?
Risposta: Evento chiamato al termine di una chiamata, a prescindere dallo stato di errore. E' l'ultimo metodo che viene chiamato
Domanda: A cosa serve il componente `printpdf`?
Risposta: Il componente `printpdf` Bottone specifico per la stampa di documenti pdf
Domanda: Quali sono gli attributi del componente `printpdf`?
Risposta: Gli attributi del componente `printpdf` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `printpdf`?
Risposta: Gli eventi del componente `printpdf` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `url` del componente `printpdf`?
Risposta: Indirizzo di base della risorsa da visualizzare
Domanda: A cosa serve la proprietÃ  `params` del componente `printpdf`?
Risposta: Parametri chiave/valore da appendere all'url
Domanda: A cosa serve la proprietÃ  `mode` del componente `printpdf`?
Risposta: Visualizzazione/Download
Domanda: A cosa serve la proprietÃ  `service` del componente `printpdf`?
Risposta: Il nome del servizio di stampa
Domanda: A cosa serve la proprietÃ  `command` del componente `printpdf`?
Risposta: Comando ajax da eseguire
Domanda: A cosa serve la proprietÃ  `fileName` del componente `printpdf`?
Risposta: Nome che deve avere il file quando si scarica
Domanda: A cosa serve la proprietÃ  `withOpenFile` del componente `printpdf`?
Risposta: Mostra/nasconde il bottone \"apri file\".
Domanda: A cosa serve la proprietÃ  `withToolbar` del componente `printpdf`?
Risposta: Mostra/nasconde la toolbar del visualizzatore.
Domanda: A cosa serve la proprietÃ  `startsVisible` del componente `printpdf`?
Risposta: Se true il visualizzatore Ã¨ visibile anche in assenza di documento.
Domanda: A cosa serve la proprietÃ  `fullscreen` del componente `printpdf`?
Risposta: Se true il documento viene visualizzato a schermo intero, altrimenti a finestra.
Domanda: A cosa serve la proprietÃ  `startPosition` del componente `printpdf`?
Risposta: Posizione del bottone che ha chiamato l'apertura della window.
Domanda: A cosa serve la proprietÃ  `immediate` del componente `printpdf`?
Risposta: Esegue immediatamente la chiamata per visualizzare il documento, se url o comando sono impostati.\nIl dafault Ã¨ true.
Domanda: A cosa serve la proprietÃ  `messageHandler` del componente `printpdf`?
Risposta: Il messageHandler che deve essere utilizzato per aggiungere eventuali messaggi di errore
Domanda: A cosa serve la proprietÃ  `button` del componente `printpdf`?
Risposta: Parametri del bottone che apre il visualizzatore
Domanda: A cosa serve la proprietÃ  `` del componente `printpdf`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `afterload` del componente `printpdf`?
Risposta: Evento chiamato dopo che il documento Ã¨ stato caricato correttamente
Domanda: A cosa serve l'evento `onError` del componente `printpdf`?
Risposta: Evento chiamato in caso di errore o in caso in cui la chiamata riporti messaggi di errore
Domanda: A cosa serve l'evento `always` del componente `printpdf`?
Risposta: Evento chiamato al termine di una chiamata, a prescindere dallo stato di errore. E' l'ultimo metodo che viene chiamato
Domanda: A cosa serve il componente `progressbar`?
Risposta: Il componente `progressbar` Componente barra di progresso, utilizzabile standalone o collegato ad una request.\nNel caso delle elaborazioni, Ã¨ stata implementata una classe CIS.eventStreamCall({})  (simile a CIS.webCall),\nche implementa l'api browser EventSource https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events\nUna volta che il client ha aperto un canale con il server, il server manda gli stati di aggiornamento dell'elaborazione in tempo reale
Domanda: Come si crea un componente `progressbar`?
Risposta: Ecco un esempio di base di creazione di un componente `progressbar`:<br /><pre><code><cis-ui:progress varname=\"progBar\" /></code></pre>
Domanda: Quali sono gli attributi del componente `progressbar`?
Risposta: Gli attributi del componente `progressbar` sono i seguenti: <br /><ul><li>`text`</li></ul>
Domanda: Quali sono gli eventi del componente `progressbar`?
Risposta: Gli eventi del componente `progressbar` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `progressbar`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `progressbar`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `progressbar`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `progressbar`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `progressbar`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `progressbar`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `progressbar`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `progressbar`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `progressbar`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `progressbar`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `progressbar`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `progressbar`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `progressbar`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `progressbar`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `progressbar`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `progressbar`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `progressbar`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `progressbar`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `progressbar`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `progressbar`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `progressbar`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `progressbar`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `progressbar`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `progressbar`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `radio`?
Risposta: Il componente `radio` Consente all'utente di selezionare una singola opzione da un gruppo di scelte se accoppiate ad altri componenti \"radio\".\nLe opzioni di scelta sono determinate dalla presenza di componenti <cis-ui:radio> all'interno dello stesso contenitore.\nIl valore inviato al server Ã¨ il valore attribuito all'elemento con stato \"checked\"
Domanda: Come si crea un componente `radio`?
Risposta: Ecco un esempio di base di creazione di un componente `radio`:<br /><pre><code><cis-ui:radio name=\"radio\" caption=\"radio1\" />\n<cis-ui:radio name=\"radio\" caption=\"radio2\" checked=\"true\" /></code></pre>
Domanda: Quali sono gli attributi del componente `radio`?
Risposta: Gli attributi del componente `radio` sono i seguenti: <br /><ul><li>`container`</li><li>`checked`</li><li>`falselabel`</li><li>`group`</li><li>`truelabel`</li></ul>
Domanda: Quali sono gli eventi del componente `radio`?
Risposta: Gli eventi del componente `radio` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `radio`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `radio`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `radio`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `radio`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `radio`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `radio`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `radio`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `radio`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `radio`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `radio`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `radio`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `radio`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `radio`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `radio`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `radio`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `radio`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `radio`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `radio`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `radio`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `radio`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `radio`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `radio`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `radio`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `radio`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `request`?
Risposta: Il componente `request` Rappresenta una chiamata ajax.\nLa chiamata Ã¨ attivata facendo click su un bottone, i cui parametri sono definiti all'interno del componente. 
Domanda: Come si crea un componente `request`?
Risposta: Ecco un esempio di base di creazione di un componente `request`:<br /><pre><code><cis-ui:request command=\"test\" url=\"{/DOCUMENTO/PATHNAME}\">\n    <button text=\"Comando AJAX\" />\n</cis-ui:request></code></pre>
Domanda: Quali sono gli attributi del componente `request`?
Risposta: Gli attributi del componente `request` sono i seguenti: <br /><ul><li>`button`</li><li>`command`</li><li>`params`</li><li>`url`</li><li>`method`</li><li>`progressBar`</li><li>`waitingElements`</li><li>`replacemarkup`</li><li>`replaceNode`</li><li>`appendMarkup`</li><li>`messageHandler`</li><li>`preRequestMessage`</li><li>`preRequestCaption`</li><li>`reloadMode`</li><li>`appendBCSO`</li></ul>
Domanda: Quali sono gli eventi del componente `request`?
Risposta: Gli eventi del componente `request` sono i seguenti: <br /><ul><li>`beforeload`</li><li>`afterload`</li><li>`onerror`</li><li>`afterparsehtml`</li><li>`afterparseblob`</li><li>`always`</li><li>`showwaitpanel`</li><li>`hidewaitpanel`</li><li>`beforedorequest`</li><li>`gestiscimessaggi`</li><li>`isinerror`</li><li>`progress`</li><li>`onvalidate`</li></ul>
Domanda: A cosa serve la proprietÃ  `id` del componente `request`?
Risposta: Attributo id dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `name` del componente `request`?
Risposta: Attributo name dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `varname` del componente `request`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve la proprietÃ  `tooltip` del componente `request`?
Risposta: Testo del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione
Domanda: A cosa serve la proprietÃ  `tooltipposition` del componente `request`?
Risposta: Posizione del tooltip.
Domanda: A cosa serve la proprietÃ  `style` del componente `request`?
Risposta: Stile CSS inline dell'elemento HTML principale
Domanda: A cosa serve la proprietÃ  `mainclass` del componente `request`?
Risposta: Classe CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente
Domanda: A cosa serve la proprietÃ  `role` del componente `request`?
Risposta: Attributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript
Domanda: A cosa serve la proprietÃ  `skin` del componente `request`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css
Domanda: A cosa serve la proprietÃ  `hidden` del componente `request`?
Risposta: Se true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento
Domanda: A cosa serve la proprietÃ  `unselectable` del componente `request`?
Risposta: Se true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu
Domanda: A cosa serve la proprietÃ  `disabled` del componente `request`?
Risposta: Se true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento
Domanda: A cosa serve la proprietÃ  `contextMenuEnabled` del componente `request`?
Risposta: Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.
Domanda: A cosa serve la proprietÃ  `flexible` del componente `request`?
Risposta: Se true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento
Domanda: A cosa serve la proprietÃ  `userattrs` del componente `request`?
Risposta: Elenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"
Domanda: A cosa serve la proprietÃ  `height` del componente `request`?
Risposta: Imposta il valore \"height\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `width` del componente `request`?
Risposta: Imposta il valore \"width\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `left` del componente `request`?
Risposta: Imposta il valore \"left\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `top` del componente `request`?
Risposta: Imposta il valore \"top\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `permessi` del componente `request`?
Risposta: Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no
Domanda: A cosa serve la proprietÃ  `tmode` del componente `request`?
Risposta: Indica se il componente Ã¨ in modalitÃ  T (liste inline)
Domanda: A cosa serve la proprietÃ  `colspan` del componente `request`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeclick` del componente `request`?
Risposta: Evento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.
Domanda: A cosa serve l'evento `click` del componente `request`?
Risposta: Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)
Domanda: A cosa serve l'evento `ready` del componente `request`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato
Domanda: A cosa serve l'evento `connected` del componente `request`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato
Domanda: A cosa serve l'evento `responsiveChanged` del componente `request`?
Risposta: Evento chiamato quando il componente cambia stato responsive
Domanda: A cosa serve il componente `responsivemenu`?
Risposta: Il componente `responsivemenu` Rappresenta un menu \"responsive\"\nUn menu responsive Ã¨ la combinazione di un menu \"principale\" e un menu \"hamburger\".\nSe la larghezza della finestra del browser Ã¨ inferiore ad una certa soglia, viene rappresentato come \"hamburger\", altrimenti come \"principale\"
Domanda: Come si crea un componente `responsivemenu`?
Risposta: Ecco un esempio di base di creazione di un componente `responsivemenu`:<br /><pre><code><cis-ui:responsivemenu>\n      <items>\n          <item text=\"Menu 1\" funzione=\"menu1\" />\n          <item text=\"Menu 2\" funzione=\"menu2\" />\n      </items>\n  </cis-ui:responsivemenu></code></pre>
Domanda: Quali sono gli attributi del componente `responsivemenu`?
Risposta: Gli attributi del componente `responsivemenu` sono i seguenti: <br /><ul><li>`backicon`</li><li>`mainclass`</li></ul>
Domanda: Quali sono gli eventi del componente `responsivemenu`?
Risposta: Gli eventi del componente `responsivemenu` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `closeonmouseleave` del componente `responsivemenu`?
Risposta: Se true, quando il mouse lascia una voce di menu ed Ã¨ passato tanto tempo quanto indicato da \"closeonmouseleavedelay\", il menu viene chiuso automaticamente.
Domanda: A cosa serve la proprietÃ  `closeonmouseleavedelay` del componente `responsivemenu`?
Risposta: Associato a \"closeonmouseleave\". Indica il tempo dopo il quale il menu, che ha perso lo stato attivo, deve essere chiuso automaticamente.
Domanda: A cosa serve la proprietÃ  `items` del componente `responsivemenu`?
Risposta: Sequenza di voci di menu
Domanda: A cosa serve la proprietÃ  `showicon` del componente `responsivemenu`?
Risposta: Mostra/nasconde le icone delle voci di menu di primo livello.
Domanda: A cosa serve la proprietÃ  `showmenuhandler` del componente `responsivemenu`?
Risposta: Mostra/nasconde le icone delle frecce delle voci di menu di primo livello.
Domanda: A cosa serve la proprietÃ  `showmenuitemhandler` del componente `responsivemenu`?
Risposta: Mostra/nasconde le icone delle frecce delle voci di menu di n-esimo livello.
Domanda: A cosa serve la proprietÃ  `showsubicon` del componente `responsivemenu`?
Risposta: Mostra/nasconde le icone delle voci di menu di n-esimo livello.
Domanda: A cosa serve la proprietÃ  `framecontainer` del componente `responsivemenu`?
Risposta: Nome della variabile del componente cis-ui-tabcontrol associato al menu, in cui vengono aperte le pagine dell'applicativo
Domanda: A cosa serve la proprietÃ  `` del componente `responsivemenu`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `itemclick` del componente `responsivemenu`?
Risposta: Evento che viene lanciato quando una sottovoce di primo livello viene cliccata
Domanda: A cosa serve il componente `searchpanel`?
Risposta: Il componente `searchpanel` Rappresenta una window composta da funzioni di ricerca personalizzabili.\nE' possibile gestire modalitÃ  di ricerca multiple, ognuna con un set di parametri personalizzato.\nLa funzione di ricerca innesca un comando ajax, determinato dalla modalitÃ  di ricerca attiva, i cui risultati vengono visualizzati in un elenco di selezione
Domanda: Come si crea un componente `searchpanel`?
Risposta: Ecco un esempio di base di creazione di un componente `searchpanel`:<br /><pre><code><cis-ui:searchpanel caption=\"Titolo finestra\">\n    <modes>\n        <mode command=\"testSP\" text=\"mode 1\"></mode>\n            <filtri>\n                <filtro name=\"nome\" value=\"Nome\" />\n            </filtri>\n        </mode>\n        <mode command=\"testSPSL\" text=\"mode 2\" resultsetname=\"LstSoggetti\"></mode>\n            <filtri>\n                <filtro name=\"nome\" value=\"Nome\" />\n            </filtri>\n            <datalist multiselect=\"true\"></datalist>\n                <columns>\n                    <column name=\"TpSoggetto\" caption=\"tipo sogg\"/>\n                </columns>\n            </datalist>\n        </mode>\n        <mode command=\"testSPRS\" text=\"mode 3\" resultsetname=\"OE\"></mode>\n            <filtri>\n                <filtro name=\"nome\" value=\"Nome\" />\n                <filtro name=\"codoe\" value=\"CodOE\" />\n            </filtri>\n        </mode>\n    </modes>\n    <button text=\"Testo bottone\" />\n    <afterselect>\n        function(sender,items) {\n            if(sender.currMode.multiSelect) {\n                console.log(\"Righe selezionate: \",sender.selectedItems);\n                console.log(\"Oppure: \",items);\n                console.log(\"Oppure: \",sender.value);\n            } else {\n                console.log(\"Riga selezionata: \",sender.selectedItem);\n                console.log(\"Oppure: \",items);\n                console.log(\"Oppure: \",sender.value);\n            }\n        }\n    </afterselect>\n</cis-ui:searchpanel></code></pre>
Domanda: Quali sono gli attributi del componente `searchpanel`?
Risposta: Gli attributi del componente `searchpanel` sono i seguenti: <br /><ul><li>`autoload`</li><li>`resultsetname`</li><li>`clearValuesOnOpen`</li><li>`btnseleziona`</li><li>`modes`</li></ul>
Domanda: Quali sono gli eventi del componente `searchpanel`?
Risposta: Gli eventi del componente `searchpanel` sono i seguenti: <br /><ul><li>`afterSelect`</li></ul>
Domanda: A cosa serve la proprietÃ  `autoOverflow` del componente `searchpanel`?
Risposta: Se true, viene impostato uno stile overflow=auto all'elemento e ai sottoelementi.
Domanda: A cosa serve la proprietÃ  `bottomtext` del componente `searchpanel`?
Risposta: Imposta il testo posto nella barra inferiore della window.\nSe la window rappresnta un PDC, di default viene impostato con i valori di \"ultagg\" e \"utente\"
Domanda: A cosa serve la proprietÃ  `button` del componente `searchpanel`?
Risposta: Parametri del bottone di apertura della window
Domanda: A cosa serve la proprietÃ  `caption` del componente `searchpanel`?
Risposta: Titolo della window.\nIl default Ã¨ attribuito dal componente cis:pagina, altrimenti Ã¨ \"Finestra senza titolo\"
Domanda: A cosa serve la proprietÃ  `closeicon` del componente `searchpanel`?
Risposta: Mostra/nasconde l'icona per chiudere la window.
Domanda: A cosa serve la proprietÃ  `draggable` del componente `searchpanel`?
Risposta: Abilita/disabilita la funzionalitÃ  di trascinamento.
Domanda: A cosa serve la proprietÃ  `functionareamarkup` del componente `searchpanel`?
Risposta: Contenuto HTML dell'area adibita alle funzioni speciali della window.\nIl contenuto viene visualizzato tra il titolo e le icone di controllo di stato
Domanda: A cosa serve la proprietÃ  `minicon` del componente `searchpanel`?
Risposta: Mostra/nasconde l'icona per minimizzare la window.
Domanda: A cosa serve la proprietÃ  `maxicon` del componente `searchpanel`?
Risposta: Mostra/nasconde l'icona per ingrandire a tutto schermo la window.
Domanda: A cosa serve la proprietÃ  `modal` del componente `searchpanel`?
Risposta: Se true, la window Ã¨ modale.\nUna window modale non puÃ² perdere lo stato attivo.
Domanda: A cosa serve la proprietÃ  `resizable` del componente `searchpanel`?
Risposta: Abilita/disabilita gli handler di ridimensionamento.
Domanda: A cosa serve la proprietÃ  `skin` del componente `searchpanel`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css.\nIl preset \"simple\" imposta i seguenti parametri:\n- withIcon = false;\n- minIcon = false;\n- maxIcon = false;\n- withBottomBar = false;
Domanda: A cosa serve la proprietÃ  `startposition` del componente `searchpanel`?
Risposta: Posizione iniziale della window.
Domanda: A cosa serve la proprietÃ  `windowstate` del componente `searchpanel`?
Risposta: Stato iniziale della window.
Domanda: A cosa serve la proprietÃ  `withbottombar` del componente `searchpanel`?
Risposta: Mostra/nasconde la barra inferiore della window, generalmente utilizzata per aggiungere messaggi di stato.
Domanda: A cosa serve la proprietÃ  `withtopbar` del componente `searchpanel`?
Risposta: Mostra/nasconde la barra superiore della window, contenente i bottoni per chiudere/ridimensionare la window.
Domanda: A cosa serve la proprietÃ  `reloadParentAfterClose` del componente `searchpanel`?
Risposta: Se true, alla chiusura della window viene lanciata la funzione di reload nella pagina del componente che ne ha richiesto l'apertura.\nVale true se la window Ã¨ una iFrame
Domanda: A cosa serve la proprietÃ  `reloadParentMode` del componente `searchpanel`?
Risposta: ModalitÃ  reload del contesto parent.\nIl default Ã¨ \"list\".
Domanda: A cosa serve la proprietÃ  `withicon` del componente `searchpanel`?
Risposta: Mostra/nasconde l'icona principale della window.
Domanda: A cosa serve la proprietÃ  `` del componente `searchpanel`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `activated` del componente `searchpanel`?
Risposta: Evento lanciato dopo che una window ha assunto lo stato attivo, quando cioÃ¨ passa in primo piano
Domanda: A cosa serve l'evento `afterclose` del componente `searchpanel`?
Risposta: Evento lanciato dopo che una window Ã¨ stata chiusa per qualsiasi motivo (parametro closeReason)
Domanda: A cosa serve l'evento `afteropen` del componente `searchpanel`?
Risposta: Evento lanciato dopo che una window Ã¨ stata aperta e visualizzata
Domanda: A cosa serve l'evento `beforeclose` del componente `searchpanel`?
Risposta: Evento lanciato prima che una window venga chiusa per qualsiasi motivo.\nSi puÃ² interrompere la chiusura ritornando un valore false
Domanda: A cosa serve l'evento `beforeopen` del componente `searchpanel`?
Risposta: Evento lanciato prima che una window venga aperta.\nSi puÃ² interrompere l'apertura ritornando un valore false
Domanda: A cosa serve l'evento `deactivated` del componente `searchpanel`?
Risposta: Evento lanciato dopo che una window ha perso lo stato attivo, quando cioÃ¨ passa in secondo piano
Domanda: A cosa serve il componente `slider`?
Risposta: Il componente `slider` Rappresenta una barra in cui Ã¨ possibile selezionare un valore tra due estremi. \nUno slider Ã¨ campo intero o un listattr in caso di valori range.
Domanda: Come si crea un componente `slider`?
Risposta: Ecco un esempio di base di creazione di un componente `slider`:<br /><pre><code><cis-ui:slider caption=\"Titolo\">\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/valore\"/></nodo>\n</cis-ui:slider></code></pre>
Domanda: Quali sono gli attributi del componente `slider`?
Risposta: Gli attributi del componente `slider` sono i seguenti: <br /><ul><li>`type`</li><li>`barStyle`</li><li>`guideMode`</li><li>`sliderShape`</li><li>`withcommands`</li><li>`minvalue`</li><li>`maxvalue`</li><li>`minscale`</li><li>`maxscale`</li><li>`step`</li><li>`stepguide`</li><li>`steplabel`</li><li>`immediateValueChange`</li><li>`withguide`</li><li>`leftArrow`</li><li>`rightArrow`</li></ul>
Domanda: Quali sono gli eventi del componente `slider`?
Risposta: Gli eventi del componente `slider` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `slider`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `slider`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `slider`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `slider`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `slider`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `slider`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `slider`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `slider`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `slider`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `slider`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `slider`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `slider`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `slider`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `slider`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `slider`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `slider`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `slider`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `slider`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `slider`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `slider`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `slider`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `slider`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `slider`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `slider`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `submit`?
Risposta: Il componente `submit` Bottone specifico per operazioni di submit.\nVengono serializzati tutti i componenti compresi nell'elemento <form> che contiene il bottone.\nGli altri parametri della request vengono presi direttamente dagli attributi dell'elemento <form>.\nE' possibile gestire operazioni asincrone.
Domanda: Come si crea un componente `submit`?
Risposta: Ecco un esempio di base di creazione di un componente `submit`:<br /><pre><code><form>\n     <cis-ui:submit text=\"Submit\" icon=\"fas fa-save\" />\n </form></code></pre>
Domanda: Quali sono gli attributi del componente `submit`?
Risposta: Gli attributi del componente `submit` sono i seguenti: <br /><ul><li>`async`</li><li>`validate`</li><li>`request`</li><li>`value`</li></ul>
Domanda: Quali sono gli eventi del componente `submit`?
Risposta: Gli eventi del componente `submit` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `icon` del componente `submit`?
Risposta: Classe css dell'icona del bottone
Domanda: A cosa serve la proprietÃ  `iconposition` del componente `submit`?
Risposta: Posizione dell'icona del bottone rispetto al testo.
Domanda: A cosa serve la proprietÃ  `text` del componente `submit`?
Risposta: Testo del bottone
Domanda: A cosa serve la proprietÃ  `wrap` del componente `submit`?
Risposta: Se true, segnala che il testo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento del testo.
Domanda: A cosa serve la proprietÃ  `` del componente `submit`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve il componente `switch`?
Risposta: Il componente `switch` Rappresenta una scelta tra due opzioni. \nUno switch Ã¨ campo booleano a due stati, true e false.\nE' possibile identificare quali valori rappresentano gli stati \"true\" e \"false\".\nE' possibile aggiungere un terzo stato al campo, che prende il valore di \"indeterminate\" (null), tramite l'elemento/attributo \"threestate\".\nInformazioni inviate al server:\nSe il valore Ã¨ true, viene inviato name=truevalue.\nSe il valore Ã¨ false, e threestate Ã¨ true, inviato name=falsevalue.\nSe il valore Ã¨ false, e threestate Ã¨ false, inviato name=.\nSe il valore Ã¨ null, il valore non viene inviato.
Domanda: Come si crea un componente `switch`?
Risposta: Ecco un esempio di base di creazione di un componente `switch`:<br /><pre><code><cis-ui:switch caption=\"Titolo\">\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/SESSIONE/Amministratore\"/></nodo>\n</cis-ui:switch></code></pre>
Domanda: Quali sono gli attributi del componente `switch`?
Risposta: Gli attributi del componente `switch` sono i seguenti: <br /><ul><li>`checked`</li><li>`falselabel`</li><li>`falsevalue`</li><li>`indeterminatelabel`</li><li>`labelsmode`</li><li>`threestate`</li><li>`truelabel`</li><li>`truevalue`</li></ul>
Domanda: Quali sono gli eventi del componente `switch`?
Risposta: Gli eventi del componente `switch` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `switch`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `switch`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `switch`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `switch`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `switch`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `switch`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `switch`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `switch`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `switch`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `switch`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `switch`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `switch`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `switch`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `switch`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `switch`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `switch`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `switch`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `switch`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `switch`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `switch`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `switch`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `switch`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `switch`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `switch`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `switchbutton`?
Risposta: Il componente `switchbutton` Uno switchbutton Ã¨ campo booleano a due/tre stati.\nI valori sono fissi: -1,0,1.
Domanda: Come si crea un componente `switchbutton`?
Risposta: Ecco un esempio di base di creazione di un componente `switchbutton`:<br /><pre><code><cis-ui:switchbutton caption=\"titolo\">\ny-of select=\"/DOCUMENTO/valore\"/></nodo>\nbutton></code></pre>
Domanda: Quali sono gli attributi del componente `switchbutton`?
Risposta: Gli attributi del componente `switchbutton` sono i seguenti: <br /><ul><li>`alignment`</li><li>`buttonstyle`</li><li>`buttonOrder`</li><li>`threestate`</li><li>`falseLabel`</li><li>`trueLabel`</li><li>`indeterminateLabel`</li><li>`buttonHeight`</li><li>`buttonWidth`</li></ul>
Domanda: Quali sono gli eventi del componente `switchbutton`?
Risposta: Gli eventi del componente `switchbutton` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `switchbutton`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `switchbutton`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `switchbutton`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `switchbutton`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `switchbutton`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `switchbutton`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `switchbutton`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `switchbutton`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `switchbutton`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `switchbutton`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `switchbutton`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `switchbutton`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `switchbutton`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `switchbutton`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `switchbutton`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `switchbutton`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `switchbutton`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `switchbutton`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `switchbutton`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `switchbutton`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `switchbutton`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `switchbutton`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `switchbutton`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `switchbutton`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `tabcontrol`?
Risposta: Il componente `tabcontrol` Rappresenta un componente a schede.\nUn TabControl Ã¨ utile per ridurre al minimo l'utilizzo dello spazio dello schermo consentendo a una maschera di esporre una grande quantitÃ  di dati in maniera raggruppata.\nUn oggetto TabControl Ã¨ costituito da piÃ¹ \"tabs\". \nUna sola tab in un TabControl Ã¨ visibile alla volta.
Domanda: Come si crea un componente `tabcontrol`?
Risposta: Ecco un esempio di base di creazione di un componente `tabcontrol`:<br /><pre><code><cis-ui:tabs>\n    <tab caption=\"Tab semplice\">\n        <markup>\n            test\n        </markup>\n    </tab>\n    <framedtab caption=\"Framed tab\" href=\"/newAppl/demo/temi/boston/liste/HLstT\"  />\n    <framedtab caption=\"Framed tab, load on activate\" href=\"/newAppl/demo/temi/boston/liste/HLstT\" loadonactivate=\"true\" />\n    <tab caption=\"Closeable\" closeable=\"true\" />\n    <tab caption=\"Non permesso\">\n        <permessi forzaabilitato=\"false\" />\n    </tab>\n</cis-ui:tabs></code></pre>
Domanda: Quali sono gli attributi del componente `tabcontrol`?
Risposta: Gli attributi del componente `tabcontrol` sono i seguenti: <br /><ul><li>`alignment`</li><li>`closeable`</li><li>`forzaabilitato`</li><li>`framedtab`</li><li>`tab`</li><li>`tabsize`</li><li>`autoOverflow`</li><li>`compact`</li></ul>
Domanda: Quali sono gli eventi del componente `tabcontrol`?
Risposta: Gli eventi del componente `tabcontrol` sono i seguenti: <br /><ul><li>`currenttabchanged`</li><li>`tabAppended`</li><li>`beforeRemoveTab`</li><li>`afterRemoveTab`</li></ul>
Domanda: A cosa serve la proprietÃ  `id` del componente `tabcontrol`?
Risposta: Attributo id dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `name` del componente `tabcontrol`?
Risposta: Attributo name dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `varname` del componente `tabcontrol`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve la proprietÃ  `tooltip` del componente `tabcontrol`?
Risposta: Testo del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione
Domanda: A cosa serve la proprietÃ  `tooltipposition` del componente `tabcontrol`?
Risposta: Posizione del tooltip.
Domanda: A cosa serve la proprietÃ  `style` del componente `tabcontrol`?
Risposta: Stile CSS inline dell'elemento HTML principale
Domanda: A cosa serve la proprietÃ  `mainclass` del componente `tabcontrol`?
Risposta: Classe CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente
Domanda: A cosa serve la proprietÃ  `role` del componente `tabcontrol`?
Risposta: Attributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript
Domanda: A cosa serve la proprietÃ  `skin` del componente `tabcontrol`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css
Domanda: A cosa serve la proprietÃ  `hidden` del componente `tabcontrol`?
Risposta: Se true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento
Domanda: A cosa serve la proprietÃ  `unselectable` del componente `tabcontrol`?
Risposta: Se true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu
Domanda: A cosa serve la proprietÃ  `disabled` del componente `tabcontrol`?
Risposta: Se true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento
Domanda: A cosa serve la proprietÃ  `contextMenuEnabled` del componente `tabcontrol`?
Risposta: Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.
Domanda: A cosa serve la proprietÃ  `flexible` del componente `tabcontrol`?
Risposta: Se true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento
Domanda: A cosa serve la proprietÃ  `userattrs` del componente `tabcontrol`?
Risposta: Elenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"
Domanda: A cosa serve la proprietÃ  `height` del componente `tabcontrol`?
Risposta: Imposta il valore \"height\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `width` del componente `tabcontrol`?
Risposta: Imposta il valore \"width\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `left` del componente `tabcontrol`?
Risposta: Imposta il valore \"left\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `top` del componente `tabcontrol`?
Risposta: Imposta il valore \"top\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `permessi` del componente `tabcontrol`?
Risposta: Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no
Domanda: A cosa serve la proprietÃ  `tmode` del componente `tabcontrol`?
Risposta: Indica se il componente Ã¨ in modalitÃ  T (liste inline)
Domanda: A cosa serve la proprietÃ  `colspan` del componente `tabcontrol`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeclick` del componente `tabcontrol`?
Risposta: Evento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.
Domanda: A cosa serve l'evento `click` del componente `tabcontrol`?
Risposta: Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)
Domanda: A cosa serve l'evento `ready` del componente `tabcontrol`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato
Domanda: A cosa serve l'evento `connected` del componente `tabcontrol`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato
Domanda: A cosa serve l'evento `responsiveChanged` del componente `tabcontrol`?
Risposta: Evento chiamato quando il componente cambia stato responsive
Domanda: A cosa serve il componente `text`?
Risposta: Il componente `text` Rappresenta un campo di testo.\nUn textbox Ã¨ un semplice campo di input a testo libero a singola linea o multilinea.\nViene inviato al server l'esatto contenuto testuale del campo di input 
Domanda: Come si crea un componente `text`?
Risposta: Ecco un esempio di base di creazione di un componente `text`:<br /><pre><code><cis-ui:text caption=\"Titolo\">\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/DescImpiego\"/></nodo>\n</cis-ui:text></code></pre>
Domanda: Quali sono gli attributi del componente `text`?
Risposta: Gli attributi del componente `text` sono i seguenti: <br /><ul><li>`autotext`</li><li>`charactercount`</li><li>`type`</li><li>`maxlength`</li><li>`minlength`</li><li>`multiline`</li><li>`noresize`</li><li>`placeholder`</li><li>`rows`</li><li>`scrolltobottom`</li><li>`handletabs`</li><li>`uppercase`</li><li>`regex`</li><li>`regexNotValidText`</li></ul>
Domanda: Quali sono gli eventi del componente `text`?
Risposta: Gli eventi del componente `text` sono i seguenti: <br /><ul><li>`focusout`</li><li>`keydown`</li><li>`keypress`</li></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `text`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `text`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `text`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `text`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `text`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `text`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `text`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `text`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `text`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `text`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `text`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `text`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `text`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `text`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `text`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `text`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `text`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `text`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `text`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `text`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `text`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `text`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `text`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `text`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `time`?
Risposta: Il componente `time` Rappresenta un campo data specifico per il tempo.\nConsente all'utente di selezionare un orario digitando il valore in un campo di testo o utilizzando un componente a discesa Calendar.\nIl valore passato al server Ã¨ l'esatto testo che compare nel campo di input.\nE' possibile specificare il formato di data/ora atteso combinando i parametri \"from\" e \"to\".
Domanda: Come si crea un componente `time`?
Risposta: Ecco un esempio di base di creazione di un componente `time`:<br /><pre><code><cis-ui:time caption=\"Titolo\">\n    <nodo><xsl:copy-of select=\"/DOCUMENTO/DtImpiego\"/></nodo>\n</cis-ui:time></code></pre>
Domanda: Quali sono gli attributi del componente `time`?
Risposta: Gli attributi del componente `time` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `time`?
Risposta: Gli eventi del componente `time` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `autotext` del componente `time`?
Risposta: Se false imposta i seguenti attributi sul campo di input: \nautocomplete=\"off\"\nrole=\"presentation\"\nautocorrect=\"off\"\nautocapitalize=\"off\nspellcheck=\"false\".
Domanda: A cosa serve la proprietÃ  `calendar` del componente `time`?
Risposta: Parametri del calendario
Domanda: A cosa serve la proprietÃ  `commandsvisible` del componente `time`?
Risposta: Mostra/nasconde i bottoni per aumentare/diminuire il valore di una parte della data.
Domanda: A cosa serve la proprietÃ  `from` del componente `time`?
Risposta: Shortcut di calendar.from.\nDatepart che indica l'inizio del formato.
Domanda: A cosa serve la proprietÃ  `holidays` del componente `time`?
Risposta: Shortcut di calendar.holidays.\nElenco di date da essere considerate come festive.\nL'elenco Ã¨ formato da elementi di tipo <holiday>, formati a loro volta di un elemento <year>, <month> e <day>.\nIl tag <year> puÃ² essere omesso
Domanda: A cosa serve la proprietÃ  `clearable` del componente `time`?
Risposta: Mostra/nasconde il bottone per pulire il contenuto del campo.
Domanda: A cosa serve la proprietÃ  `maxvalue` del componente `time`?
Risposta: Shortcut di calendar.maxvalue.\nValore massimo accettato dal campo, oltre il quale viene segnalato un errore
Domanda: A cosa serve la proprietÃ  `minvalue` del componente `time`?
Risposta: Shortcut di calendar.minvalue.\nValore minimo accettato dal campo, prima del quale viene segnalato un errore
Domanda: A cosa serve la proprietÃ  `to` del componente `time`?
Risposta: Shortcut di calendar.to.\nDatepart che indica la fine del formato.
Domanda: A cosa serve la proprietÃ  `` del componente `time`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente\n\nPosizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields\n\nImposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"\n\nSe true, il valore \"0\" viene omesso.\n\nImposta il lovale specifico di questo campo\n\nSe true, il campo viene renderizzato solo come label.\n\nIl nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"\n\nFunzione di validazione personalizzata utente\n\nSe true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.\n\nSe true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.\n\nTesto del tooltip quando il componente non ha valore e required Ã¨ 'true'\n\nImposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout\n\nSe true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.\n\nImposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.\n\nIl valore del campo\n\nEvento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato\n\nSe true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.\n\nClasse css dell'elemento contenitore dell'elemento corpo del componente e del testo del validatore.\n\nClasse css dell'elemento che contiene il corpo del componente.\n\nClasse css dell'elemento contenitore dell'elemento titolo del componente.\n\nStile inline dell'elemento contenitore dell'elemento titolo del componente (come captionHelperClass)\n\nClasse css dell'elemento che contiene il titolo del componente.\n\nClasse css dell'elemento che contiene l'elemento di input specifico del componente.\n\nClasse css dell'elemento che contiene il valore del componente in modalitÃ  \"labelonly\".\n\nClasse css dell'elemento contenitore del testo del validatore.\n\nClasse CSS dell'icona del validatore.\nSi puÃ² combinare questa classe con l'attributo state=\"error/valid\" per ottenere le 2 icone di stato\n\nParametri del tooltip di validazione\n\nSe true, lo stato grafico di \"valido\" Ã¨ visibile\n\nSe true, il testo del validatore viene nascosto a prescindere dallo stato\n\nOrdinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.\n\nParametri dell'icona del tooltip\n\nAttributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `focusout` del componente `time`?
Risposta: Evento chiamato quando l'elemento perde il focus
Domanda: A cosa serve l'evento `keydown` del componente `time`?
Risposta: Evento lanciato quando viene premuto un tasto sull'elemento di input
Domanda: A cosa serve l'evento `keypress` del componente `time`?
Risposta: Evento lanciato quando viene premuto un tasto sull'elemento di input
Domanda: A cosa serve il componente `toast`?
Risposta: Il componente `toast` Visualizza un messaggio come Toast
Domanda: Come si crea un componente `toast`?
Risposta: Ecco un esempio di base di creazione di un componente `toast`:<br /><pre><code><cis-ui:toast title=\"Titolo\" text=\"Messaggio\" duration=\"5000\" position=\"FillTop\" /></code></pre>
Domanda: Quali sono gli attributi del componente `toast`?
Risposta: Gli attributi del componente `toast` sono i seguenti: <br /><ul><li>`position`</li><li>`upTime`</li><li>`closeable`</li><li>`withHeader`</li></ul>
Domanda: Quali sono gli eventi del componente `toast`?
Risposta: Gli eventi del componente `toast` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `varname` del componente `toast`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve la proprietÃ  `text` del componente `toast`?
Risposta: Testo del messaggio
Domanda: A cosa serve la proprietÃ  `title` del componente `toast`?
Risposta: Titolo del messaggio
Domanda: A cosa serve la proprietÃ  `type` del componente `toast`?
Risposta: Tipologia di messaggio.\nIl default Ã¨ \"INFO\".
Domanda: A cosa serve la proprietÃ  `dynamic` del componente `toast`?
Risposta: Se true, indica che il messaggio deve essere cancellato prima di una qualsiasi chiamata ajax
Domanda: A cosa serve la proprietÃ  `code` del componente `toast`?
Risposta: Codice lato server del messaggio
Domanda: A cosa serve la proprietÃ  `closeWithClick` del componente `toast`?
Risposta: Solo se closeable = true\nSe true, il messaggio si chiude cliccando su qualsiasi punto dell'area del messaggio.\nSe false, il messaggio si chiude solo tramite il bottone di chiusura.
Domanda: A cosa serve la proprietÃ  `messageHandler` del componente `toast`?
Risposta: Il componente messageHandler in cui visualizzare il messaggio.\nSe non specificato viene preso il messageHandler di default della pagina. 
Domanda: A cosa serve la proprietÃ  `context` del componente `toast`?
Risposta: Contesto javascript del messaggio.
Domanda: A cosa serve la proprietÃ  `titleOnTop` del componente `toast`?
Risposta: Imposta il testo del titolo nello spazio dell'header del messaggio
Domanda: A cosa serve la proprietÃ  `withIcon` del componente `toast`?
Risposta: Mostra/Nasconde l'icona del messaggio
Domanda: A cosa serve la proprietÃ  `withTimestamp` del componente `toast`?
Risposta: Mostra/Nasconde l'orario di ricezione del messaggio
Domanda: A cosa serve il componente `tooltip`?
Risposta: Il componente `tooltip` Posiziona un tooltip su un elemento
Domanda: Come si crea un componente `tooltip`?
Risposta: Ecco un esempio di base di creazione di un componente `tooltip`:<br /><pre><code><div>\n    pippo\n    <cis-ui:tooltip>\n        <text markup=\"true\">ciao <b>pippo</b></text>\n    </cis-ui:editor>\n</div></code></pre>
Domanda: Quali sono gli attributi del componente `tooltip`?
Risposta: Gli attributi del componente `tooltip` sono i seguenti: <br /><ul><li>`varname`</li><li>`style`</li><li>`mainclass`</li><li>`role`</li><li>`skin`</li><li>`hidden`</li><li>`disabled`</li><li>`userattrs`</li><li>`text`</li><li>`position`</li><li>`boundElement`</li><li>`autoTrigger`</li></ul>
Domanda: Quali sono gli eventi del componente `tooltip`?
Risposta: Gli eventi del componente `tooltip` sono i seguenti: <br /><ul><li>`ready`</li><li>`connected`</li><li>`beforeShow`</li></ul>
Domanda: A cosa serve la proprietÃ  `id` del componente `tooltip`?
Risposta: Attributo id dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `name` del componente `tooltip`?
Risposta: Attributo name dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `tooltip` del componente `tooltip`?
Risposta: Testo del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione
Domanda: A cosa serve la proprietÃ  `tooltipposition` del componente `tooltip`?
Risposta: Posizione del tooltip.
Domanda: A cosa serve la proprietÃ  `unselectable` del componente `tooltip`?
Risposta: Se true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu
Domanda: A cosa serve la proprietÃ  `contextMenuEnabled` del componente `tooltip`?
Risposta: Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.
Domanda: A cosa serve la proprietÃ  `flexible` del componente `tooltip`?
Risposta: Se true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento
Domanda: A cosa serve la proprietÃ  `height` del componente `tooltip`?
Risposta: Imposta il valore \"height\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `width` del componente `tooltip`?
Risposta: Imposta il valore \"width\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `left` del componente `tooltip`?
Risposta: Imposta il valore \"left\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `top` del componente `tooltip`?
Risposta: Imposta il valore \"top\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `permessi` del componente `tooltip`?
Risposta: Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no
Domanda: A cosa serve la proprietÃ  `tmode` del componente `tooltip`?
Risposta: Indica se il componente Ã¨ in modalitÃ  T (liste inline)
Domanda: A cosa serve la proprietÃ  `colspan` del componente `tooltip`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeclick` del componente `tooltip`?
Risposta: Evento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.
Domanda: A cosa serve l'evento `click` del componente `tooltip`?
Risposta: Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)
Domanda: A cosa serve l'evento `responsiveChanged` del componente `tooltip`?
Risposta: Evento chiamato quando il componente cambia stato responsive
Domanda: A cosa serve il componente `tooltipicon`?
Risposta: Il componente `tooltipicon` Rappresenta un icona contenente un tooltip
Domanda: Come si crea un componente `tooltipicon`?
Risposta: Ecco un esempio di base di creazione di un componente `tooltipicon`:<br /><pre><code><cis-ui:tooltipicon type=\"info\" text=\"Questo Ã¨ un tooltip\" /></code></pre>
Domanda: Quali sono gli attributi del componente `tooltipicon`?
Risposta: Gli attributi del componente `tooltipicon` sono i seguenti: <br /><ul><li>`icon`</li><li>`type`</li></ul>
Domanda: Quali sono gli eventi del componente `tooltipicon`?
Risposta: Gli eventi del componente `tooltipicon` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `varname` del componente `tooltipicon`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve la proprietÃ  `style` del componente `tooltipicon`?
Risposta: Stile CSS inline dell'elemento HTML principale
Domanda: A cosa serve la proprietÃ  `mainclass` del componente `tooltipicon`?
Risposta: Classe CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente
Domanda: A cosa serve la proprietÃ  `role` del componente `tooltipicon`?
Risposta: Attributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript
Domanda: A cosa serve la proprietÃ  `skin` del componente `tooltipicon`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css
Domanda: A cosa serve la proprietÃ  `hidden` del componente `tooltipicon`?
Risposta: Se true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento
Domanda: A cosa serve la proprietÃ  `disabled` del componente `tooltipicon`?
Risposta: Se true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento
Domanda: A cosa serve la proprietÃ  `userattrs` del componente `tooltipicon`?
Risposta: Elenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"
Domanda: A cosa serve la proprietÃ  `text` del componente `tooltipicon`?
Risposta: Messaggio del tooltip.\nUsare il doppio pipe (||) per separare titolo e messaggio
Domanda: A cosa serve la proprietÃ  `position` del componente `tooltipicon`?
Risposta: Posizione iniziale del tooltip.\nIl default Ã¨ BestFit
Domanda: A cosa serve la proprietÃ  `boundElement` del componente `tooltipicon`?
Risposta: Elemento contenitore del tooltip.\nDi default Ã¨ il nodo che contiene il componente.
Domanda: A cosa serve la proprietÃ  `autoTrigger` del componente `tooltipicon`?
Risposta: Se true, il tooltip viene attivato automaticamente dal passaggio del mouse
Domanda: A cosa serve la proprietÃ  `` del componente `tooltipicon`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente cambia stato responsive\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `ready` del componente `tooltipicon`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato
Domanda: A cosa serve l'evento `connected` del componente `tooltipicon`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato
Domanda: A cosa serve l'evento `beforeShow` del componente `tooltipicon`?
Risposta: Evento chiamato prima di mostrare il tooltip
Domanda: A cosa serve il componente `treeview`?
Risposta: Il componente `treeview` Rappresenta un insieme gerarchico di elementi con testo e icona, ciascuno dei quali definito da un elemento TreeNode.
Domanda: Come si crea un componente `treeview`?
Risposta: Ecco un esempio di base di creazione di un componente `treeview`:<br /><pre><code><cis-ui:treeview withicons=\"true\">\n    <data>\n        <nodes>\n            <node text=\"Livello 1\" key=\"1\">\n                <nodes>\n                    <node text=\"Licello 1-1\" key=\"1-1\" />\n                    <node text=\"Livello 1-2\" key=\"1-2\">\n                        <nodes>\n                            <node text=\"Livello 1-2-1\" key=\"1-2-1\" />\n                            <node text=\"Livello 1-2-2\" key=\"1-2-2\" />\n                        </nodes>\n                    </node>\n                </nodes>\n            </node>\n            <node text=\"Livello 2\" key=\"2\" />\n            <node text=\"Livello 3\" key=\"3\">\n                <nodes>\n                    <node text=\"Livello 3-1\" key=\"3-1\" />\n                    <node text=\"Livello 3-2\" key=\"3-2\">\n                        <nodes>\n                            <node text=\"Livello 3-2-1\" key=\"3-2-1\" />\n                            <node text=\"Livello 3-2-2\" key=\"3-2-2\" />\n                        </nodes>\n                    </node>\n                </nodes>\n            </node>\n        </nodes>\n    </data>\n</cis-ui:treeview></code></pre>
Domanda: Quali sono gli attributi del componente `treeview`?
Risposta: Gli attributi del componente `treeview` sono i seguenti: <br /><ul><li>`checkmargin`</li><li>`data`</li><li>`iconmargin`</li><li>`multiselect`</li><li>`propagateselection`</li><li>`selectioncheck`</li><li>`togglemargin`</li><li>`withicons`</li><li>`withchecks`</li><li>`withtoggles`</li><li>`keepSelection`</li><li>`autoselectfirst`</li></ul>
Domanda: Quali sono gli eventi del componente `treeview`?
Risposta: Gli eventi del componente `treeview` sono i seguenti: <br /><ul><li>`aftercollapse`</li><li>`afterexpand`</li><li>`nodeclick`</li></ul>
Domanda: A cosa serve la proprietÃ  `caption` del componente `treeview`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del componente `treeview`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del componente `treeview`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del componente `treeview`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del componente `treeview`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del componente `treeview`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del componente `treeview`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `readonly` del componente `treeview`?
Risposta: Se true, il campo Ã¨ impostato in sola lettura.\nUn campo readonly ha un attributo name, per cui il suo valore verrÃ  considerato nelle operazioni di submit.
Domanda: A cosa serve la proprietÃ  `required` del componente `treeview`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del componente `treeview`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del componente `treeview`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del componente `treeview`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del componente `treeview`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del componente `treeview`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del componente `treeview`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del componente `treeview`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del componente `treeview`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del componente `treeview`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del componente `treeview`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del componente `treeview`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del componente `treeview`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del componente `treeview`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del componente `treeview`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del componente `treeview`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: A cosa serve il componente `databox`?
Risposta: Il componente `databox` Pannello informativo con bordo e titolo
Domanda: Come si crea un componente `databox`?
Risposta: Ecco un esempio di base di creazione di un componente `databox`:<br /><pre><code><cis:databox>\n    <legend>Sono un databox</legend>\n    Contenuto pannello databox\n    <br />\n    <cis-ui:text caption=\"Filtro1:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" />\n    <cis-ui:text caption=\"Filtro2:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" />\n    <cis-ui:text caption=\"Filtro3:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" />\n</cis:databox></code></pre>
Domanda: Quali sono gli attributi del componente `databox`?
Risposta: Gli attributi del componente `databox` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `databox`?
Risposta: Gli eventi del componente `databox` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `collapsible` del componente `databox`?
Risposta: Mostra/nasconde il bottone per minimizzare il pannello.
Domanda: A cosa serve la proprietÃ  `collapsebutton` del componente `databox`?
Risposta: Parametri del bottone per minimizzare il pannello
Domanda: A cosa serve la proprietÃ  `withicon` del componente `databox`?
Risposta: Mostra/nasconde l'icona specifica del pannello (info, warn, error, ...).
Domanda: A cosa serve la proprietÃ  `icon` del componente `databox`?
Risposta: Classe css dell'icona del pannello.\nIl tipo specifico Ã¨ determinato dal nome del nodo del pannello (cis-info, cis-warn, ...).
Domanda: A cosa serve la proprietÃ  `legend` del componente `databox`?
Risposta: Titolo del pannello
Domanda: A cosa serve la proprietÃ  `collapsed` del componente `databox`?
Risposta: Stato iniziale aperto/chiuso.\nSe impostato, valorizza automaticamente collapsible=true
Domanda: A cosa serve la proprietÃ  `varname` del componente `databox`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve l'evento `oncollapse` del componente `databox`?
Risposta: Evento lanciato dopo l'infopanel Ã¨ stato collassato
Domanda: A cosa serve l'evento `onexpand` del componente `databox`?
Risposta: Evento lanciato dopo l'infopanel Ã¨ stato espanso
Domanda: A cosa serve il componente `editorconfig`?
Risposta: Il componente `editorconfig` 
Domanda: Quali sono gli attributi del componente `editorconfig`?
Risposta: Gli attributi del componente `editorconfig` sono i seguenti: <br /><ul><li>`type`</li><li>`plugins`</li></ul>
Domanda: Quali sono gli eventi del componente `editorconfig`?
Risposta: Gli eventi del componente `editorconfig` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve il componente `error`?
Risposta: Il componente `error` Pannello informativo specifico per i messaggi di errore
Domanda: Come si crea un componente `error`?
Risposta: Ecco un esempio di base di creazione di un componente `error`:<br /><pre><code><cis:error>\n    Contenuto pannello\n    <br />\n    <cis-ui:text caption=\"Filtro1:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" />\n    <cis-ui:text caption=\"Filtro2:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" />\n    <cis-ui:text caption=\"Filtro3:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" />\n</cis:error></code></pre>
Domanda: Quali sono gli attributi del componente `error`?
Risposta: Gli attributi del componente `error` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `error`?
Risposta: Gli eventi del componente `error` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `collapsible` del componente `error`?
Risposta: Mostra/nasconde il bottone per minimizzare il pannello.
Domanda: A cosa serve la proprietÃ  `collapsebutton` del componente `error`?
Risposta: Parametri del bottone per minimizzare il pannello
Domanda: A cosa serve la proprietÃ  `withicon` del componente `error`?
Risposta: Mostra/nasconde l'icona specifica del pannello (info, warn, error, ...).
Domanda: A cosa serve la proprietÃ  `icon` del componente `error`?
Risposta: Classe css dell'icona del pannello.\nIl tipo specifico Ã¨ determinato dal nome del nodo del pannello (cis-info, cis-warn, ...).
Domanda: A cosa serve la proprietÃ  `legend` del componente `error`?
Risposta: Titolo del pannello
Domanda: A cosa serve la proprietÃ  `collapsed` del componente `error`?
Risposta: Stato iniziale aperto/chiuso.\nSe impostato, valorizza automaticamente collapsible=true
Domanda: A cosa serve la proprietÃ  `varname` del componente `error`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve l'evento `oncollapse` del componente `error`?
Risposta: Evento lanciato dopo l'infopanel Ã¨ stato collassato
Domanda: A cosa serve l'evento `onexpand` del componente `error`?
Risposta: Evento lanciato dopo l'infopanel Ã¨ stato espanso
Domanda: A cosa serve il componente `help`?
Risposta: Il componente `help` Pannello informativo specifico per i messaggi di help
Domanda: Come si crea un componente `help`?
Risposta: Ecco un esempio di base di creazione di un componente `help`:<br /><pre><code><cis:help>\n    Contenuto pannello\n    <br />\n    <cis-ui:text caption=\"Filtro1:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" />\n    <cis-ui:text caption=\"Filtro2:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" />\n    <cis-ui:text caption=\"Filtro3:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" />\n</cis:help></code></pre>
Domanda: Quali sono gli attributi del componente `help`?
Risposta: Gli attributi del componente `help` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `help`?
Risposta: Gli eventi del componente `help` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `collapsible` del componente `help`?
Risposta: Mostra/nasconde il bottone per minimizzare il pannello.
Domanda: A cosa serve la proprietÃ  `collapsebutton` del componente `help`?
Risposta: Parametri del bottone per minimizzare il pannello
Domanda: A cosa serve la proprietÃ  `withicon` del componente `help`?
Risposta: Mostra/nasconde l'icona specifica del pannello (info, warn, error, ...).
Domanda: A cosa serve la proprietÃ  `icon` del componente `help`?
Risposta: Classe css dell'icona del pannello.\nIl tipo specifico Ã¨ determinato dal nome del nodo del pannello (cis-info, cis-warn, ...).
Domanda: A cosa serve la proprietÃ  `legend` del componente `help`?
Risposta: Titolo del pannello
Domanda: A cosa serve la proprietÃ  `collapsed` del componente `help`?
Risposta: Stato iniziale aperto/chiuso.\nSe impostato, valorizza automaticamente collapsible=true
Domanda: A cosa serve la proprietÃ  `varname` del componente `help`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve l'evento `oncollapse` del componente `help`?
Risposta: Evento lanciato dopo l'infopanel Ã¨ stato collassato
Domanda: A cosa serve l'evento `onexpand` del componente `help`?
Risposta: Evento lanciato dopo l'infopanel Ã¨ stato espanso
Domanda: A cosa serve il componente `info`?
Risposta: Il componente `info` Pannello informativo specifico per i messaggi di informazione
Domanda: Come si crea un componente `info`?
Risposta: Ecco un esempio di base di creazione di un componente `info`:<br /><pre><code><cis:info>\n    Contenuto pannello\n    <br />\n    <cis-ui:text caption=\"Filtro1:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" />\n    <cis-ui:text caption=\"Filtro2:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" />\n    <cis-ui:text caption=\"Filtro3:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" />\n</cis:info></code></pre>
Domanda: Quali sono gli attributi del componente `info`?
Risposta: Gli attributi del componente `info` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `info`?
Risposta: Gli eventi del componente `info` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `collapsible` del componente `info`?
Risposta: Mostra/nasconde il bottone per minimizzare il pannello.
Domanda: A cosa serve la proprietÃ  `collapsebutton` del componente `info`?
Risposta: Parametri del bottone per minimizzare il pannello
Domanda: A cosa serve la proprietÃ  `withicon` del componente `info`?
Risposta: Mostra/nasconde l'icona specifica del pannello (info, warn, error, ...).
Domanda: A cosa serve la proprietÃ  `icon` del componente `info`?
Risposta: Classe css dell'icona del pannello.\nIl tipo specifico Ã¨ determinato dal nome del nodo del pannello (cis-info, cis-warn, ...).
Domanda: A cosa serve la proprietÃ  `legend` del componente `info`?
Risposta: Titolo del pannello
Domanda: A cosa serve la proprietÃ  `collapsed` del componente `info`?
Risposta: Stato iniziale aperto/chiuso.\nSe impostato, valorizza automaticamente collapsible=true
Domanda: A cosa serve la proprietÃ  `varname` del componente `info`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve l'evento `oncollapse` del componente `info`?
Risposta: Evento lanciato dopo l'infopanel Ã¨ stato collassato
Domanda: A cosa serve l'evento `onexpand` del componente `info`?
Risposta: Evento lanciato dopo l'infopanel Ã¨ stato espanso
Domanda: A cosa serve il componente `inlinelayout`?
Risposta: Il componente `inlinelayout` Tipologia di layout in cui i componenti sono posti uno di fianco all'altro con andata a capo automatica.\nGli elementi caption dei componenti sono posti in alto a sinistra.
Domanda: Come si crea un componente `inlinelayout`?
Risposta: Ecco un esempio di base di creazione di un componente `inlinelayout`:<br /><pre><code><cis:inlinelayout>\n    <cis-ui:text caption=\"Filtro1:\" multiline=\"true\" />\n    <cis-ui:text caption=\"Filtro numero 2:\" multiline=\"true\" />\n    <cis-ui:text caption=\"Filtro particolare numero 3:\" multiline=\"true\" />\n</cis:inlinelayout></code></pre>
Domanda: Quali sono gli attributi del componente `inlinelayout`?
Risposta: Gli attributi del componente `inlinelayout` sono i seguenti: <br /><ul><li>`captionposition`</li></ul>
Domanda: Quali sono gli eventi del componente `inlinelayout`?
Risposta: Gli eventi del componente `inlinelayout` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve il componente `lista`?
Risposta: Il componente `lista` Rappresenta una tabella, con elementi di layout e di funzionalitÃ  personalizzabili
Domanda: Come si crea un componente `lista`?
Risposta: Ecco un esempio di base di creazione di un componente `lista`:<br /><pre><code><cis:lista scrollable=\"true\" stickyheaders=\"true\">\n     <titolo>Elenco Transazioni applicativo</titolo>\n     <intestazioni>\n         <th fixed=\"true\" />\n         <th>IdNodo</th>\n         <th>CdPDC</th>\n         <th>DsPDC</th>\n         <th>Utente</th>\n         <th>UltAgg</th>\n     </intestazioni>\n</cis:lista>\n<xsl:template match=\"zTrans\" mode=\"lista_riga\">\n    <td><cis-ui:lista-edit  /></td>\n    <td><xsl:value-of select=\"IdNodo\" /></td>\n    <td><xsl:value-of select=\"CdPDC\" /></td>\n    <td><xsl:value-of select=\"DsPDC\" /></td>\n    <td><xsl:value-of select=\"utente\" /></td>\n    <td><xsl:value-of select=\"ultagg\" /></td>\n</xsl:template></code></pre>
Domanda: Quali sono gli attributi del componente `lista`?
Risposta: Gli attributi del componente `lista` sono i seguenti: <br /><ul><li>`baseURL`</li><li>`keepselection`</li><li>`clickable`</li><li>`infinitescroll`</li><li>`withcaption`</li><li>`intestazioni`</li><li>`footer`</li><li>`filtro`</li><li>`titolo`</li><li>`commands`</li><li>`nuovo`</li><li>`excelbutton`</li><li>`pdfbutton`</li><li>`markupbefore`</li><li>`markupafter`</li><li>`stickyheaders`</li><li>`scrollable`</li><li>`autosize`</li><li>`sublevelmode`</li><li>`sublevelTabControl`</li><li>`parentTab`</li><li>`reloadMode`</li><li>`varname`</li><li>`id`</li><li>`style`</li><li>`mainclass`</li><li>`paginatore`</li><li>`hrefSingle`</li><li>`hidden`</li><li>`newRowPosition`</li><li>`single`</li><li>`params`</li><li>`tmode`</li><li>`startingNewRows`</li></ul>
Domanda: Quali sono gli eventi del componente `lista`?
Risposta: Gli eventi del componente `lista` sono i seguenti: <br /><ul><li>`rowClick`</li><li>`afterBuildRow`</li><li>`afterDeleteRow`</li><li>`rowDoubleClick`</li><li>`onReload`</li><li>`afterLoad`</li><li>`beforeLoad`</li><li>`beforeExecTMode`</li><li>`afterExecTMode`</li></ul>
Domanda: A cosa serve il componente `pagina`?
Risposta: Il componente `pagina` Parametri della maschera
Domanda: Come si crea un componente `pagina`?
Risposta: Ecco un esempio di base di creazione di un componente `pagina`:<br /><pre><code>                    </code></pre>
Domanda: Quali sono gli attributi del componente `pagina`?
Risposta: Gli attributi del componente `pagina` sono i seguenti: <br /><ul><li>`mode`</li><li>`window`</li><li>`form`</li><li>`mainSkin`</li><li>`titlebar`</li><li>`bottoni`</li><li>`filtro`</li><li>`content`</li><li>`user_css_js`</li><li>`messagehandler`</li></ul>
Domanda: Quali sono gli eventi del componente `pagina`?
Risposta: Gli eventi del componente `pagina` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve il componente `printform`?
Risposta: Il componente `printform` Pannello che include un filtro, un bottone Stampa e un bottone Scarica
Domanda: Come si crea un componente `printform`?
Risposta: Ecco un esempio di base di creazione di un componente `printform`:<br /><pre><code><cis:printform>\n    <markup>\n        <cis-ui:text caption=\"Filtro1:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" name=\"Filtro1\" />\n        <cis-ui:text caption=\"Filtro2:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" name=\"Filtro2\" />\n        <cis-ui:text caption=\"Filtro3:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" name=\"Filtro3\" />\n    </markup>\n</cis:printform></code></pre>
Domanda: Quali sono gli attributi del componente `printform`?
Risposta: Gli attributi del componente `printform` sono i seguenti: <br /><ul><li>`style`</li><li>`class`</li><li>`hidden`</li><li>`markup`</li><li>`stampa`</li><li>`scarica`</li><li>`url`</li><li>`params`</li><li>`service`</li></ul>
Domanda: Quali sono gli eventi del componente `printform`?
Risposta: Gli eventi del componente `printform` sono i seguenti: <br /><ul><li>`click`</li></ul>
Domanda: A cosa serve il componente `single`?
Risposta: Il componente `single` Componente logico per la gestione CRUD di un modello di dati
Domanda: Quali sono gli attributi del componente `single`?
Risposta: Gli attributi del componente `single` sono i seguenti: <br /><ul><li>`modalita`</li><li>`passo`</li><li>`gestore`</li><li>`dialog`</li><li>`i1`</li><li>`i3`</li><li>`r2`</li><li>`r3`</li><li>`c2`</li><li>`c3`</li><li>`n2`</li><li>`n3`</li><li>`withbuttons`</li><li>`withi`</li><li>`withr`</li><li>`withc`</li><li>`withn`</li><li>`withi1`</li><li>`withi3`</li><li>`withr2`</li><li>`withr3`</li><li>`withc2`</li><li>`withc3`</li><li>`withn2`</li><li>`withn3`</li><li>`titlebar`</li><li>`withTitleBar`</li><li>`validatorText`</li><li>`inline`</li><li>`messagehandler`</li><li>`callingComponent`</li><li>`callingLista`</li><li>`callingRiga`</li><li>`showAfterUpdate`</li><li>`showAfterDelete`</li><li>`showAfterInsert`</li><li>`bcso`</li><li>`autoOverflow`</li><li>`params`</li></ul>
Domanda: Quali sono gli eventi del componente `single`?
Risposta: Gli eventi del componente `single` sono i seguenti: <br /><ul><li>`validate`</li><li>`beforeExec`</li><li>`afterExec`</li></ul>
Domanda: A cosa serve il componente `single-button`?
Risposta: Il componente `single-button` Bottone che apre un dialog contenente un single.\nL'evento di apertura Ã¨ lanciato facendo click su un bottone, i cui parametri sono definiti dal parametro \"button\".
Domanda: Quali sono gli attributi del componente `single-button`?
Risposta: Gli attributi del componente `single-button` sono i seguenti: <br /><ul><li>`button`</li></ul>
Domanda: Quali sono gli eventi del componente `single-button`?
Risposta: Gli eventi del componente `single-button` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `modalita` del componente `single-button`?
Risposta: ModalitÃ  iniziale del single
Domanda: A cosa serve la proprietÃ  `passo` del componente `single-button`?
Risposta: Passo iniziale del single
Domanda: A cosa serve la proprietÃ  `gestore` del componente `single-button`?
Risposta: Nome del gestore collegato al modello di dati.\nSpecificare se diverso da quello ereditato dal componente superiore (pdc, lista, riga).
Domanda: A cosa serve la proprietÃ  `dialog` del componente `single-button`?
Risposta: Parametri del dialog che si apre al click di un bottone dedicato, contenente il modello dei dati.
Domanda: A cosa serve la proprietÃ  `i1` del componente `single-button`?
Risposta: Parametri del bottone di inserimento con passo=1 (NUOVO).
Domanda: A cosa serve la proprietÃ  `i3` del componente `single-button`?
Risposta: Parametri del bottone di inserimento con passo=3 (CONFERMA INSERIMENTO).
Domanda: A cosa serve la proprietÃ  `r2` del componente `single-button`?
Risposta: Parametri del bottone di rettifica con passo=2 (MODIFICA).
Domanda: A cosa serve la proprietÃ  `r3` del componente `single-button`?
Risposta: Parametri del bottone di rettifica con passo=3 (CONFERMA MODIFICA).
Domanda: A cosa serve la proprietÃ  `c2` del componente `single-button`?
Risposta: Parametri del bottone di cancellazione con passo=2 (ELIMINA).
Domanda: A cosa serve la proprietÃ  `c3` del componente `single-button`?
Risposta: Parametri del bottone di cancellazione con passo=3 (CONFERMA ELIMINAZIONE).
Domanda: A cosa serve la proprietÃ  `n2` del componente `single-button`?
Risposta: Parametri del bottone di chiusura dialog (CHIUDI).
Domanda: A cosa serve la proprietÃ  `n3` del componente `single-button`?
Risposta: Parametri del bottone di annullamento operazione (ANNULLA).
Domanda: A cosa serve la proprietÃ  `withbuttons` del componente `single-button`?
Risposta: Visualizza o nasconde i bottoni di esecuzione delle modalitÃ , shortcut di \"withi\" + \"withr\" + \"withc\" + \"withn\".
Domanda: A cosa serve la proprietÃ  `withi` del componente `single-button`?
Risposta: Visualizza o nasconde i bottoni di inserimento, shortcut di \"withi1\" + \"withi3\".
Domanda: A cosa serve la proprietÃ  `withr` del componente `single-button`?
Risposta: Visualizza o nasconde i bottoni di rettifica, shortcut di \"withr2\" + \"withr3\".
Domanda: A cosa serve la proprietÃ  `withc` del componente `single-button`?
Risposta: Visualizza o nasconde i bottoni di cancellazione, shortcut di \"withc2\" + \"withc3\".
Domanda: A cosa serve la proprietÃ  `withn` del componente `single-button`?
Risposta: Visualizza o nasconde i bottoni di annullamento, shortcut di \"withn2\" + \"withn3\".
Domanda: A cosa serve la proprietÃ  `withi1` del componente `single-button`?
Risposta: Visualizza o nasconde il bottone di inserimento con passo=1 (NUOVO).
Domanda: A cosa serve la proprietÃ  `withi3` del componente `single-button`?
Risposta: Visualizza o nasconde il bottone di inserimento con passo=3 (CONFERMA INSERIMENTO).
Domanda: A cosa serve la proprietÃ  `withr2` del componente `single-button`?
Risposta: Visualizza o nasconde il bottone di rettifica con passo=2 (MODIFICA).
Domanda: A cosa serve la proprietÃ  `withr3` del componente `single-button`?
Risposta: Visualizza o nasconde il bottone di rettifica con passo=3 (CONFERMA MODIFICA).
Domanda: A cosa serve la proprietÃ  `withc2` del componente `single-button`?
Risposta: Visualizza o nasconde il bottone di cancellazione con passo=2 (ELIMINA).
Domanda: A cosa serve la proprietÃ  `withc3` del componente `single-button`?
Risposta: Visualizza o nasconde il bottone di cancellazione con passo=3 (CONFERMA ELIMINAZIONE).
Domanda: A cosa serve la proprietÃ  `withn2` del componente `single-button`?
Risposta: Visualizza o nasconde il bottone di chiusura dialog (CHIUDI).
Domanda: A cosa serve la proprietÃ  `withn3` del componente `single-button`?
Risposta: Visualizza o nasconde il bottone di annullamento operazione (ANNULLA).
Domanda: A cosa serve la proprietÃ  `titlebar` del componente `single-button`?
Risposta: Parametri della barra del titolo.
Domanda: A cosa serve la proprietÃ  `withTitleBar` del componente `single-button`?
Risposta: Mostra/nasconde la barra del titolo.
Domanda: A cosa serve la proprietÃ  `validatorText` del componente `single-button`?
Risposta: Testo del messaggio di errore di validazione.
Domanda: A cosa serve la proprietÃ  `inline` del componente `single-button`?
Risposta: Imposta lo stile inline del contenuto.
Domanda: A cosa serve la proprietÃ  `messagehandler` del componente `single-button`?
Risposta: Riferimento al messageHandler che deve essere utilizzato per aggiungere eventuali messaggi di errore
Domanda: A cosa serve la proprietÃ  `callingComponent` del componente `single-button`?
Risposta: Riferimento al bottone che ha richiesto l'apertura del single
Domanda: A cosa serve la proprietÃ  `callingLista` del componente `single-button`?
Risposta: Riferimento alla lista contenente il bottone che ha richiesto l'apertura del single
Domanda: A cosa serve la proprietÃ  `callingRiga` del componente `single-button`?
Risposta: Riferimento alla riga contenente il bottone che ha richiesto l'apertura del single
Domanda: A cosa serve la proprietÃ  `showAfterUpdate` del componente `single-button`?
Risposta: Mantiene aperto o nasconde il dialog dopo un'operazione di CONFERMA MODIFICA (R3)
Domanda: A cosa serve la proprietÃ  `showAfterDelete` del componente `single-button`?
Risposta: Mantiene aperto o nasconde il dialog dopo un'operazione di CONFERMA ELIMINAZIONE (C3)
Domanda: A cosa serve la proprietÃ  `showAfterInsert` del componente `single-button`?
Risposta: Mantiene aperto o nasconde il dialog dopo un'operazione di CONFERMA INSERIMENTO (I3)
Domanda: A cosa serve la proprietÃ  `bcso` del componente `single-button`?
Risposta: Chiave del single.\nSe non esplicitamente indicato, viene ereditata dalla riga o dalla lista contenente il bottone che ha richiesto l'apertura del single.
Domanda: A cosa serve la proprietÃ  `autoOverflow` del componente `single-button`?
Risposta: Se true, viene impostato uno stile overflow=auto all'elemento e ai sottoelementi.
Domanda: A cosa serve la proprietÃ  `params` del componente `single-button`?
Risposta: Parametri chiave/valore da appendere al bcso del single
Domanda: A cosa serve l'evento `validate` del componente `single-button`?
Risposta: Evento lanciato in fase di validazione, prima dell'effettiva esecuzione della modalitÃ  lato server.\nRitornare true o false a seconda dell'esito.
Domanda: A cosa serve l'evento `beforeExec` del componente `single-button`?
Risposta: Evento lanciato prima dell'esecuzione della modalitÃ .
Domanda: A cosa serve l'evento `afterExec` del componente `single-button`?
Risposta: Evento lanciato dopo dell'esecuzione della modalitÃ .
Domanda: A cosa serve il componente `table`?
Risposta: Il componente `table` Rappresenta una tabella
Domanda: Come si crea un componente `table`?
Risposta: Ecco un esempio di base di creazione di un componente `table`:<br /><pre><code><cis:table scrollable=\"true\" stickyheaders=\"true\" element=\"zTrans\">\n     <titolo>Elenco Transazioni applicativo</titolo>\n     <nodo><xsl:copy-of select=\"/DOCUMENTO/LstzTrans\"/></nodo>\n     <intestazioni>\n         <th fixed=\"true\" />\n         <th>IdNodo</th>\n         <th>CdPDC</th>\n         <th>DsPDC</th>\n         <th>Utente</th>\n         <th>UltAgg</th>\n     </intestazioni>\n</cis:table></code></pre>
Domanda: Quali sono gli attributi del componente `table`?
Risposta: Gli attributi del componente `table` sono i seguenti: <br /><ul><li>`element`</li><li>`keepselection`</li><li>`clickable`</li><li>`withcaption`</li><li>`intestazioni`</li><li>`righe`</li><li>`footer`</li><li>`titolo`</li><li>`stickyheaders`</li><li>`scrollable`</li><li>`autosize`</li><li>`varname`</li><li>`id`</li><li>`style`</li><li>`mainclass`</li><li>`hidden`</li></ul>
Domanda: Quali sono gli eventi del componente `table`?
Risposta: Gli eventi del componente `table` sono i seguenti: <br /><ul><li>`rowClick`</li><li>`rowDoubleClick`</li></ul>
Domanda: A cosa serve il componente `tablelayout`?
Risposta: Il componente `tablelayout` Tipologia di layout a colonne, dove caption e body dei componenti sono allineati in ogni riga
Domanda: Come si crea un componente `tablelayout`?
Risposta: Ecco un esempio di base di creazione di un componente `tablelayout`:<br /><pre><code><cis:tablelayout cols=\"4\">\n    <cis-ui:text caption=\"Filtro1:\" multiline=\"true\" />\n    <cis-ui:text caption=\"Filtro numero 2:\" multiline=\"true\" />\n    <cis-ui:text caption=\"Campo molto lungo:\" size=\"60\" colspan=\"3\" />\n    <cis-ui:text caption=\"Titolo lunghissimo che in assenza di colspan sposterebbe il contenuto degli elementi:\" captioncolspan=\"3\" />\n    <cis-ui:text caption=\"Filtro particolare numero 3:\" multiline=\"true\" />\n    <cis-ui:check caption=\"Tipo check\" />\n</cis:tablelayout></code></pre>
Domanda: Quali sono gli attributi del componente `tablelayout`?
Risposta: Gli attributi del componente `tablelayout` sono i seguenti: <br /><ul><li>`captionposition`</li><li>`cols`</li><li>`id`</li><li>`varname`</li><li>`style`</li><li>`mainclass`</li><li>`role`</li><li>`skin`</li><li>`hidden`</li><li>`unselectable`</li><li>`disabled`</li><li>`flexible`</li><li>`height`</li><li>`width`</li><li>`left`</li><li>`top`</li></ul>
Domanda: Quali sono gli eventi del componente `tablelayout`?
Risposta: Gli eventi del componente `tablelayout` sono i seguenti: <br /><ul><li>`ready`</li><li>`connected`</li></ul>
Domanda: A cosa serve il componente `warn`?
Risposta: Il componente `warn` Pannello informativo specifico per i messaggi di attenzione
Domanda: Come si crea un componente `warn`?
Risposta: Ecco un esempio di base di creazione di un componente `warn`:<br /><pre><code><cis:warn>\n    Contenuto pannello\n    <br />\n    <cis-ui:text caption=\"Filtro1:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" />\n    <cis-ui:text caption=\"Filtro2:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" />\n    <cis-ui:text caption=\"Filtro3:\" maxlength=\"5\" placeholder=\"test\" multiline=\"true\" />\n</cis:warn></code></pre>
Domanda: Quali sono gli attributi del componente `warn`?
Risposta: Gli attributi del componente `warn` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del componente `warn`?
Risposta: Gli eventi del componente `warn` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `collapsible` del componente `warn`?
Risposta: Mostra/nasconde il bottone per minimizzare il pannello.
Domanda: A cosa serve la proprietÃ  `collapsebutton` del componente `warn`?
Risposta: Parametri del bottone per minimizzare il pannello
Domanda: A cosa serve la proprietÃ  `withicon` del componente `warn`?
Risposta: Mostra/nasconde l'icona specifica del pannello (info, warn, error, ...).
Domanda: A cosa serve la proprietÃ  `icon` del componente `warn`?
Risposta: Classe css dell'icona del pannello.\nIl tipo specifico Ã¨ determinato dal nome del nodo del pannello (cis-info, cis-warn, ...).
Domanda: A cosa serve la proprietÃ  `legend` del componente `warn`?
Risposta: Titolo del pannello
Domanda: A cosa serve la proprietÃ  `collapsed` del componente `warn`?
Risposta: Stato iniziale aperto/chiuso.\nSe impostato, valorizza automaticamente collapsible=true
Domanda: A cosa serve la proprietÃ  `varname` del componente `warn`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve l'evento `oncollapse` del componente `warn`?
Risposta: Evento lanciato dopo l'infopanel Ã¨ stato collassato
Domanda: A cosa serve l'evento `onexpand` del componente `warn`?
Risposta: Evento lanciato dopo l'infopanel Ã¨ stato espanso
Domanda: A cosa serve il componente `webcall`?
Risposta: Il componente `webcall` Chiamata ajax diretta.\nVa inserito all'interno di un contesto javascript.\nSemplifica l'utilizzo dell'api js grazie all'help dello schema xsd
Domanda: Come si crea un componente `webcall`?
Risposta: Ecco un esempio di base di creazione di un componente `webcall`:<br /><pre><code><cis:webcall command=\"test\">\n    <afterload>\n        function() {\n            console.log(\"ok\");\n        }\n    </afterload>\n</cis-ui:request></code></pre>
Domanda: Quali sono gli attributi del componente `webcall`?
Risposta: Gli attributi del componente `webcall` sono i seguenti: <br /><ul><li>`varname`</li></ul>
Domanda: Quali sono gli eventi del componente `webcall`?
Risposta: Gli eventi del componente `webcall` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `autoload` del componente `webcall`?
Risposta: Se true, la request viene immediatamente lanciata, altrimenti si dovrÃ  utilizzare il metodo doRequest().
Domanda: A cosa serve la proprietÃ  `command` del componente `webcall`?
Risposta: Il valore del parametro che rappresenta un comando ajax negli standard web CISCoop
Domanda: A cosa serve la proprietÃ  `context` del componente `webcall`?
Risposta: Attributo custom utile per impostare il contesto di chiamata degli eventi.\nImpostando questa variabile, il valore di \"this\" negli eventi lato programmatore Ã¨ sostituito con il valore di questa variabile
Domanda: A cosa serve la proprietÃ  `enctype` del componente `webcall`?
Risposta: Il content-type della request.\nSe questo valore non viene specificato e se l'http method prevede un body, viene calcolato:\nSe esiste un blob come parametro, viene inviato multipart/form-data\nSe non esiste un blob, viene inviato application/x-www-form-urlencoded
Domanda: A cosa serve la proprietÃ  `forcefile` del componente `webcall`?
Risposta: Se true, forza la lettura della risposta come file.
Domanda: A cosa serve la proprietÃ  `forzaabilitato` del componente `webcall`?
Risposta: Se true, i permessi vengono ignorati. Forza lo stato abilitato
Domanda: A cosa serve la proprietÃ  `funzione` del componente `webcall`?
Risposta: Corrisponde alla chiave CdPDC della tabella zTrans
Domanda: A cosa serve la proprietÃ  `method` del componente `webcall`?
Risposta: L'http method della request
Domanda: A cosa serve la proprietÃ  `op` del componente `webcall`?
Risposta: Corrisponde alla colonna Permesso della tabella zPermessi
Domanda: A cosa serve la proprietÃ  `params` del componente `webcall`?
Risposta: Sequenza di elementi key/value che contiene i parametri della richiesta. \nQuesto oggetto verrÃ  elaborato accodando valori all'url o al request body a seconda del tipo di request
Domanda: A cosa serve la proprietÃ  `url` del componente `webcall`?
Risposta: Url di base della richiesta
Domanda: A cosa serve la proprietÃ  `messageHandler` del componente `webcall`?
Risposta: Il messageHandler che deve essere utilizzato per aggiungere eventuali messaggi di errore
Domanda: A cosa serve la proprietÃ  `replacemarkup` del componente `webcall`?
Risposta: Elenco di nodi su cui verrÃ  applicata la funzione CIS.Utils.General.replaceMarkup al termine della chiamata ajax con esito positivo.
Domanda: A cosa serve la proprietÃ  `replaceNode` del componente `webcall`?
Risposta: Elenco di nodi su cui verrÃ  applicata la funzione CIS.Utils.General.replaceNode al termine della chiamata ajax con esito positivo.
Domanda: A cosa serve la proprietÃ  `appendMarkup` del componente `webcall`?
Risposta: Elenco di nodi su cui verrÃ  applicata la funzione CIS.Utils.General.appendMarkup al termine della chiamata ajax con esito positivo.
Domanda: A cosa serve la proprietÃ  `messageMode` del componente `webcall`?
Risposta: Indica la modalitÃ  con cui verranno mostrati i messaggi
Domanda: A cosa serve la proprietÃ  `container` del componente `webcall`?
Risposta: Contenitore dentro il quale Ã¨ lanciato il comando.\nIl valore puÃ² essere un componente o un elemento HTML.\nSpecificando questo parametro vengono impostate le property \"waitingelements\" e \"messagehandler\".
Domanda: A cosa serve la proprietÃ  `preRequestMessage` del componente `webcall`?
Risposta: Messaggio che viene mostrato prima che venga effettuata la request
Domanda: A cosa serve la proprietÃ  `preRequestCaption` del componente `webcall`?
Risposta: Titolo della messagebox contenente il messaggio che viene mostrato prima che venga effettuata la request
Domanda: A cosa serve la proprietÃ  `reloadMode` del componente `webcall`?
Risposta: ModalitÃ  reload dell'oggetto chiamante dopo l'evento afterLoad
Domanda: A cosa serve la proprietÃ  `appendBCSO` del componente `webcall`?
Risposta: Aggiunge automaticamente il parametro bcso se trovato nel contesto chiamante piÃ¹ vicino (componente,riga,lista/single)
Domanda: A cosa serve l'evento `beforeload` del componente `webcall`?
Risposta: Evento chiamato appena prima di eseguire una chiamata ajax.\nImpostando il valore di return a false, si impedisce alla chiamata di proseguire
Domanda: A cosa serve l'evento `afterload` del componente `webcall`?
Risposta: Evento chiamato al conseguimento di una chiamata ajax con esito positivo e senza errori
Domanda: A cosa serve l'evento `onerror` del componente `webcall`?
Risposta: Evento chiamato in caso di errore o in caso in cui la chiamata riporti messaggi di errore
Domanda: A cosa serve l'evento `afterparsehtml` del componente `webcall`?
Risposta: Evento chiamato dopo l'elaborazione del contenuto (envelope) della risposta, se di tipo HTML
Domanda: A cosa serve l'evento `afterparseblob` del componente `webcall`?
Risposta: Evento chiamato dopo l'elaborazione del contenuto (envelope) della risposta, se di tipo CUSTOM
Domanda: A cosa serve l'evento `always` del componente `webcall`?
Risposta: Evento chiamato al termine di una chiamata, a prescindere dallo stato di errore. \nE' l'ultimo evento che viene chiamato
Domanda: A cosa serve l'evento `showwaitpanel` del componente `webcall`?
Risposta: Funzione chiamata quando Ã¨ necessario informare l'utilizzatore che sta per aver luogo un'elaborazione asincrona di durata indefinita
Domanda: A cosa serve l'evento `hidewaitpanel` del componente `webcall`?
Risposta: Funzione chiamata quando Ã¨ necessario informare l'utilizzatore che Ã¨ appena terminata un'elaborazione asincrona di durata indefinita  
Domanda: A cosa serve l'evento `beforedorequest` del componente `webcall`?
Risposta: Funzione chiamata quando la request Ã¨ stata inizializzata, prima che avvenga luogo l'effettiva chiamata al server
Domanda: A cosa serve l'evento `gestiscimessaggi` del componente `webcall`?
Risposta: Funzione chiamata in dopo l'esecuzione della request, a prescindere dalla presenza di errori, oppure in caso di errore dell'oggetto javascript nativo XMLHttpRequest\nIn questa fase vengono mostrati tutti i messaggi registrati, a prescindere dal livello.\nSe vengono registrati messaggi con livello uguale o superiore a \"ERROR\", viene lanciato l'evento \"onError\"
Domanda: A cosa serve l'evento `isinerror` del componente `webcall`?
Risposta: Flag che indica se lo stato della chiamata ha avuto esito positivo o negativo.\nA seconda del valore, al termine del ciclo di vita vengono lanciati gli eventi \"afterLoad\" o \"onError\"
Domanda: A cosa serve l'evento `onvalidate` del componente `webcall`?
Risposta: Funzione di validazione personalizzata utente
Domanda: Quali sono gli attributi del tipo `permessi`?
Risposta: Gli attributi del tipo `permessi` sono i seguenti: <br /><ul><li>`funzione`</li><li>`forzaabilitato`</li><li>`op`</li><li>`hidedisabled`</li></ul>
Domanda: Quali sono gli eventi del tipo `permessi`?
Risposta: Gli eventi del tipo `permessi` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `params`?
Risposta: Gli attributi del tipo `params` sono i seguenti: <br /><ul><li>`param`</li></ul>
Domanda: Quali sono gli eventi del tipo `params`?
Risposta: Gli eventi del tipo `params` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `param`?
Risposta: Gli attributi del tipo `param` sono i seguenti: <br /><ul><li>`name`</li><li>`value`</li><li>`js`</li></ul>
Domanda: Quali sono gli eventi del tipo `param`?
Risposta: Gli eventi del tipo `param` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `value`?
Risposta: Gli attributi del tipo `value` sono i seguenti: <br /><ul><li>`js`</li><li>`markup`</li></ul>
Domanda: Quali sono gli eventi del tipo `value`?
Risposta: Gli eventi del tipo `value` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `holidays`?
Risposta: Gli attributi del tipo `holidays` sono i seguenti: <br /><ul><li>`holiday`</li></ul>
Domanda: Quali sono gli eventi del tipo `holidays`?
Risposta: Gli eventi del tipo `holidays` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `holiday`?
Risposta: Gli attributi del tipo `holiday` sono i seguenti: <br /><ul><li>`year`</li><li>`month`</li><li>`day`</li></ul>
Domanda: Quali sono gli eventi del tipo `holiday`?
Risposta: Gli eventi del tipo `holiday` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `filtri`?
Risposta: Gli attributi del tipo `filtri` sono i seguenti: <br /><ul><li>`filtro`</li></ul>
Domanda: Quali sono gli eventi del tipo `filtri`?
Risposta: Gli eventi del tipo `filtri` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `filtro`?
Risposta: Gli attributi del tipo `filtro` sono i seguenti: <br /><ul><li>`name`</li><li>`value`</li></ul>
Domanda: Quali sono gli eventi del tipo `filtro`?
Risposta: Gli eventi del tipo `filtro` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `modes`?
Risposta: Gli attributi del tipo `modes` sono i seguenti: <br /><ul><li>`mode`</li></ul>
Domanda: Quali sono gli eventi del tipo `modes`?
Risposta: Gli eventi del tipo `modes` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `mode`?
Risposta: Gli attributi del tipo `mode` sono i seguenti: <br /><ul><li>`key`</li><li>`datalist`</li><li>`command`</li><li>`url`</li><li>`text`</li><li>`params`</li><li>`filtri`</li><li>`btncerca`</li></ul>
Domanda: Quali sono gli eventi del tipo `mode`?
Risposta: Gli eventi del tipo `mode` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `treenodes`?
Risposta: Gli attributi del tipo `treenodes` sono i seguenti: <br /><ul><li>`node`</li></ul>
Domanda: Quali sono gli eventi del tipo `treenodes`?
Risposta: Gli eventi del tipo `treenodes` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `treeviewdata`?
Risposta: Gli attributi del tipo `treeviewdata` sono i seguenti: <br /><ul><li>`nodes`</li></ul>
Domanda: Quali sono gli eventi del tipo `treeviewdata`?
Risposta: Gli eventi del tipo `treeviewdata` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `treenode`?
Risposta: Gli attributi del tipo `treenode` sono i seguenti: <br /><ul><li>`propagateSelection`</li><li>`withIcons`</li><li>`withChecks`</li><li>`readonly`</li><li>`icon`</li><li>`key`</li><li>`nodes`</li><li>`text`</li></ul>
Domanda: Quali sono gli eventi del tipo `treenode`?
Risposta: Gli eventi del tipo `treenode` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `datalistcolumns`?
Risposta: Gli attributi del tipo `datalistcolumns` sono i seguenti: <br /><ul><li>`column`</li></ul>
Domanda: Quali sono gli eventi del tipo `datalistcolumns`?
Risposta: Gli eventi del tipo `datalistcolumns` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `datalistcolumn`?
Risposta: Gli attributi del tipo `datalistcolumn` sono i seguenti: <br /><ul><li>`caption`</li><li>`name`</li><li>`type`</li></ul>
Domanda: Quali sono gli eventi del tipo `datalistcolumn`?
Risposta: Gli eventi del tipo `datalistcolumn` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `datalistrows`?
Risposta: Gli attributi del tipo `datalistrows` sono i seguenti: <br /><ul><li>`row`</li></ul>
Domanda: Quali sono gli eventi del tipo `datalistrows`?
Risposta: Gli eventi del tipo `datalistrows` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `menuitems`?
Risposta: Gli attributi del tipo `menuitems` sono i seguenti: <br /><ul><li>`item`</li><li>`separator`</li></ul>
Domanda: Quali sono gli eventi del tipo `menuitems`?
Risposta: Gli eventi del tipo `menuitems` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `menuitembase`?
Risposta: Gli attributi del tipo `menuitembase` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del tipo `menuitembase`?
Risposta: Gli eventi del tipo `menuitembase` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `id` del tipo `menuitembase`?
Risposta: Attributo id dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `name` del tipo `menuitembase`?
Risposta: Attributo name dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `varname` del tipo `menuitembase`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve la proprietÃ  `tooltip` del tipo `menuitembase`?
Risposta: Testo del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione
Domanda: A cosa serve la proprietÃ  `tooltipposition` del tipo `menuitembase`?
Risposta: Posizione del tooltip.
Domanda: A cosa serve la proprietÃ  `style` del tipo `menuitembase`?
Risposta: Stile CSS inline dell'elemento HTML principale
Domanda: A cosa serve la proprietÃ  `mainclass` del tipo `menuitembase`?
Risposta: Classe CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente
Domanda: A cosa serve la proprietÃ  `role` del tipo `menuitembase`?
Risposta: Attributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript
Domanda: A cosa serve la proprietÃ  `skin` del tipo `menuitembase`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css
Domanda: A cosa serve la proprietÃ  `hidden` del tipo `menuitembase`?
Risposta: Se true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento
Domanda: A cosa serve la proprietÃ  `unselectable` del tipo `menuitembase`?
Risposta: Se true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu
Domanda: A cosa serve la proprietÃ  `disabled` del tipo `menuitembase`?
Risposta: Se true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento
Domanda: A cosa serve la proprietÃ  `contextMenuEnabled` del tipo `menuitembase`?
Risposta: Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.
Domanda: A cosa serve la proprietÃ  `flexible` del tipo `menuitembase`?
Risposta: Se true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento
Domanda: A cosa serve la proprietÃ  `userattrs` del tipo `menuitembase`?
Risposta: Elenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"
Domanda: A cosa serve la proprietÃ  `height` del tipo `menuitembase`?
Risposta: Imposta il valore \"height\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `width` del tipo `menuitembase`?
Risposta: Imposta il valore \"width\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `left` del tipo `menuitembase`?
Risposta: Imposta il valore \"left\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `top` del tipo `menuitembase`?
Risposta: Imposta il valore \"top\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `permessi` del tipo `menuitembase`?
Risposta: Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no
Domanda: A cosa serve la proprietÃ  `tmode` del tipo `menuitembase`?
Risposta: Indica se il componente Ã¨ in modalitÃ  T (liste inline)
Domanda: A cosa serve la proprietÃ  `colspan` del tipo `menuitembase`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeclick` del tipo `menuitembase`?
Risposta: Evento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.
Domanda: A cosa serve l'evento `click` del tipo `menuitembase`?
Risposta: Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)
Domanda: A cosa serve l'evento `ready` del tipo `menuitembase`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato
Domanda: A cosa serve l'evento `connected` del tipo `menuitembase`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato
Domanda: A cosa serve l'evento `responsiveChanged` del tipo `menuitembase`?
Risposta: Evento chiamato quando il componente cambia stato responsive
Domanda: Quali sono gli attributi del tipo `menuitem`?
Risposta: Gli attributi del tipo `menuitem` sono i seguenti: <br /><ul><li>`desc`</li><li>`forzaabilitato`</li><li>`funzione`</li><li>`href`</li><li>`icon`</li><li>`inwindow`</li><li>`items`</li><li>`loadonstartup`</li><li>`target`</li><li>`text`</li><li>`tabparams`</li><li>`window`</li></ul>
Domanda: Quali sono gli eventi del tipo `menuitem`?
Risposta: Gli eventi del tipo `menuitem` sono i seguenti: <br /><ul><li>`itemclick`</li></ul>
Domanda: A cosa serve la proprietÃ  `` del tipo `menuitem`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: Quali sono gli attributi del tipo `menuseparator`?
Risposta: Gli attributi del tipo `menuseparator` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del tipo `menuseparator`?
Risposta: Gli eventi del tipo `menuseparator` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `` del tipo `menuseparator`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: Quali sono gli attributi del tipo `linkedfield`?
Risposta: Gli attributi del tipo `linkedfield` sono i seguenti: <br /><ul><li>`name`</li><li>`element`</li><li>`column`</li><li>`request`</li></ul>
Domanda: Quali sono gli eventi del tipo `linkedfield`?
Risposta: Gli eventi del tipo `linkedfield` sono i seguenti: <br /><ul><li>`callback`</li></ul>
Domanda: Quali sono gli attributi del tipo `datalistrequest`?
Risposta: Gli attributi del tipo `datalistrequest` sono i seguenti: <br /><ul><li>`minlength`</li><li>`searchparam`</li><li>`decodificaparam`</li><li>`resultsetname`</li><li>`service`</li></ul>
Domanda: Quali sono gli eventi del tipo `datalistrequest`?
Risposta: Gli eventi del tipo `datalistrequest` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `autoload` del tipo `datalistrequest`?
Risposta: Se true, la request viene immediatamente lanciata, altrimenti si dovrÃ  utilizzare il metodo doRequest().
Domanda: A cosa serve la proprietÃ  `command` del tipo `datalistrequest`?
Risposta: Il valore del parametro che rappresenta un comando ajax negli standard web CISCoop
Domanda: A cosa serve la proprietÃ  `context` del tipo `datalistrequest`?
Risposta: Attributo custom utile per impostare il contesto di chiamata degli eventi.\nImpostando questa variabile, il valore di \"this\" negli eventi lato programmatore Ã¨ sostituito con il valore di questa variabile
Domanda: A cosa serve la proprietÃ  `enctype` del tipo `datalistrequest`?
Risposta: Il content-type della request.\nSe questo valore non viene specificato e se l'http method prevede un body, viene calcolato:\nSe esiste un blob come parametro, viene inviato multipart/form-data\nSe non esiste un blob, viene inviato application/x-www-form-urlencoded
Domanda: A cosa serve la proprietÃ  `forcefile` del tipo `datalistrequest`?
Risposta: Se true, forza la lettura della risposta come file.
Domanda: A cosa serve la proprietÃ  `forzaabilitato` del tipo `datalistrequest`?
Risposta: Se true, i permessi vengono ignorati. Forza lo stato abilitato
Domanda: A cosa serve la proprietÃ  `funzione` del tipo `datalistrequest`?
Risposta: Corrisponde alla chiave CdPDC della tabella zTrans
Domanda: A cosa serve la proprietÃ  `method` del tipo `datalistrequest`?
Risposta: L'http method della request
Domanda: A cosa serve la proprietÃ  `op` del tipo `datalistrequest`?
Risposta: Corrisponde alla colonna Permesso della tabella zPermessi
Domanda: A cosa serve la proprietÃ  `params` del tipo `datalistrequest`?
Risposta: Sequenza di elementi key/value che contiene i parametri della richiesta. \nQuesto oggetto verrÃ  elaborato accodando valori all'url o al request body a seconda del tipo di request
Domanda: A cosa serve la proprietÃ  `url` del tipo `datalistrequest`?
Risposta: Url di base della richiesta
Domanda: A cosa serve la proprietÃ  `messageHandler` del tipo `datalistrequest`?
Risposta: Il messageHandler che deve essere utilizzato per aggiungere eventuali messaggi di errore
Domanda: A cosa serve la proprietÃ  `replacemarkup` del tipo `datalistrequest`?
Risposta: Elenco di nodi su cui verrÃ  applicata la funzione CIS.Utils.General.replaceMarkup al termine della chiamata ajax con esito positivo.
Domanda: A cosa serve la proprietÃ  `replaceNode` del tipo `datalistrequest`?
Risposta: Elenco di nodi su cui verrÃ  applicata la funzione CIS.Utils.General.replaceNode al termine della chiamata ajax con esito positivo.
Domanda: A cosa serve la proprietÃ  `appendMarkup` del tipo `datalistrequest`?
Risposta: Elenco di nodi su cui verrÃ  applicata la funzione CIS.Utils.General.appendMarkup al termine della chiamata ajax con esito positivo.
Domanda: A cosa serve la proprietÃ  `messageMode` del tipo `datalistrequest`?
Risposta: Indica la modalitÃ  con cui verranno mostrati i messaggi
Domanda: A cosa serve la proprietÃ  `container` del tipo `datalistrequest`?
Risposta: Contenitore dentro il quale Ã¨ lanciato il comando.\nIl valore puÃ² essere un componente o un elemento HTML.\nSpecificando questo parametro vengono impostate le property \"waitingelements\" e \"messagehandler\".
Domanda: A cosa serve la proprietÃ  `preRequestMessage` del tipo `datalistrequest`?
Risposta: Messaggio che viene mostrato prima che venga effettuata la request
Domanda: A cosa serve la proprietÃ  `preRequestCaption` del tipo `datalistrequest`?
Risposta: Titolo della messagebox contenente il messaggio che viene mostrato prima che venga effettuata la request
Domanda: A cosa serve la proprietÃ  `reloadMode` del tipo `datalistrequest`?
Risposta: ModalitÃ  reload dell'oggetto chiamante dopo l'evento afterLoad
Domanda: A cosa serve la proprietÃ  `appendBCSO` del tipo `datalistrequest`?
Risposta: Aggiunge automaticamente il parametro bcso se trovato nel contesto chiamante piÃ¹ vicino (componente,riga,lista/single)
Domanda: A cosa serve l'evento `beforeload` del tipo `datalistrequest`?
Risposta: Evento chiamato appena prima di eseguire una chiamata ajax.\nImpostando il valore di return a false, si impedisce alla chiamata di proseguire
Domanda: A cosa serve l'evento `afterload` del tipo `datalistrequest`?
Risposta: Evento chiamato al conseguimento di una chiamata ajax con esito positivo e senza errori
Domanda: A cosa serve l'evento `onerror` del tipo `datalistrequest`?
Risposta: Evento chiamato in caso di errore o in caso in cui la chiamata riporti messaggi di errore
Domanda: A cosa serve l'evento `afterparsehtml` del tipo `datalistrequest`?
Risposta: Evento chiamato dopo l'elaborazione del contenuto (envelope) della risposta, se di tipo HTML
Domanda: A cosa serve l'evento `afterparseblob` del tipo `datalistrequest`?
Risposta: Evento chiamato dopo l'elaborazione del contenuto (envelope) della risposta, se di tipo CUSTOM
Domanda: A cosa serve l'evento `always` del tipo `datalistrequest`?
Risposta: Evento chiamato al termine di una chiamata, a prescindere dallo stato di errore. \nE' l'ultimo evento che viene chiamato
Domanda: A cosa serve l'evento `showwaitpanel` del tipo `datalistrequest`?
Risposta: Funzione chiamata quando Ã¨ necessario informare l'utilizzatore che sta per aver luogo un'elaborazione asincrona di durata indefinita
Domanda: A cosa serve l'evento `hidewaitpanel` del tipo `datalistrequest`?
Risposta: Funzione chiamata quando Ã¨ necessario informare l'utilizzatore che Ã¨ appena terminata un'elaborazione asincrona di durata indefinita  
Domanda: A cosa serve l'evento `beforedorequest` del tipo `datalistrequest`?
Risposta: Funzione chiamata quando la request Ã¨ stata inizializzata, prima che avvenga luogo l'effettiva chiamata al server
Domanda: A cosa serve l'evento `gestiscimessaggi` del tipo `datalistrequest`?
Risposta: Funzione chiamata in dopo l'esecuzione della request, a prescindere dalla presenza di errori, oppure in caso di errore dell'oggetto javascript nativo XMLHttpRequest\nIn questa fase vengono mostrati tutti i messaggi registrati, a prescindere dal livello.\nSe vengono registrati messaggi con livello uguale o superiore a \"ERROR\", viene lanciato l'evento \"onError\"
Domanda: A cosa serve l'evento `isinerror` del tipo `datalistrequest`?
Risposta: Flag che indica se lo stato della chiamata ha avuto esito positivo o negativo.\nA seconda del valore, al termine del ciclo di vita vengono lanciati gli eventi \"afterLoad\" o \"onError\"
Domanda: A cosa serve l'evento `onvalidate` del tipo `datalistrequest`?
Risposta: Funzione di validazione personalizzata utente
Domanda: Quali sono gli attributi del tipo `decorequest`?
Risposta: Gli attributi del tipo `decorequest` sono i seguenti: <br /><ul><li>`keyparam`</li></ul>
Domanda: Quali sono gli eventi del tipo `decorequest`?
Risposta: Gli eventi del tipo `decorequest` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `minlength` del tipo `decorequest`?
Risposta: Lunghezza minima della stringa per la ricerca incrementale (con request)
Domanda: A cosa serve la proprietÃ  `searchparam` del tipo `decorequest`?
Risposta: Nome del parametro di ricerca
Domanda: A cosa serve la proprietÃ  `decodificaparam` del tipo `decorequest`?
Risposta: Nome del parametro di decodifica
Domanda: A cosa serve la proprietÃ  `resultsetname` del tipo `decorequest`?
Risposta: Nome del resultset ritornato dalla servlet
Domanda: A cosa serve la proprietÃ  `service` del tipo `decorequest`?
Risposta: Nome del servizio combo_service collegato
Domanda: A cosa serve la proprietÃ  `` del tipo `decorequest`?
Risposta: Se true, la request viene immediatamente lanciata, altrimenti si dovrÃ  utilizzare il metodo doRequest().\n\nIl valore del parametro che rappresenta un comando ajax negli standard web CISCoop\n\nNome del parametro che rappresenta un comando ajax negli standard web CISCoop.\n\nAttributo custom utile per impostare il contesto di chiamata degli eventi.\nImpostando questa variabile, il valore di \"this\" negli eventi lato programmatore Ã¨ sostituito con il valore di questa variabile\n\nIl content-type della request.\nSe questo valore non viene specificato e se l'http method prevede un body, viene calcolato:\nSe esiste un blob come parametro, viene inviato multipart/form-data\nSe non esiste un blob, viene inviato application/x-www-form-urlencoded\n\nSe true, forza la lettura della risposta come file.\n\nSe true, i permessi vengono ignorati. Forza lo stato abilitato\n\nCorrisponde alla chiave CdPDC della tabella zTrans\n\nL'http method della request\n\nSe true, unito a nocacheparamname, aggiunge un parametro con valore random utile per evitare che il browser restituisca una risposta in cache di una request giÃ  effettuata.\n\nUnito a nocache, aggiunge un parametro con valore random utile per evitare che il browser restituisca una risposta in cache di una request giÃ  effettuata.\n\nCorrisponde alla colonna Permesso della tabella zPermessi\n\nSequenza di elementi key/value che contiene i parametri della richiesta. \nQuesto oggetto verrÃ  elaborato accodando valori all'url o al request body a seconda del tipo di request\n\nUrl di base della richiesta\n\nEvento chiamato appena prima di eseguire una chiamata ajax.\nImpostando il valore di return a false, si impedisce alla chiamata di proseguire\n\nEvento chiamato al conseguimento di una chiamata ajax con esito positivo e senza errori\n\nEvento chiamato in caso di errore o in caso in cui la chiamata riporti messaggi di errore\n\nEvento chiamato dopo l'elaborazione del contenuto (envelope) della risposta, se di tipo HTML\n\nEvento chiamato dopo l'elaborazione del contenuto (envelope) della risposta, se di tipo CUSTOM\n\nEvento chiamato al termine di una chiamata, a prescindere dallo stato di errore. \nE' l'ultimo evento che viene chiamato\n\nFunzione chiamata quando Ã¨ necessario informare l'utilizzatore che sta per aver luogo un'elaborazione asincrona di durata indefinita\n\nFunzione chiamata quando Ã¨ necessario informare l'utilizzatore che Ã¨ appena terminata un'elaborazione asincrona di durata indefinita  \n\nFunzione chiamata quando la request Ã¨ stata inizializzata, prima che avvenga luogo l'effettiva chiamata al server\n\nFunzione chiamata in dopo l'esecuzione della request, a prescindere dalla presenza di errori, oppure in caso di errore dell'oggetto javascript nativo XMLHttpRequest\nIn questa fase vengono mostrati tutti i messaggi registrati, a prescindere dal livello.\nSe vengono registrati messaggi con livello uguale o superiore a \"ERROR\", viene lanciato l'evento \"onError\"\n\nFlag che indica se lo stato della chiamata ha avuto esito positivo o negativo.\nA seconda del valore, al termine del ciclo di vita vengono lanciati gli eventi \"afterLoad\" o \"onError\"\n\nIl messageHandler che deve essere utilizzato per aggiungere eventuali messaggi di errore\n\nElenco di nodi su cui verrÃ  applicata la funzione CIS.Utils.General.replaceMarkup al termine della chiamata ajax con esito positivo.\n\nElenco di nodi su cui verrÃ  applicata la funzione CIS.Utils.General.replaceNode al termine della chiamata ajax con esito positivo.\n\nElenco di nodi su cui verrÃ  applicata la funzione CIS.Utils.General.appendMarkup al termine della chiamata ajax con esito positivo.\n\nIndica la modalitÃ  con cui verranno mostrati i messaggi\n\nContenitore dentro il quale Ã¨ lanciato il comando.\nIl valore puÃ² essere un componente o un elemento HTML.\nSpecificando questo parametro vengono impostate le property \"waitingelements\" e \"messagehandler\".\n\nMessaggio che viene mostrato prima che venga effettuata la request\n\nTitolo della messagebox contenente il messaggio che viene mostrato prima che venga effettuata la request\n\nFunzione di validazione personalizzata utente\n\nModalitÃ  reload dell'oggetto chiamante dopo l'evento afterLoad\n\nAggiunge automaticamente il parametro bcso se trovato nel contesto chiamante piÃ¹ vicino (componente,riga,lista/single)
Domanda: Quali sono gli attributi del tipo `buttongroupelement`?
Risposta: Gli attributi del tipo `buttongroupelement` sono i seguenti: <br /><ul><li>`active`</li><li>`icon`</li><li>`text`</li><li>`value`</li></ul>
Domanda: Quali sono gli eventi del tipo `buttongroupelement`?
Risposta: Gli eventi del tipo `buttongroupelement` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `id` del tipo `buttongroupelement`?
Risposta: Attributo id dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `name` del tipo `buttongroupelement`?
Risposta: Attributo name dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `varname` del tipo `buttongroupelement`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve la proprietÃ  `tooltip` del tipo `buttongroupelement`?
Risposta: Testo del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione
Domanda: A cosa serve la proprietÃ  `tooltipposition` del tipo `buttongroupelement`?
Risposta: Posizione del tooltip.
Domanda: A cosa serve la proprietÃ  `style` del tipo `buttongroupelement`?
Risposta: Stile CSS inline dell'elemento HTML principale
Domanda: A cosa serve la proprietÃ  `mainclass` del tipo `buttongroupelement`?
Risposta: Classe CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente
Domanda: A cosa serve la proprietÃ  `role` del tipo `buttongroupelement`?
Risposta: Attributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript
Domanda: A cosa serve la proprietÃ  `skin` del tipo `buttongroupelement`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css
Domanda: A cosa serve la proprietÃ  `hidden` del tipo `buttongroupelement`?
Risposta: Se true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento
Domanda: A cosa serve la proprietÃ  `unselectable` del tipo `buttongroupelement`?
Risposta: Se true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu
Domanda: A cosa serve la proprietÃ  `disabled` del tipo `buttongroupelement`?
Risposta: Se true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento
Domanda: A cosa serve la proprietÃ  `contextMenuEnabled` del tipo `buttongroupelement`?
Risposta: Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.
Domanda: A cosa serve la proprietÃ  `flexible` del tipo `buttongroupelement`?
Risposta: Se true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento
Domanda: A cosa serve la proprietÃ  `userattrs` del tipo `buttongroupelement`?
Risposta: Elenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"
Domanda: A cosa serve la proprietÃ  `height` del tipo `buttongroupelement`?
Risposta: Imposta il valore \"height\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `width` del tipo `buttongroupelement`?
Risposta: Imposta il valore \"width\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `left` del tipo `buttongroupelement`?
Risposta: Imposta il valore \"left\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `top` del tipo `buttongroupelement`?
Risposta: Imposta il valore \"top\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `permessi` del tipo `buttongroupelement`?
Risposta: Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no
Domanda: A cosa serve la proprietÃ  `tmode` del tipo `buttongroupelement`?
Risposta: Indica se il componente Ã¨ in modalitÃ  T (liste inline)
Domanda: A cosa serve la proprietÃ  `colspan` del tipo `buttongroupelement`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeclick` del tipo `buttongroupelement`?
Risposta: Evento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.
Domanda: A cosa serve l'evento `click` del tipo `buttongroupelement`?
Risposta: Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)
Domanda: A cosa serve l'evento `ready` del tipo `buttongroupelement`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato
Domanda: A cosa serve l'evento `connected` del tipo `buttongroupelement`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato
Domanda: A cosa serve l'evento `responsiveChanged` del tipo `buttongroupelement`?
Risposta: Evento chiamato quando il componente cambia stato responsive
Domanda: Quali sono gli attributi del tipo `tabpage`?
Risposta: Gli attributi del tipo `tabpage` sono i seguenti: <br /><ul><li>`active`</li><li>`caption`</li><li>`closeable`</li><li>`mainicon`</li><li>`ref`</li><li>`markup`</li><li>`loadingtext`</li><li>`loadingicon`</li><li>`index`</li><li>`appendBefore`</li><li>`appendAfter`</li><li>`parentTab`</li></ul>
Domanda: Quali sono gli eventi del tipo `tabpage`?
Risposta: Gli eventi del tipo `tabpage` sono i seguenti: <br /><ul><li>`afteropen`</li><li>`afterclose`</li></ul>
Domanda: A cosa serve la proprietÃ  `id` del tipo `tabpage`?
Risposta: Attributo id dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `name` del tipo `tabpage`?
Risposta: Attributo name dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `varname` del tipo `tabpage`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve la proprietÃ  `tooltip` del tipo `tabpage`?
Risposta: Testo del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione
Domanda: A cosa serve la proprietÃ  `tooltipposition` del tipo `tabpage`?
Risposta: Posizione del tooltip.
Domanda: A cosa serve la proprietÃ  `style` del tipo `tabpage`?
Risposta: Stile CSS inline dell'elemento HTML principale
Domanda: A cosa serve la proprietÃ  `mainclass` del tipo `tabpage`?
Risposta: Classe CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente
Domanda: A cosa serve la proprietÃ  `role` del tipo `tabpage`?
Risposta: Attributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript
Domanda: A cosa serve la proprietÃ  `skin` del tipo `tabpage`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css
Domanda: A cosa serve la proprietÃ  `hidden` del tipo `tabpage`?
Risposta: Se true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento
Domanda: A cosa serve la proprietÃ  `unselectable` del tipo `tabpage`?
Risposta: Se true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu
Domanda: A cosa serve la proprietÃ  `disabled` del tipo `tabpage`?
Risposta: Se true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento
Domanda: A cosa serve la proprietÃ  `contextMenuEnabled` del tipo `tabpage`?
Risposta: Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.
Domanda: A cosa serve la proprietÃ  `flexible` del tipo `tabpage`?
Risposta: Se true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento
Domanda: A cosa serve la proprietÃ  `userattrs` del tipo `tabpage`?
Risposta: Elenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"
Domanda: A cosa serve la proprietÃ  `height` del tipo `tabpage`?
Risposta: Imposta il valore \"height\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `width` del tipo `tabpage`?
Risposta: Imposta il valore \"width\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `left` del tipo `tabpage`?
Risposta: Imposta il valore \"left\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `top` del tipo `tabpage`?
Risposta: Imposta il valore \"top\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `permessi` del tipo `tabpage`?
Risposta: Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no
Domanda: A cosa serve la proprietÃ  `tmode` del tipo `tabpage`?
Risposta: Indica se il componente Ã¨ in modalitÃ  T (liste inline)
Domanda: A cosa serve la proprietÃ  `colspan` del tipo `tabpage`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeclick` del tipo `tabpage`?
Risposta: Evento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.
Domanda: A cosa serve l'evento `click` del tipo `tabpage`?
Risposta: Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)
Domanda: A cosa serve l'evento `ready` del tipo `tabpage`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato
Domanda: A cosa serve l'evento `connected` del tipo `tabpage`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato
Domanda: A cosa serve l'evento `responsiveChanged` del tipo `tabpage`?
Risposta: Evento chiamato quando il componente cambia stato responsive
Domanda: Quali sono gli attributi del tipo `framedtabpage`?
Risposta: Gli attributi del tipo `framedtabpage` sono i seguenti: <br /><ul><li>`href`</li><li>`loadonactivate`</li><li>`loadOnFirstActivation`</li><li>`resetCaptionOnRefresh`</li><li>`forzaabilitato`</li><li>`funzione`</li><li>`op`</li><li>`params`</li></ul>
Domanda: Quali sono gli eventi del tipo `framedtabpage`?
Risposta: Gli eventi del tipo `framedtabpage` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `active` del tipo `framedtabpage`?
Risposta: Se true, la pagina assume lo stato attivo
Domanda: A cosa serve la proprietÃ  `caption` del tipo `framedtabpage`?
Risposta: Titolo della pagina
Domanda: A cosa serve la proprietÃ  `closeable` del tipo `framedtabpage`?
Risposta: Mostra/nasconde il bottone di chiusura della pagina.
Domanda: A cosa serve la proprietÃ  `mainicon` del tipo `framedtabpage`?
Risposta: Icona della pagina, mostrata a sinistra del titolo.\nSe la pagina Ã¨ aperta da una voce di menu, l'icona viene ereditata dal menuItem
Domanda: A cosa serve la proprietÃ  `ref` del tipo `framedtabpage`?
Risposta: Riferimento al nome della lista contenuta in questa tabpage.\nUsato solo se il tabcontrol Ã¨ definito come contenitore dei sottolivelli di una lista (cis:lista con sublevelmode=\"TABS\").
Domanda: A cosa serve la proprietÃ  `markup` del tipo `framedtabpage`?
Risposta: Contenuto HTML della pagina
Domanda: A cosa serve la proprietÃ  `loadingtext` del tipo `framedtabpage`?
Risposta: Testo del messaggio di caricamento, mostrato al posto del titolo della linguetta mentre il contenuto dell'iFrame Ã¨ in caricamento.
Domanda: A cosa serve la proprietÃ  `loadingicon` del tipo `framedtabpage`?
Risposta: Icona di caricamento, mostrata al posto dell'icona della linguetta mentre il contenuto dell'iFrame Ã¨ in caricamento
Domanda: A cosa serve la proprietÃ  `index` del tipo `framedtabpage`?
Risposta: Posiziona il nuovo tab all'indice specificato
Domanda: A cosa serve la proprietÃ  `appendBefore` del tipo `framedtabpage`?
Risposta: Posiziona il nuovo tab prima del tab specificato
Domanda: A cosa serve la proprietÃ  `appendAfter` del tipo `framedtabpage`?
Risposta: Posiziona il nuovo tab di seguito al tab specificato
Domanda: A cosa serve la proprietÃ  `parentTab` del tipo `framedtabpage`?
Risposta: Riferimento tab padre. Posiziona il nuovo tab di seguito al parent, dopo tutti i tab con stesso parent
Domanda: A cosa serve la proprietÃ  `` del tipo `framedtabpage`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `afteropen` del tipo `framedtabpage`?
Risposta: Evento lanciato dopo che una window Ã¨ stata aperta e visualizzata
Domanda: A cosa serve l'evento `afterclose` del tipo `framedtabpage`?
Risposta: Evento lanciato dopo che una tab Ã¨ stata chiusa
Domanda: Quali sono gli attributi del tipo `functionareamarkup`?
Risposta: Gli attributi del tipo `functionareamarkup` sono i seguenti: <br /><ul><li>`beforetitle`</li></ul>
Domanda: Quali sono gli eventi del tipo `functionareamarkup`?
Risposta: Gli eventi del tipo `functionareamarkup` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `fieldtooltipiconparams`?
Risposta: Gli attributi del tipo `fieldtooltipiconparams` sono i seguenti: <br /><ul><li>`mainclass`</li><li>`icon`</li><li>`type`</li><li>`position`</li></ul>
Domanda: Quali sono gli eventi del tipo `fieldtooltipiconparams`?
Risposta: Gli eventi del tipo `fieldtooltipiconparams` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `seq_webcall`?
Risposta: Gli attributi del tipo `seq_webcall` sono i seguenti: <br /><ul><li>`autoload`</li><li>`command`</li><li>`context`</li><li>`enctype`</li><li>`forcefile`</li><li>`forzaabilitato`</li><li>`funzione`</li><li>`method`</li><li>`op`</li><li>`params`</li><li>`url`</li><li>`messageHandler`</li><li>`replacemarkup`</li><li>`replaceNode`</li><li>`appendMarkup`</li><li>`messageMode`</li><li>`container`</li><li>`preRequestMessage`</li><li>`preRequestCaption`</li><li>`reloadMode`</li><li>`appendBCSO`</li></ul>
Domanda: Quali sono gli eventi del tipo `seq_webcall`?
Risposta: Gli eventi del tipo `seq_webcall` sono i seguenti: <br /><ul><li>`beforeload`</li><li>`afterload`</li><li>`onerror`</li><li>`afterparsehtml`</li><li>`afterparseblob`</li><li>`always`</li><li>`showwaitpanel`</li><li>`hidewaitpanel`</li><li>`beforedorequest`</li><li>`gestiscimessaggi`</li><li>`isinerror`</li><li>`onvalidate`</li></ul>
Domanda: Quali sono gli attributi del tipo `datalist`?
Risposta: Gli attributi del tipo `datalist` sono i seguenti: <br /><ul><li>`columns`</li><li>`canwrap`</li><li>`displayformat`</li><li>`enumerato`</li><li>`enumjs`</li><li>`keepselection`</li><li>`keyattr`</li><li>`filter`</li><li>`maxitems`</li><li>`recordenumerato`</li><li>`multiselect`</li><li>`readonly`</li><li>`request`</li><li>`rows`</li><li>`selectionboxvisible`</li><li>`selectiondisabled`</li><li>`sortable`</li><li>`sorticon`</li><li>`valueattrs`</li><li>`visibleitems`</li><li>`title`</li><li>`withheaders`</li><li>`withmenu`</li><li>`withrowcount`</li><li>`withtitle`</li></ul>
Domanda: Quali sono gli eventi del tipo `datalist`?
Risposta: Gli eventi del tipo `datalist` sono i seguenti: <br /><ul><li>`datachanged`</li><li>`itemclick`</li><li>`itemdoubleclick`</li></ul>
Domanda: A cosa serve la proprietÃ  `caption` del tipo `datalist`?
Risposta: Etichetta (titolo) del campo.\nIl default Ã¨ il parametro \"name\" del componente
Domanda: A cosa serve la proprietÃ  `captionposition` del tipo `datalist`?
Risposta: Posizione del titolo rispetto al contenuto.\nIl default Ã¨ deciso dal contenitore padre (in genere un elemento di layout) se espone a sua volta un attributo \"captionposition\", altrimenti: \n   - \"right\" per cis-ui-checkbox e cis-ui-radiobutton\n   - \"left\" per tutti gli altri fields
Domanda: A cosa serve la proprietÃ  `captionFixed` del tipo `datalist`?
Risposta: Imposta lo stile \"fixed\" (larghezza uguale al contenuto) per il layout \"tablelayout\"
Domanda: A cosa serve la proprietÃ  `kill0` del tipo `datalist`?
Risposta: Se true, il valore \"0\" viene omesso.
Domanda: A cosa serve la proprietÃ  `locale` del tipo `datalist`?
Risposta: Imposta il lovale specifico di questo campo
Domanda: A cosa serve la proprietÃ  `labelonly` del tipo `datalist`?
Risposta: Se true, il campo viene renderizzato solo come label.
Domanda: A cosa serve la proprietÃ  `nodo` del tipo `datalist`?
Risposta: Il nodo XML contenente le informazioni sul campo.\nVengono valorizzati in automatico i parametri \"name\", \"id\" e \"varname\" con il name() del nodo XML.\nSe passato come attributo, il valore Ã¨ preso come path completo del nodo da copiare. Utilizzare la funzione xsl path() per trovare il full path del contesto corrente. Es: nodo=\"{path()}/CdPDC\"
Domanda: A cosa serve la proprietÃ  `required` del tipo `datalist`?
Risposta: Se true, il campo Ã¨ obbligatorio.\nUn campo obbligatorio non valorizzato blocca le operazioni di submit, lanciando un errore client.
Domanda: A cosa serve la proprietÃ  `requiredText` del tipo `datalist`?
Risposta: Testo del tooltip quando il componente non ha valore e required Ã¨ 'true'
Domanda: A cosa serve la proprietÃ  `size` del tipo `datalist`?
Risposta: Imposta la dimensione del campo.\nL'unitÃ  utilizzata Ã¨ ch (character), e corrisponde alla larghezza del carattere 0 (zero).\nE' una misura indicativa e semplice da utilizzare per dimensionare un campo.\nIl default Ã¨:\n- 20 per cis-ui-textbox\n- 8 per cis-ui-decimalbox
Domanda: A cosa serve la proprietÃ  `captioncolspan` del tipo `datalist`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene la caption del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve la proprietÃ  `submitOnKeyEnter` del tipo `datalist`?
Risposta: Se true, premendo il tasto ENTER mentre si ha il focus sul componente, viene inviata la form che lo contiene.
Domanda: A cosa serve la proprietÃ  `trackChanges` del tipo `datalist`?
Risposta: Imposta un attributo \"changed\" sul componente HTML quando il valore subisce una variazione.
Domanda: A cosa serve la proprietÃ  `value` del tipo `datalist`?
Risposta: Il valore del campo
Domanda: A cosa serve la proprietÃ  `wrap` del tipo `datalist`?
Risposta: Se true, segnala che il titolo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento titolo.
Domanda: A cosa serve la proprietÃ  `validatorTooltip` del tipo `datalist`?
Risposta: Parametri del tooltip di validazione
Domanda: A cosa serve la proprietÃ  `validVisible` del tipo `datalist`?
Risposta: Se true, lo stato grafico di \"valido\" Ã¨ visibile
Domanda: A cosa serve la proprietÃ  `tooltipIconVisible` del tipo `datalist`?
Risposta: Se true, il testo del validatore viene nascosto a prescindere dallo stato
Domanda: A cosa serve la proprietÃ  `tabIndex` del tipo `datalist`?
Risposta: Ordinale di sequenza di navigazione del campo.\nUn valore positivo significa che, navigando con la tastiera, il campo deve ottenere il focus in ordine con il valore dell'attributo.\nIl valore \"0\" significa che il campo deve ottenere il focus dopo qualsiasi valore di tabIndex positivo di altri campi.\nQualsiasi valore negativo imposta il campo come non raggiungibile da tastiera.
Domanda: A cosa serve la proprietÃ  `tooltipIcon` del tipo `datalist`?
Risposta: Parametri dell'icona del tooltip
Domanda: A cosa serve la proprietÃ  `` del tipo `datalist`?
Risposta: Attributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `onvalidate` del tipo `datalist`?
Risposta: Funzione di validazione personalizzata utente
Domanda: A cosa serve l'evento `valuechanged` del tipo `datalist`?
Risposta: Evento di cambio del valore. \nViene generalmente chiamato tutte le volte che un valore cambia graficamente, ad esempio per ogni carattere digitato in una casella di testo.\nViene chiamato anche quando il valore viene azzerato
Domanda: Quali sono gli attributi del tipo `basecomponent`?
Risposta: Gli attributi del tipo `basecomponent` sono i seguenti: <br /><ul><li>`id`</li><li>`name`</li><li>`varname`</li><li>`tooltip`</li><li>`tooltipposition`</li><li>`style`</li><li>`mainclass`</li><li>`role`</li><li>`skin`</li><li>`hidden`</li><li>`unselectable`</li><li>`disabled`</li><li>`contextMenuEnabled`</li><li>`flexible`</li><li>`userattrs`</li><li>`height`</li><li>`width`</li><li>`left`</li><li>`top`</li><li>`permessi`</li><li>`tmode`</li><li>`colspan`</li></ul>
Domanda: Quali sono gli eventi del tipo `basecomponent`?
Risposta: Gli eventi del tipo `basecomponent` sono i seguenti: <br /><ul><li>`beforeclick`</li><li>`click`</li><li>`ready`</li><li>`connected`</li><li>`responsiveChanged`</li></ul>
Domanda: Quali sono gli attributi del tipo `field`?
Risposta: Gli attributi del tipo `field` sono i seguenti: <br /><ul><li>`caption`</li><li>`captionposition`</li><li>`captionFixed`</li><li>`kill0`</li><li>`locale`</li><li>`labelonly`</li><li>`nodo`</li><li>`readonly`</li><li>`required`</li><li>`requiredText`</li><li>`size`</li><li>`captioncolspan`</li><li>`submitOnKeyEnter`</li><li>`trackChanges`</li><li>`value`</li><li>`wrap`</li><li>`validatorTooltip`</li><li>`validVisible`</li><li>`tooltipIconVisible`</li><li>`tabIndex`</li><li>`tooltipIcon`</li></ul>
Domanda: Quali sono gli eventi del tipo `field`?
Risposta: Gli eventi del tipo `field` sono i seguenti: <br /><ul><li>`onvalidate`</li><li>`valuechanged`</li></ul>
Domanda: A cosa serve la proprietÃ  `id` del tipo `field`?
Risposta: Attributo id dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `name` del tipo `field`?
Risposta: Attributo name dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `varname` del tipo `field`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve la proprietÃ  `tooltip` del tipo `field`?
Risposta: Testo del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione
Domanda: A cosa serve la proprietÃ  `tooltipposition` del tipo `field`?
Risposta: Posizione del tooltip.
Domanda: A cosa serve la proprietÃ  `style` del tipo `field`?
Risposta: Stile CSS inline dell'elemento HTML principale
Domanda: A cosa serve la proprietÃ  `mainclass` del tipo `field`?
Risposta: Classe CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente
Domanda: A cosa serve la proprietÃ  `role` del tipo `field`?
Risposta: Attributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript
Domanda: A cosa serve la proprietÃ  `skin` del tipo `field`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css
Domanda: A cosa serve la proprietÃ  `hidden` del tipo `field`?
Risposta: Se true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento
Domanda: A cosa serve la proprietÃ  `unselectable` del tipo `field`?
Risposta: Se true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu
Domanda: A cosa serve la proprietÃ  `disabled` del tipo `field`?
Risposta: Se true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento
Domanda: A cosa serve la proprietÃ  `contextMenuEnabled` del tipo `field`?
Risposta: Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.
Domanda: A cosa serve la proprietÃ  `flexible` del tipo `field`?
Risposta: Se true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento
Domanda: A cosa serve la proprietÃ  `userattrs` del tipo `field`?
Risposta: Elenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"
Domanda: A cosa serve la proprietÃ  `height` del tipo `field`?
Risposta: Imposta il valore \"height\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `width` del tipo `field`?
Risposta: Imposta il valore \"width\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `left` del tipo `field`?
Risposta: Imposta il valore \"left\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `top` del tipo `field`?
Risposta: Imposta il valore \"top\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `permessi` del tipo `field`?
Risposta: Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no
Domanda: A cosa serve la proprietÃ  `tmode` del tipo `field`?
Risposta: Indica se il componente Ã¨ in modalitÃ  T (liste inline)
Domanda: A cosa serve la proprietÃ  `colspan` del tipo `field`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeclick` del tipo `field`?
Risposta: Evento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.
Domanda: A cosa serve l'evento `click` del tipo `field`?
Risposta: Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)
Domanda: A cosa serve l'evento `ready` del tipo `field`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato
Domanda: A cosa serve l'evento `connected` del tipo `field`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato
Domanda: A cosa serve l'evento `responsiveChanged` del tipo `field`?
Risposta: Evento chiamato quando il componente cambia stato responsive
Domanda: Quali sono gli attributi del tipo `menubase`?
Risposta: Gli attributi del tipo `menubase` sono i seguenti: <br /><ul><li>`closeonmouseleave`</li><li>`closeonmouseleavedelay`</li><li>`items`</li><li>`showicon`</li><li>`showmenuhandler`</li><li>`showmenuitemhandler`</li><li>`showsubicon`</li><li>`framecontainer`</li></ul>
Domanda: Quali sono gli eventi del tipo `menubase`?
Risposta: Gli eventi del tipo `menubase` sono i seguenti: <br /><ul><li>`itemclick`</li></ul>
Domanda: A cosa serve la proprietÃ  `id` del tipo `menubase`?
Risposta: Attributo id dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `name` del tipo `menubase`?
Risposta: Attributo name dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `varname` del tipo `menubase`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve la proprietÃ  `tooltip` del tipo `menubase`?
Risposta: Testo del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione
Domanda: A cosa serve la proprietÃ  `tooltipposition` del tipo `menubase`?
Risposta: Posizione del tooltip.
Domanda: A cosa serve la proprietÃ  `style` del tipo `menubase`?
Risposta: Stile CSS inline dell'elemento HTML principale
Domanda: A cosa serve la proprietÃ  `mainclass` del tipo `menubase`?
Risposta: Classe CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente
Domanda: A cosa serve la proprietÃ  `role` del tipo `menubase`?
Risposta: Attributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript
Domanda: A cosa serve la proprietÃ  `skin` del tipo `menubase`?
Risposta: Skin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css
Domanda: A cosa serve la proprietÃ  `hidden` del tipo `menubase`?
Risposta: Se true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento
Domanda: A cosa serve la proprietÃ  `unselectable` del tipo `menubase`?
Risposta: Se true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu
Domanda: A cosa serve la proprietÃ  `disabled` del tipo `menubase`?
Risposta: Se true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento
Domanda: A cosa serve la proprietÃ  `contextMenuEnabled` del tipo `menubase`?
Risposta: Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.
Domanda: A cosa serve la proprietÃ  `flexible` del tipo `menubase`?
Risposta: Se true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento
Domanda: A cosa serve la proprietÃ  `userattrs` del tipo `menubase`?
Risposta: Elenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"
Domanda: A cosa serve la proprietÃ  `height` del tipo `menubase`?
Risposta: Imposta il valore \"height\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `width` del tipo `menubase`?
Risposta: Imposta il valore \"width\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `left` del tipo `menubase`?
Risposta: Imposta il valore \"left\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `top` del tipo `menubase`?
Risposta: Imposta il valore \"top\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `permessi` del tipo `menubase`?
Risposta: Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no
Domanda: A cosa serve la proprietÃ  `tmode` del tipo `menubase`?
Risposta: Indica se il componente Ã¨ in modalitÃ  T (liste inline)
Domanda: A cosa serve la proprietÃ  `colspan` del tipo `menubase`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeclick` del tipo `menubase`?
Risposta: Evento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.
Domanda: A cosa serve l'evento `click` del tipo `menubase`?
Risposta: Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)
Domanda: A cosa serve l'evento `ready` del tipo `menubase`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato
Domanda: A cosa serve l'evento `connected` del tipo `menubase`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato
Domanda: A cosa serve l'evento `responsiveChanged` del tipo `menubase`?
Risposta: Evento chiamato quando il componente cambia stato responsive
Domanda: Quali sono gli attributi del tipo `lista-buttons`?
Risposta: Gli attributi del tipo `lista-buttons` sono i seguenti: <br /><ul><li>`clickableRowTrigger`</li><li>`messageHandler`</li><li>`modalita`</li><li>`single`</li></ul>
Domanda: Quali sono gli eventi del tipo `lista-buttons`?
Risposta: Gli eventi del tipo `lista-buttons` sono i seguenti: <br /><ul><li>`beforeload`</li><li>`afterload`</li><li>`onerror`</li><li>`always`</li></ul>
Domanda: A cosa serve la proprietÃ  `url` del tipo `lista-buttons`?
Risposta: Indirizzo di base della risorsa da visualizzare
Domanda: A cosa serve la proprietÃ  `appendListFilter` del tipo `lista-buttons`?
Risposta: Valido solo per bottoni contenuti direttamente in una lista.\nAggiunge i valori del filtro della lista all'url da chiamare.
Domanda: A cosa serve la proprietÃ  `params` del tipo `lista-buttons`?
Risposta: Parametri chiave/valore da appendere all'url dell'iFrame
Domanda: A cosa serve la proprietÃ  `frameContainer` del tipo `lista-buttons`?
Risposta: Riferimento javascript al componente \"cis-ui:tabs\" dentro cui aprire questo link
Domanda: A cosa serve la proprietÃ  `tabParams` del tipo `lista-buttons`?
Risposta: Parametri del nuovo tab che verrÃ  aperto dentro \"framecontainer\"
Domanda: A cosa serve la proprietÃ  `` del tipo `lista-buttons`?
Risposta: Evento lanciato dopo che una window ha assunto lo stato attivo, quando cioÃ¨ passa in primo piano\n\nEvento lanciato dopo che una window Ã¨ stata chiusa per qualsiasi motivo (parametro closeReason)\n\nEvento lanciato dopo che una window Ã¨ stata aperta e visualizzata\n\nSe true, viene impostato uno stile overflow=auto all'elemento e ai sottoelementi.\n\nEvento lanciato prima che una window venga chiusa per qualsiasi motivo.\nSi puÃ² interrompere la chiusura ritornando un valore false\n\nEvento lanciato prima che una window venga aperta.\nSi puÃ² interrompere l'apertura ritornando un valore false\n\nImposta il testo posto nella barra inferiore della window.\nSe la window rappresnta un PDC, di default viene impostato con i valori di \"ultagg\" e \"utente\"\n\nParametri del bottone di apertura della window\n\nTitolo della window.\nIl default Ã¨ attribuito dal componente cis:pagina, altrimenti Ã¨ \"Finestra senza titolo\"\n\nMostra/nasconde l'icona per chiudere la window.\n\nEvento lanciato dopo che una window ha perso lo stato attivo, quando cioÃ¨ passa in secondo piano\n\nAbilita/disabilita la funzionalitÃ  di trascinamento.\n\nContenuto HTML dell'area adibita alle funzioni speciali della window.\nIl contenuto viene visualizzato tra il titolo e le icone di controllo di stato\n\nMostra/nasconde l'icona per minimizzare la window.\n\nMostra/nasconde l'icona per ingrandire a tutto schermo la window.\n\nSe true, la window Ã¨ modale.\nUna window modale non puÃ² perdere lo stato attivo.\n\nAbilita/disabilita gli handler di ridimensionamento.\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css.\nIl preset \"simple\" imposta i seguenti parametri:\n- withIcon = false;\n- minIcon = false;\n- maxIcon = false;\n- withBottomBar = false;\n\nPosizione iniziale della window.\n\nStato iniziale della window.\n\nMostra/nasconde la barra inferiore della window, generalmente utilizzata per aggiungere messaggi di stato.\n\nMostra/nasconde la barra superiore della window, contenente i bottoni per chiudere/ridimensionare la window.\n\nSe true, alla chiusura della window viene lanciata la funzione di reload nella pagina del componente che ne ha richiesto l'apertura.\nVale true se la window Ã¨ una iFrame\n\nModalitÃ  reload del contesto parent.\nIl default Ã¨ \"list\".\n\nMostra/nasconde l'icona principale della window.\n\nClasse css dell'elemento che contiene il footer della window.\n\nClasse css del testo footer della window.\n\nClasse css del testo della barra del titolo.\n\nTooltip di sistema che compare sul bottone di chiusura della window.\n\nClasse css dell'elemento contenitore del iFrame o del markup principale della window.\n\nClasse css del contenitore degli elementi a sinistra del testo del titolo.\n\nClasse css del contenitore degli elementi a destra del testo del titolo.\n\nClasse css dell'icona principale della window.\n\nClasse css dell'elemento che contiene l'icona principale della window.\n\nClasse css aggiuntiva dell'icona principale della window, utilizzata lato applicativo.\n\nTooltip di sistema che compare sul bottone per ripristinare la dimensione originale della window.\n\nTooltip di sistema che compare sul bottone per ingrandire a tutto schermo la window.\n\nTooltip di sistema che compare sul bottone per minimizzare la window.\n\nClasse css dell'elemento che contiene una window modale.\n\nClasse css della barra del titolo.\n\nClasse css comune a tutte le icone della barra del titolo.\n\nBottone che ha chiamato il visualizzatore\n\nLista relativa al bottone che ha chiamato l'apertura di questa window\n\nRiga della lista relativa al bottone che ha chiamato l'apertura di questa window\n\nAttributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: Quali sono gli attributi del tipo `form-buttons`?
Risposta: Gli attributi del tipo `form-buttons` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del tipo `form-buttons`?
Risposta: Gli eventi del tipo `form-buttons` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `async` del tipo `form-buttons`?
Risposta: Se true, la submit Ã¨ una chiamata ajax.\nI dettagli della chiamata ajax possono essere espressi nel tag <request>
Domanda: A cosa serve la proprietÃ  `validate` del tipo `form-buttons`?
Risposta: Se true, indica che i componenti inviati nella request devono essere validati.
Domanda: A cosa serve la proprietÃ  `request` del tipo `form-buttons`?
Risposta: Parametri della chiata ajax, se async Ã¨ true
Domanda: A cosa serve la proprietÃ  `value` del tipo `form-buttons`?
Risposta: Valore da inviare al server, associato all'attributo \"name\"
Domanda: A cosa serve la proprietÃ  `` del tipo `form-buttons`?
Risposta: Classe css dell'icona del bottone\n\nPosizione dell'icona del bottone rispetto al testo.\n\nTesto del bottone\n\nClasse css dell'elemento che contiene l'icona del bottone.\n\nClasse css dell'elemento che contiene il testo del bottone.\n\nSe true, segnala che il testo puÃ² andare a capo.\nShortcut di uno stile css che imposta white-space:normal sulla classe dell'elemento del testo.\n\nAttributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: Quali sono gli attributi del tipo `type_window`?
Risposta: Gli attributi del tipo `type_window` sono i seguenti: <br /><ul><li>`autoOverflow`</li><li>`bottomtext`</li><li>`button`</li><li>`caption`</li><li>`closeicon`</li><li>`draggable`</li><li>`functionareamarkup`</li><li>`minicon`</li><li>`maxicon`</li><li>`modal`</li><li>`resizable`</li><li>`skin`</li><li>`startposition`</li><li>`windowstate`</li><li>`withbottombar`</li><li>`withtopbar`</li><li>`reloadParentAfterClose`</li><li>`reloadParentMode`</li><li>`withicon`</li></ul>
Domanda: Quali sono gli eventi del tipo `type_window`?
Risposta: Gli eventi del tipo `type_window` sono i seguenti: <br /><ul><li>`activated`</li><li>`afterclose`</li><li>`afteropen`</li><li>`beforeclose`</li><li>`beforeopen`</li><li>`deactivated`</li></ul>
Domanda: A cosa serve la proprietÃ  `id` del tipo `type_window`?
Risposta: Attributo id dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `name` del tipo `type_window`?
Risposta: Attributo name dell'elemento HTML del componente
Domanda: A cosa serve la proprietÃ  `varname` del tipo `type_window`?
Risposta: Nome della variabile javascript registrata nell'oggetto window
Domanda: A cosa serve la proprietÃ  `tooltip` del tipo `type_window`?
Risposta: Testo del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione
Domanda: A cosa serve la proprietÃ  `tooltipposition` del tipo `type_window`?
Risposta: Posizione del tooltip.
Domanda: A cosa serve la proprietÃ  `style` del tipo `type_window`?
Risposta: Stile CSS inline dell'elemento HTML principale
Domanda: A cosa serve la proprietÃ  `mainclass` del tipo `type_window`?
Risposta: Classe CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente
Domanda: A cosa serve la proprietÃ  `role` del tipo `type_window`?
Risposta: Attributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript
Domanda: A cosa serve la proprietÃ  `hidden` del tipo `type_window`?
Risposta: Se true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento
Domanda: A cosa serve la proprietÃ  `unselectable` del tipo `type_window`?
Risposta: Se true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu
Domanda: A cosa serve la proprietÃ  `disabled` del tipo `type_window`?
Risposta: Se true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento
Domanda: A cosa serve la proprietÃ  `contextMenuEnabled` del tipo `type_window`?
Risposta: Se false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.
Domanda: A cosa serve la proprietÃ  `flexible` del tipo `type_window`?
Risposta: Se true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento
Domanda: A cosa serve la proprietÃ  `userattrs` del tipo `type_window`?
Risposta: Elenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"
Domanda: A cosa serve la proprietÃ  `height` del tipo `type_window`?
Risposta: Imposta il valore \"height\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `width` del tipo `type_window`?
Risposta: Imposta il valore \"width\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `left` del tipo `type_window`?
Risposta: Imposta il valore \"left\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `top` del tipo `type_window`?
Risposta: Imposta il valore \"top\" nello stile inline css dell'elemento principale
Domanda: A cosa serve la proprietÃ  `permessi` del tipo `type_window`?
Risposta: Permessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no
Domanda: A cosa serve la proprietÃ  `tmode` del tipo `type_window`?
Risposta: Indica se il componente Ã¨ in modalitÃ  T (liste inline)
Domanda: A cosa serve la proprietÃ  `colspan` del tipo `type_window`?
Risposta: Se il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: A cosa serve l'evento `beforeclick` del tipo `type_window`?
Risposta: Evento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.
Domanda: A cosa serve l'evento `click` del tipo `type_window`?
Risposta: Evento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)
Domanda: A cosa serve l'evento `ready` del tipo `type_window`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato
Domanda: A cosa serve l'evento `connected` del tipo `type_window`?
Risposta: Evento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato
Domanda: A cosa serve l'evento `responsiveChanged` del tipo `type_window`?
Risposta: Evento chiamato quando il componente cambia stato responsive
Domanda: Quali sono gli attributi del tipo `paginatore`?
Risposta: Gli attributi del tipo `paginatore` sono i seguenti: <br /><ul><li>`withnumrecords`</li><li>`withMinimizeButton`</li><li>`endlesspaging`</li></ul>
Domanda: Quali sono gli eventi del tipo `paginatore`?
Risposta: Gli eventi del tipo `paginatore` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `pagina_window`?
Risposta: Gli attributi del tipo `pagina_window` sono i seguenti: <br /><ul><li>`favicon`</li><li>`responsive`</li></ul>
Domanda: Quali sono gli eventi del tipo `pagina_window`?
Risposta: Gli eventi del tipo `pagina_window` sono i seguenti: <br /><ul></ul>
Domanda: A cosa serve la proprietÃ  `url` del tipo `pagina_window`?
Risposta: Indirizzo di base della risorsa da visualizzare
Domanda: A cosa serve la proprietÃ  `appendListFilter` del tipo `pagina_window`?
Risposta: Valido solo per bottoni contenuti direttamente in una lista.\nAggiunge i valori del filtro della lista all'url da chiamare.
Domanda: A cosa serve la proprietÃ  `params` del tipo `pagina_window`?
Risposta: Parametri chiave/valore da appendere all'url dell'iFrame
Domanda: A cosa serve la proprietÃ  `frameContainer` del tipo `pagina_window`?
Risposta: Riferimento javascript al componente \"cis-ui:tabs\" dentro cui aprire questo link
Domanda: A cosa serve la proprietÃ  `tabParams` del tipo `pagina_window`?
Risposta: Parametri del nuovo tab che verrÃ  aperto dentro \"framecontainer\"
Domanda: A cosa serve la proprietÃ  `` del tipo `pagina_window`?
Risposta: Evento lanciato dopo che una window ha assunto lo stato attivo, quando cioÃ¨ passa in primo piano\n\nEvento lanciato dopo che una window Ã¨ stata chiusa per qualsiasi motivo (parametro closeReason)\n\nEvento lanciato dopo che una window Ã¨ stata aperta e visualizzata\n\nSe true, viene impostato uno stile overflow=auto all'elemento e ai sottoelementi.\n\nEvento lanciato prima che una window venga chiusa per qualsiasi motivo.\nSi puÃ² interrompere la chiusura ritornando un valore false\n\nEvento lanciato prima che una window venga aperta.\nSi puÃ² interrompere l'apertura ritornando un valore false\n\nImposta il testo posto nella barra inferiore della window.\nSe la window rappresnta un PDC, di default viene impostato con i valori di \"ultagg\" e \"utente\"\n\nParametri del bottone di apertura della window\n\nTitolo della window.\nIl default Ã¨ attribuito dal componente cis:pagina, altrimenti Ã¨ \"Finestra senza titolo\"\n\nMostra/nasconde l'icona per chiudere la window.\n\nEvento lanciato dopo che una window ha perso lo stato attivo, quando cioÃ¨ passa in secondo piano\n\nAbilita/disabilita la funzionalitÃ  di trascinamento.\n\nContenuto HTML dell'area adibita alle funzioni speciali della window.\nIl contenuto viene visualizzato tra il titolo e le icone di controllo di stato\n\nMostra/nasconde l'icona per minimizzare la window.\n\nMostra/nasconde l'icona per ingrandire a tutto schermo la window.\n\nSe true, la window Ã¨ modale.\nUna window modale non puÃ² perdere lo stato attivo.\n\nAbilita/disabilita gli handler di ridimensionamento.\n\nSkin del componente HTML.\nPuÃ² essere utilizzato per personalizzare stili css.\nIl preset \"simple\" imposta i seguenti parametri:\n- withIcon = false;\n- minIcon = false;\n- maxIcon = false;\n- withBottomBar = false;\n\nPosizione iniziale della window.\n\nStato iniziale della window.\n\nMostra/nasconde la barra inferiore della window, generalmente utilizzata per aggiungere messaggi di stato.\n\nMostra/nasconde la barra superiore della window, contenente i bottoni per chiudere/ridimensionare la window.\n\nSe true, alla chiusura della window viene lanciata la funzione di reload nella pagina del componente che ne ha richiesto l'apertura.\nVale true se la window Ã¨ una iFrame\n\nModalitÃ  reload del contesto parent.\nIl default Ã¨ \"list\".\n\nMostra/nasconde l'icona principale della window.\n\nClasse css dell'elemento che contiene il footer della window.\n\nClasse css del testo footer della window.\n\nClasse css del testo della barra del titolo.\n\nTooltip di sistema che compare sul bottone di chiusura della window.\n\nClasse css dell'elemento contenitore del iFrame o del markup principale della window.\n\nClasse css del contenitore degli elementi a sinistra del testo del titolo.\n\nClasse css del contenitore degli elementi a destra del testo del titolo.\n\nClasse css dell'icona principale della window.\n\nClasse css dell'elemento che contiene l'icona principale della window.\n\nClasse css aggiuntiva dell'icona principale della window, utilizzata lato applicativo.\n\nTooltip di sistema che compare sul bottone per ripristinare la dimensione originale della window.\n\nTooltip di sistema che compare sul bottone per ingrandire a tutto schermo la window.\n\nTooltip di sistema che compare sul bottone per minimizzare la window.\n\nClasse css dell'elemento che contiene una window modale.\n\nClasse css della barra del titolo.\n\nClasse css comune a tutte le icone della barra del titolo.\n\nBottone che ha chiamato il visualizzatore\n\nLista relativa al bottone che ha chiamato l'apertura di questa window\n\nRiga della lista relativa al bottone che ha chiamato l'apertura di questa window\n\nAttributo id dell'elemento HTML del componente\n\nAttributo name dell'elemento HTML del componente\n\nNome della variabile javascript registrata nell'oggetto window\n\nTesto del tooltip del componente.\nIl tooltip si attiva al passaggio col mouse sopra il componente.\nSe la stringa del tooltip viene separata da 2 caratteri pipe ( || ), la prima delle due parti Ã¨ il titolo del tooltip e la seconda Ã¨ la descrizione\n\nPosizione del tooltip.\n\nStile CSS inline dell'elemento HTML principale\n\nClasse CSS dell'elemento HTML principale.\nIl default Ã¨ una classe equivalente al nome del componente\n\nAttributo HTML \"role\" del componente\nPuÃ² essere utilizzato per personalizzare stili css o come selettore in funzioni javascript\n\nSe true nasconde l'elemento.\nImposta l'attributo HTML \"hidden\" dell'elemento principale.\nUtilizzato insieme alla classe css [isHidden] che imposta display:none sull'elemento\n\nSe true inibisce la selezione sull'elemento.\nImposta l'attributo HTML \"unselectable\" dell'elemento principale. \nUtilizzato insieme alla classe css [unselectable] che imposta user-select:none sull'elemento.\nIl default Ã¨ true per tutti i fields, i bottoni e i menu\n\nSe true disabilita l'elemento.\nImposta l'attributo HTML \"disabled\" dell'elemento principale.\nUtilizzato insieme alla classe css [disabled] che imposta pointer-events:none sull'elemento\n\nSe false disabilita l'azione di default del browser a seguito dell'evento click con il pulsante destro del mouse (apertura menu contestuale di sitema).\nSe false imposta l'attributo HTML \"oncontextmenu='return false'\" dell'elemento principale. \nGestisce l'evento oncontextmenu dell'elemento per abilitare/disabilitare il menu contestuale di sistema\nIl default Ã¨ true, tranne per il componente cis-ui-contextmenu.\n\nSe true rende l'elemento flessibile.\nUn elemento flessibile prende tutto il contenuto rimanente del contenitore.\nImposta l'attributo HTML \"flexible\" dell'elemento principale.\nUtilizzato insieme alla classe css [flexible] che imposta flex: 1 1 auto sull'elemento\n\nEvento chiamato prima di eseguire \"click\".\nRitornare false per bloccare il flusso dell'evento click.\n\nEvento click del componente, chiamato facendo un click completo sull'elemento (mousedown+mouseup)\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina e costruito.\nIl componente non Ã¨ ancora renderizzato\n\nEvento chiamato quando il componente Ã¨ stato aggiunto alla pagina, costruito e renderizzato\n\nEvento chiamato quando il componente cambia stato responsive\n\nElenco degli attributi custom da applicare al componente.\nOgni attributo viene aggiunto all'elemento HTML principale con il prefisso \"user-\"\n\nImposta il valore \"height\" nello stile inline css dell'elemento principale\n\nImposta il valore \"width\" nello stile inline css dell'elemento principale\n\nImposta il valore \"left\" nello stile inline css dell'elemento principale\n\nImposta il valore \"top\" nello stile inline css dell'elemento principale\n\nPermessi a cui Ã¨ sottoposto il componente. Se lo stato Ã¨ permesso, il componente viene visualizzato, altrimenti no\n\nIndica se il componente Ã¨ in modalitÃ  T (liste inline)\n\nSe il campo si trova dentro un cis-tablelayout, imposta l'attributo colspan sulla cella che contiene il body del campo.\nIl valore \"0\" equivale al valore \"cols\" impostato sul cis-tablelayout
Domanda: Quali sono gli attributi del tipo `pagina_form`?
Risposta: Gli attributi del tipo `pagina_form` sono i seguenti: <br /><ul><li>`method`</li><li>`action`</li><li>`enctype`</li></ul>
Domanda: Quali sono gli eventi del tipo `pagina_form`?
Risposta: Gli eventi del tipo `pagina_form` sono i seguenti: <br /><ul><li>`submit`</li><li>`validate`</li></ul>
Domanda: Quali sono gli attributi del tipo `pagina_titlebar`?
Risposta: Gli attributi del tipo `pagina_titlebar` sono i seguenti: <br /><ul><li>`desc`</li><li>`icon`</li><li>`reloadbutton`</li><li>`printbutton`</li></ul>
Domanda: Quali sono gli eventi del tipo `pagina_titlebar`?
Risposta: Gli eventi del tipo `pagina_titlebar` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `pagina_bottoni`?
Risposta: Gli attributi del tipo `pagina_bottoni` sono i seguenti: <br /><ul><li>`inserisci`</li><li>`modifica`</li><li>`conferma`</li><li>`elimina`</li><li>`annulla`</li></ul>
Domanda: Quali sono gli eventi del tipo `pagina_bottoni`?
Risposta: Gli eventi del tipo `pagina_bottoni` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `pagina_filtro`?
Risposta: Gli attributi del tipo `pagina_filtro` sono i seguenti: <br /><ul><li>`titolo`</li><li>`markupbefore`</li><li>`markup`</li><li>`markupafter`</li><li>`clearbutton`</li><li>`submit`</li><li>`captionposition`</li><li>`stampa`</li><li>`scarica`</li><li>`hidden`</li><li>`class`</li><li>`style`</li><li>`comandiinline`</li><li>`collapsible`</li></ul>
Domanda: Quali sono gli eventi del tipo `pagina_filtro`?
Risposta: Gli eventi del tipo `pagina_filtro` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `pagina_content`?
Risposta: Gli attributi del tipo `pagina_content` sono i seguenti: <br /><ul><li>`markupbefore`</li><li>`markup`</li><li>`markupafter`</li></ul>
Domanda: Quali sono gli eventi del tipo `pagina_content`?
Risposta: Gli eventi del tipo `pagina_content` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `infopanel`?
Risposta: Gli attributi del tipo `infopanel` sono i seguenti: <br /><ul><li>`collapsible`</li><li>`collapsebutton`</li><li>`withicon`</li><li>`icon`</li><li>`legend`</li><li>`collapsed`</li><li>`varname`</li></ul>
Domanda: Quali sono gli eventi del tipo `infopanel`?
Risposta: Gli eventi del tipo `infopanel` sono i seguenti: <br /><ul><li>`oncollapse`</li><li>`onexpand`</li></ul>
Domanda: Quali sono gli attributi del tipo `layout`?
Risposta: Gli attributi del tipo `layout` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli eventi del tipo `layout`?
Risposta: Gli eventi del tipo `layout` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `single-titlebar`?
Risposta: Gli attributi del tipo `single-titlebar` sono i seguenti: <br /><ul><li>`reloadButton`</li><li>`text`</li></ul>
Domanda: Quali sono gli eventi del tipo `single-titlebar`?
Risposta: Gli eventi del tipo `single-titlebar` sono i seguenti: <br /><ul></ul>
Domanda: Quali sono gli attributi del tipo `domreplacers`?
Risposta: Gli attributi del tipo `domreplacers` sono i seguenti: <br /><ul><li>`new`</li><li>`old`</li><li>`wait`</li><li>`resize`</li><li>`onlychilds`</li></ul>
Domanda: Quali sono gli eventi del tipo `domreplacers`?
Risposta: Gli eventi del tipo `domreplacers` sono i seguenti: <br /><ul></ul>
    